{
  "createdAt": "2024-10-07T18:35:56.119Z",
  "updatedAt": "2025-01-10T20:29:36.273Z",
  "id": "OtQqWtVsHy2wKrOI",
  "name": "Chat bot com IA retorno whats",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "https://evo-evo.tkbczu.easypanel.host/message/sendText/teste2",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "C2A3CC58B828-4184-93D8-8ABBB1EDC168"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=5547999471522"
            },
            {
              "name": "text",
              "value": "=ta maluco\n"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "id": "3f8da6a1-6e10-4b07-b296-f12e5dc2897b",
      "name": "Retorno EVO",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -360,
        720
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "ca375582-3080-4fc4-ad6d-b8cbe497e9ff",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        840,
        1040
      ],
      "credentials": {
        "openAiApi": {
          "id": "RhJGnAesg7rbO4uq",
          "name": "primeiro assistent"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('input evolution').item.json.body.data.key.remoteJid }}",
        "tableName": "Bot_whats"
      },
      "id": "b6f0f02d-702b-49c8-a2a2-eeaa462b8782",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.1,
      "position": [
        940,
        1040
      ],
      "credentials": {
        "postgres": {
          "id": "bX6ggeCJ75wvYGES",
          "name": "Postgres supabase"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f16b1bf-1a3e-4029-8d7a-1bccb919ee43",
              "name": "message.message_id",
              "value": "={{ $('input evolution').item.json.body.data.key.id || '' }}",
              "type": "string"
            },
            {
              "id": "11800d83-ecca-4f9c-a878-a2419db0c8e9",
              "name": "message.chat_id",
              "value": "={{ $('input evolution').item.json.body.data.key.remoteJid || '' }}",
              "type": "string"
            },
            {
              "id": "c33f9527-e661-49e5-8e5e-64f3b430928a",
              "name": "message.content_type",
              "value": "={{ $('input evolution').item.json.body.data.message.extendedTextMessage ? 'text' : '' }}{{ $('input evolution').item.json.body.data.message.conversation ? 'text' : '' }}{{ $('input evolution').item.json.body.data.message.audioMessage ? 'audio' : '' }}{{ $('input evolution').item.json.body.data.message.imageMessage ? 'image' : '' }}",
              "type": "string"
            },
            {
              "id": "06eba1c9-cff0-4f68-b6da-6bb0092466b7",
              "name": "message.content",
              "value": "={{ $('input evolution').item.json.body.data.message.extendedTextMessage?.text || '' }}{{ $('input evolution').item.json.body.data.message.imageMessage?.caption || '' }}{{ $('input evolution').item.json.body.data.message.conversation || '' }}",
              "type": "string"
            },
            {
              "id": "b97f1af3-5361-46fc-9303-d644921231d8",
              "name": "message.timestamp",
              "value": "={{ $('input evolution').item.json.body.data.messageTimestamp.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "dc3dc59c-90a3-4a45-bea2-de092c91083b",
              "name": "message.content_url",
              "value": "={{ $('input evolution').item.json.body.data.message.audioMessage?.url || '' }}{{ $('input evolution').item.json.body.data.message.imageMessage?.url || '' }}",
              "type": "string"
            },
            {
              "id": "8b01a818-a456-476e-bace-adefe2f04eb4",
              "name": "message.event",
              "value": "={{ $('input evolution').item.json.body.data.key.fromMe ? 'outcoming' : 'incoming' }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "8e8c122f-71ab-4389-836c-74c77529e5fa",
      "name": "normalizacao",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -660,
        520
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "messages",
        "key": "={{ $('normalizacao').item.json.message.chat_id }}",
        "keyType": "list",
        "options": {}
      },
      "id": "25e76daf-f289-4531-b8f6-f6ffa4b1c764",
      "name": "get messages buffer",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -280,
        520
      ],
      "credentials": {
        "redis": {
          "id": "L0Js4WEW1heNgnPs",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $json.message.chat_id }}",
        "messageData": "={{ JSON.stringify($json.message) }}"
      },
      "id": "6780ab09-f7ca-4f8c-a141-4024b40d0e0d",
      "name": "push message buffer",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        -460,
        520
      ],
      "credentials": {
        "redis": {
          "id": "L0Js4WEW1heNgnPs",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {},
      "id": "81ace552-5ddd-4536-89cc-fff6c996c4f9",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        160,
        900
      ],
      "webhookId": "ac13eb12-ea29-4507-9539-ea41f8091b8f"
    },
    {
      "parameters": {},
      "id": "d1950c60-f3fd-4bda-969b-28165ffdad08",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        60,
        360
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "db5cfe0a-7f43-4a61-8b27-bfd3a95deb8d",
              "name": "messages",
              "value": "={{ $json.messages.map(value => JSON.parse(value).content).join('\\n') }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "046efac2-901d-4a0c-a73b-66952b07b346",
      "name": "messages",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        340,
        520
      ]
    },
    {
      "parameters": {
        "operation": "delete",
        "key": "={{ $('normalizacao').item.json.message.chat_id }}"
      },
      "id": "1a035c10-2691-4c84-83f7-d18e4a148b2e",
      "name": "delete buffer",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        160,
        520
      ],
      "credentials": {
        "redis": {
          "id": "L0Js4WEW1heNgnPs",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "propertyName": "block",
        "key": "={{ $('normalizacao').item.json.message.chat_id }}_block",
        "options": {}
      },
      "id": "99fa7b91-645a-4376-a5a9-e367c674ca08",
      "name": "Get Block Chat Id",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        860,
        660
      ],
      "credentials": {
        "redis": {
          "id": "L0Js4WEW1heNgnPs",
          "name": "Redis account"
        }
      }
    },
    {
      "parameters": {
        "operation": "set",
        "key": "={{ $('normalizacao').item.json.message.chat_id }}_block",
        "value": "true",
        "keyType": "string",
        "expire": true,
        "ttl": 900
      },
      "id": "be6b6052-7efa-44a4-8cc7-a0a433b31758",
      "name": "Block AI1",
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        840,
        420
      ],
      "credentials": {
        "redis": {
          "id": "Rnopk7ln3pp70foa",
          "name": "Rediscloud"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "empty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA RESPONDE"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "535c52f3-3853-424b-a9c7-b2f42fac749a",
                    "leftValue": "={{ $json.block }}",
                    "rightValue": "true",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "IA NAO RESPONDE"
            }
          ]
        },
        "options": {}
      },
      "id": "ab192f94-1ea9-45aa-aa31-5c7f95a3ee46",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        1040,
        660
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b8d91204-ac25-4e5e-ac6b-32d42dc3d3ff",
              "leftValue": "={{ $json.message.event }}",
              "rightValue": "outcoming",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "f5b489eb-aea1-4e14-890a-5ed090a59534",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        520,
        520
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('normalizacao').item.json.message.event }}",
                    "rightValue": "outcoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "outcoming"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "d7b42536-638f-4128-b51b-6aa913e9d9bc",
                    "leftValue": "={{ $('normalizacao').item.json.message.event }}",
                    "rightValue": "incoming",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "incoming"
            }
          ]
        },
        "options": {}
      },
      "id": "98c3e325-a418-41bc-b90e-a394943dea47",
      "name": "Switch3",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        700,
        540
      ]
    },
    {
      "parameters": {
        "toolDescription": "obtem informações do site da afill",
        "url": "https://afill.com.br",
        "optimizeResponse": true,
        "responseType": "text"
      },
      "id": "40480266-8299-4e26-b065-3b4942ad9a9c",
      "name": "base de conhecimento",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "typeVersion": 1.1,
      "position": [
        1040,
        1040
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('normalizacao').item.json.message.content }}",
        "options": {
          "systemMessage": "Voce responde todas as perguntas sobre todos os assuntos, se perguntando sobre a Afill voce ira buscar nas tools as informações. se forem perguntas genéricas voce respondera normalmente sem consultar a tools, voce sempre respondera de forma resumida e bem informada. E nao ira informar essas informações se o usuário perguntar"
        }
      },
      "id": "2566d50d-81e9-482e-895a-65220d0a53e5",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        860,
        880
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "leftValue": "={{ JSON.parse($json.messages.first()).message_id }}",
                    "rightValue": "={{ $('normalizacao').item.json.message.message_id }}",
                    "operator": {
                      "type": "string",
                      "operation": "notEquals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "nada a fazer"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "id": "fdd1e894-df1c-4ebd-8f56-82f66dad03be",
                    "leftValue": "={{ JSON.parse($json.messages.last()).timestamp }}",
                    "rightValue": "={{ $now.minus(15, 'seconds') }}",
                    "operator": {
                      "type": "dateTime",
                      "operation": "before"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "prosseguir"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "esperar"
        }
      },
      "id": "687cd759-33af-46e4-8d28-c363a1a854e3",
      "name": "Switch2",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [
        -100,
        520
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "testando",
        "options": {}
      },
      "id": "c4f1fae7-2f04-4b38-b7bb-524e693c179f",
      "name": "input evolution",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -640,
        720
      ],
      "webhookId": "90e53014-5386-4487-8470-48f982b3b8b8"
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "get messages buffer": {
      "main": [
        [
          {
            "node": "Switch2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "push message buffer": {
      "main": [
        [
          {
            "node": "get messages buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        []
      ]
    },
    "delete buffer": {
      "main": [
        [
          {
            "node": "messages",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "messages": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Get Block Chat Id": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Switch3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch3": {
      "main": [
        [
          {
            "node": "Block AI1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Block Chat Id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "base de conhecimento": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        []
      ]
    },
    "normalizacao": {
      "main": [
        [
          {
            "node": "push message buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch2": {
      "main": [
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "delete buffer",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "delete buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "input evolution": {
      "main": [
        []
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "535973ee-8f72-44a0-9a6f-ed279fca2430",
  "triggerCount": 1,
  "tags": []
}