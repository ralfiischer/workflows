{
  "createdAt": "2024-11-11T19:55:05.463Z",
  "updatedAt": "2024-11-11T19:55:05.463Z",
  "id": "VWNJBk4tV8YfrCIg",
  "name": "My workflow 2",
  "active": false,
  "nodes": [
    {
      "parameters": {},
      "id": "97e8ec41-0c9c-4561-90a9-a52895c9d758",
      "name": "When clicking â€˜Test workflowâ€™",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        340,
        320
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT *\nFROM public.\"Instance\"\nWHERE \"connectionStatus\" = 'close';",
        "options": {}
      },
      "id": "45a6f3ae-adf9-4dee-9b86-ba64145cdec3",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        -100,
        0
      ]
    },
    {
      "parameters": {
        "operation": "select",
        "schema": {
          "__rl": true,
          "value": "public",
          "mode": "name"
        },
        "table": {
          "__rl": true,
          "value": "Instance",
          "mode": "list",
          "cachedResultName": "Instance"
        },
        "returnAll": true,
        "where": {
          "values": [
            {
              "column": "connectionStatus",
              "value": "close"
            }
          ]
        },
        "options": {}
      },
      "id": "059e47e0-6ed2-48c4-a5e2-f2755465991a",
      "name": "ConexÃµes Evolution",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.5,
      "position": [
        560,
        320
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "94591044-ee22-4577-b06d-bf3392184638",
              "leftValue": "={{ !!Object.keys($node[\"ConexÃµes Evolution\"].data).length }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "0230da01-30cd-4ae6-a475-1586e9e277e0",
      "name": "Encontrou Desconectado?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        780,
        320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://wapi.evo.smileia.com.br/message/sendText/SmileIA_Teste",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "apikey",
              "value": "=7274790CAFC3-42D6-A24E-27D9EB9CCEF6"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "number",
              "value": "=5511994989615"
            },
            {
              "name": "text",
              "value": "=ðŸš¨*InstÃ¢ncia Desconectada*ðŸš¨\n_Instancia:_ {{ $json.name }}\n_Numero:_ {{ $json.number }}\n_Desconectada:_ {{ $json.disconnectionAt }}"
            },
            {
              "name": "delay",
              "value": 2000
            }
          ]
        },
        "options": {}
      },
      "id": "77ebd47c-3297-4484-b4c8-391f2c68e1f5",
      "name": "Envia MSG",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1200,
        200
      ]
    },
    {
      "parameters": {},
      "id": "4350dd2f-e069-43d3-a7d0-df2d831147da",
      "name": "No Operation, do nothing",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1000,
        440
      ]
    },
    {
      "parameters": {
        "jsCode": "// FunÃ§Ã£o para formatar o campo disconnectionAt para o formato DD/MM/AAAA - HH:MM:SS no horÃ¡rio local\nfunction formatarData(timestamp) {\n  const data = new Date(timestamp);\n\n  // Extraindo os componentes da data no fuso horÃ¡rio de SÃ£o Paulo\n  const dia = String(data.getDate()).padStart(2, '0');\n  const mes = String(data.getMonth() + 1).padStart(2, '0'); // MÃªs comeÃ§a em 0\n  const ano = data.getFullYear();\n  const horas = String(data.getHours()).padStart(2, '0');\n  const minutos = String(data.getMinutes()).padStart(2, '0');\n  const segundos = String(data.getSeconds()).padStart(2, '0');\n  \n  return `${dia}/${mes}/${ano} - ${horas}:${minutos}:${segundos}`;\n}\n\n// Mapeia os itens de entrada para extrair apenas os campos desejados\nreturn $input.all().map(item => ({\n  name: item.json.name,\n  number: item.json.number,\n  profileName: item.json.profileName,\n  disconnectionAt: formatarData(new Date(item.json.disconnectionAt).toLocaleString(\"en-US\", { timeZone: \"America/Sao_Paulo\" }))\n}));"
      },
      "id": "66597990-f22a-4399-b60a-218fd6ae856d",
      "name": "Code Analise",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1000,
        200
      ]
    }
  ],
  "connections": {
    "When clicking â€˜Test workflowâ€™": {
      "main": [
        [
          {
            "node": "ConexÃµes Evolution",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ConexÃµes Evolution": {
      "main": [
        [
          {
            "node": "Encontrou Desconectado?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Encontrou Desconectado?": {
      "main": [
        [
          {
            "node": "Code Analise",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code Analise": {
      "main": [
        [
          {
            "node": "Envia MSG",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "c621cd21-9d22-4eb1-9f7c-ef809225b49c",
  "triggerCount": 0,
  "tags": [
    {
      "createdAt": "2024-10-30T13:05:50.798Z",
      "updatedAt": "2024-10-30T13:05:50.798Z",
      "id": "YEMOCqgKzuvlDA5d",
      "name": "system"
    }
  ]
}