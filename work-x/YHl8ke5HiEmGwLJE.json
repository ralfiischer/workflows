{
  "createdAt": "2024-11-04T12:09:46.832Z",
  "updatedAt": "2024-11-05T14:22:08.474Z",
  "id": "YHl8ke5HiEmGwLJE",
  "name": "My workflow 2",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "id": "4d96f0ce-9ad3-44d5-80fa-30b85c9f65e2",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        1240,
        380
      ]
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-br\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Formulário de Contato com Jogo da Cobrinha</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #e0f7fa;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            height: 100vh;\n            margin: 0;\n            overflow: hidden;\n            position: relative;\n        }\n\n        canvas {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: -1;\n        }\n\n        .container {\n            background-color: #ffffff;\n            border-radius: 15px;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            padding: 30px;\n            width: 100%;\n            max-width: 400px;\n            box-sizing: border-box;\n            text-align: center;\n            z-index: 1;\n        }\n\n        .thank-you {\n            display: none;\n            background-color: #ffffff;\n            border-radius: 15px;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            padding: 30px;\n            width: 100%;\n            max-width: 400px;\n            box-sizing: border-box;\n            text-align: center;\n            z-index: 1;\n        }\n\n        h2 {\n            color: #007bb5;\n            margin-bottom: 20px;\n        }\n\n        label {\n            color: #007bb5;\n            font-weight: bold;\n            display: block;\n            margin-bottom: 5px;\n        }\n\n        input {\n            width: 100%;\n            padding: 10px;\n            margin-bottom: 15px;\n            border: 1px solid #007bb5;\n            border-radius: 5px;\n            box-sizing: border-box;\n            font-size: 14px;\n        }\n\n        button {\n            width: 100%;\n            padding: 10px;\n            background-color: #007bb5;\n            color: #ffffff;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            transition: background-color 0.3s ease;\n        }\n\n        button:hover {\n            background-color: #005f86;\n        }\n\n        .thank-you-message {\n            color: #007bb5;\n            font-size: 18px;\n            line-height: 1.5;\n        }\n    </style>\n</head>\n<body>\n    <canvas id=\"gameCanvas\"></canvas>\n\n    <div class=\"container\" id=\"formContainer\">\n        <h2>Formulário de Contato</h2>\n        <form id=\"contactForm\">\n            <label for=\"name\">Nome:</label>\n            <input type=\"text\" id=\"name\" name=\"name\" required placeholder=\"Digite seu nome\">\n\n            <label for=\"contact\">Contato:</label>\n            <input type=\"text\" id=\"contact\" name=\"contact\" required placeholder=\"Digite seu contato\">\n\n            <label for=\"email\">Email:</label>\n            <input type=\"email\" id=\"email\" name=\"email\" required placeholder=\"Digite seu email\">\n\n            <button type=\"submit\">Enviar</button>\n        </form>\n    </div>\n\n    <div class=\"thank-you\" id=\"thankYouContainer\">\n        <h2>Obrigado pelo seu contato!</h2>\n        <p class=\"thank-you-message\">Agradecemos por entrar em contato. Em instantes, nossa equipe retornará o contato no WhatsApp!</p>\n        <button onclick=\"closeThankYou()\">OK</button>\n    </div>\n\n    <iframe name=\"hidden_iframe\" style=\"display:none;\"></iframe>\n\n    <script>\n        // Exibe a mensagem de agradecimento\n        function showThankYouMessage() {\n            document.getElementById('formContainer').style.display = 'none';\n            document.getElementById('thankYouContainer').style.display = 'block';\n        }\n\n        // Fecha a mensagem de agradecimento\n        function closeThankYou() {\n            document.getElementById('thankYouContainer').style.display = 'none';\n            document.getElementById('formContainer').style.display = 'block';\n            document.getElementById('contactForm').reset();\n            window.location.href = 'https://www.afill.com.br';\n        }\n\n        // Envia os dados do formulário\n        document.getElementById('contactForm').addEventListener('submit', function(event) {\n            event.preventDefault();\n            const formData = new FormData(event.target);\n\n            fetch('https://n8n-n8n-principal.tkbczu.easypanel.host/webhook/sitezada', {\n                method: 'POST',\n                body: formData\n            }).then(response => {\n                if (response.ok) {\n                    showThankYouMessage();\n                } else {\n                    alert('Ocorreu um erro ao enviar o formulário. Tente novamente.');\n                }\n            }).catch(error => {\n                console.error('Erro:', error);\n                alert('Ocorreu um erro ao enviar o formulário. Tente novamente.');\n            });\n        });\n\n        // Jogo da cobrinha automático\n        const canvas = document.getElementById('gameCanvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n\n        let snake = [\n            { x: 150, y: 150 },\n            { x: 140, y: 150 },\n            { x: 130, y: 150 },\n            { x: 120, y: 150 },\n            { x: 110, y: 150 },\n            { x: 100, y: 150 }\n        ];\n        let direction = { x: 10, y: 0 };\n        let food = generateRandomFood();\n        let speed = 150;\n        const maxSnakeLength = 100; // Limite de tamanho para a cobra\n\n        // Desenha a cobra com detalhes\n        function drawSnake() {\n            ctx.fillStyle = 'green';\n            ctx.strokeStyle = 'darkgreen';\n            snake.forEach(segment => {\n                ctx.fillRect(segment.x, segment.y, 10, 10);\n                ctx.strokeRect(segment.x, segment.y, 10, 10);\n            });\n        }\n\n        // Move a cobra\n        function moveSnake() {\n            const head = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };\n            snake.unshift(head);\n\n            // Verifica se a cobra comeu a comida\n            if (head.x === food.x && head.y === food.y) {\n                food = generateRandomFood();\n                if (speed > 50) {\n                    speed -= 10;\n                }\n            } else {\n                snake.pop();\n            }\n\n            // Verifica colisão com as bordas\n            if (head.x < 0 || head.x >= canvas.width || head.y < 0 || head.y >= canvas.height) {\n                resetGame();\n            }\n\n            // Verifica se a cobra atingiu o tamanho máximo\n            if (snake.length >= maxSnakeLength) {\n                resetGame();\n            }\n        }\n\n        // Gera uma posição aleatória para a comida\n        function generateRandomFood() {\n            const x = Math.floor(Math.random() * (canvas.width / 10)) * 10;\n            const y = Math.floor(Math.random() * (canvas.height / 10)) * 10;\n            return { x, y };\n        }\n\n        // Desenha a comida\n        function drawFood() {\n            ctx.fillStyle = 'red';\n            ctx.beginPath();\n            ctx.arc(food.x + 5, food.y + 5, 5, 0, 2 * Math.PI);\n            ctx.fill();\n        }\n\n        // Atualiza o jogo\n        function updateGame() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            drawFood();\n            drawSnake();\n            moveSnake();\n\n            // Atualiza a direção da cobra para perseguir a comida\n            if (snake[0].x < food.x) {\n                direction = { x: 10, y: 0 };\n            } else if (snake[0].x > food.x) {\n                direction = { x: -10, y: 0 };\n            } else if (snake[0].y < food.y) {\n                direction = { x: 0, y: 10 };\n            } else if (snake[0].y > food.y) {\n                direction = { x: 0, y: -10 };\n            }\n\n            setTimeout(updateGame, speed);\n        }\n\n        // Reseta o jogo\n        function resetGame() {\n            snake = [\n                { x: 150, y: 150 },\n                { x: 140, y: 150 },\n                { x: 130, y: 150 },\n                { x: 120, y: 150 },\n                { x: 110, y: 150 },\n                { x: 100, y: 150 }\n            ];\n            direction = { x: 10, y: 0 };\n            speed = 150;\n        }\n\n        // Inicia o jogo\n        updateGame();\n    </script>\n</body>\n</html>\n"
      },
      "id": "f4959610-4dd8-4e5d-9a93-e12b57e93854",
      "name": "HTML",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1060,
        380
      ]
    },
    {
      "parameters": {
        "path": "afill",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "1724feef-c7b0-4099-b6ee-ffddb9624494",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        880,
        380
      ],
      "webhookId": "b5fa0fe4-74a2-4c1c-a0a6-7a6d9c2e54fc"
    }
  ],
  "connections": {
    "HTML": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "780c7dec-9417-48e7-8a63-32013e59b899",
  "triggerCount": 1,
  "tags": []
}