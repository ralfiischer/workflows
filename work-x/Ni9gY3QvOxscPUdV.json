{
  "createdAt": "2025-01-09T13:48:23.064Z",
  "updatedAt": "2025-01-13T14:02:52.613Z",
  "id": "Ni9gY3QvOxscPUdV",
  "name": "SaaS",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "path": "index",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "bd408dec-af85-4600-8c3a-ea67c3ea3d77",
      "name": "Serve Frontend",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1020,
        -380
      ],
      "webhookPath": "frontend",
      "method": "GET",
      "responseMode": "onReceived",
      "responseData": {
        "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"
      },
      "responseHeaders": [
        {
          "name": "Content-Type",
          "value": "text/html"
        }
      ],
      "webhookId": "18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        :root {\n            --primary: #45DE71;\n            --dark: #1e1e1e;\n            --white: #ffffff;\n        }\n\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Space Grotesk', sans-serif;\n            min-height: 100vh;\n            background: #1e1e1e;\n            color: var(--white);\n        }\n\n        .container {\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n            background: url('/api/placeholder/1920/1080') center/cover no-repeat;\n            position: relative;\n        }\n\n        .container::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.7);\n        }\n\n        .popup {\n            background: var(--dark);\n            padding: 30px;\n            border-radius: 10px;\n            width: 100%;\n            max-width: 400px;\n            position: relative;\n            display: block;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .popup.hidden {\n            display: none;\n        }\n\n        h2 {\n            color: var(--primary);\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n        }\n\n        .form-group label {\n            position: absolute;\n            left: 15px;\n            top: 50%;\n            transform: translateY(-50%);\n            transition: 0.3s ease;\n            pointer-events: none;\n            color: #aaa;\n        }\n\n        .form-group input:focus + label,\n        .form-group input:not(:placeholder-shown) + label {\n            top: 0;\n            font-size: 12px;\n            background: var(--dark);\n            padding: 0 5px;\n            color: var(--primary);\n        }\n\n        input {\n            width: 100%;\n            padding: 12px 15px;\n            border: 1px solid #444;\n            border-radius: 5px;\n            background: transparent;\n            color: var(--white);\n            font-size: 16px;\n            outline: none;\n        }\n\n        input:focus {\n            border-color: var(--primary);\n        }\n\n        .contact-container {\n            position: relative;\n        }\n\n        .country-select {\n            position: absolute;\n            left: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            z-index: 2;\n        }\n\n        .country-select img {\n            width: 24px;\n            height: 18px;\n            cursor: pointer;\n        }\n\n        .phone-input {\n            padding-left: 45px;\n        }\n\n        button {\n            width: 100%;\n            padding: 12px;\n            background: var(--primary);\n            color: var(--dark);\n            border: none;\n            border-radius: 5px;\n            font-size: 16px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: 0.3s;\n        }\n\n        button:hover {\n            background: #3ac562;\n        }\n\n        .toggle-link {\n            margin-top: 15px;\n            text-align: center;\n        }\n\n        .toggle-link a {\n            color: var(--primary);\n            text-decoration: none;\n            cursor: pointer;\n        }\n\n        .toggle-link a:hover {\n            text-decoration: underline;\n        }\n\n        .analysis-section {\n            display: none;\n            background: var(--dark);\n            padding: 30px;\n            border-radius: 10px;\n            width: 100%;\n            max-width: 400px;\n            position: relative;\n        }\n\n        .error {\n            color: #ff4444;\n            font-size: 14px;\n            margin-top: 5px;\n            display: none;\n        }\n\n        @media (max-width: 480px) {\n            .popup {\n                padding: 20px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Login -->\n        <div class=\"popup\" id=\"loginPopup\">\n            <h2>Login</h2>\n            <form id=\"loginForm\">\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" placeholder=\" \">\n                    <label for=\"loginEmail\">E-mail</label>\n                    <div class=\"error\" id=\"loginEmailError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" placeholder=\" \">\n                    <label for=\"loginPassword\">Senha</label>\n                    <div class=\"error\" id=\"loginPasswordError\"></div>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div class=\"toggle-link\">\n                    <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n                </div>\n            </form>\n        </div>\n\n        <!-- Register -->\n        <div class=\"popup hidden\" id=\"registerPopup\">\n            <h2>Cadastro</h2>\n            <form id=\"registerForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerName\" placeholder=\" \">\n                    <label for=\"registerName\">Nome</label>\n                    <div class=\"error\" id=\"registerNameError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"registerEmail\" placeholder=\" \">\n                    <label for=\"registerEmail\">E-mail</label>\n                    <div class=\"error\" id=\"registerEmailError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"contact-container\">\n                        <div class=\"country-select\">\n                            <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"countryFlag\">\n                        </div>\n                        <input type=\"tel\" id=\"registerPhone\" class=\"phone-input\" placeholder=\" \">\n                        <label for=\"registerPhone\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Telefone</label>\n                    </div>\n                    <div class=\"error\" id=\"registerPhoneError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerPassword\" placeholder=\" \">\n                    <label for=\"registerPassword\">Senha</label>\n                    <div class=\"error\" id=\"registerPasswordError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"confirmPassword\" placeholder=\" \">\n                    <label for=\"confirmPassword\">Confirmar Senha</label>\n                    <div class=\"error\" id=\"confirmPasswordError\"></div>\n                </div>\n                <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n                <div class=\"toggle-link\">\n                    <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n                </div>\n            </form>\n        </div>\n\n        <!-- Analysis Section -->\n        <div class=\"analysis-section\" id=\"analysisSection\">\n            <h2>Análise de Conversas</h2>\n            <form id=\"analysisForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"context\" placeholder=\" \">\n                    <label for=\"context\">Contexto</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"file\" id=\"fileInput\" accept=\".pdf,.txt,image/*\">\n                </div>\n                <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n            </form>\n        </div>\n    </div>\n\n    <script>\n        // Funções auxiliares\n        function showError(elementId, message) {\n            const errorElement = document.getElementById(elementId);\n            errorElement.textContent = message;\n            errorElement.style.display = 'block';\n        }\n\n        function clearError(elementId) {\n            const errorElement = document.getElementById(elementId);\n            errorElement.style.display = 'none';\n        }\n\n        function validateEmail(email) {\n            return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n        }\n\n        // Event Listeners\n        document.getElementById('showRegister').addEventListener('click', () => {\n            document.getElementById('loginPopup').classList.add('hidden');\n            document.getElementById('registerPopup').classList.remove('hidden');\n        });\n\n        document.getElementById('showLogin').addEventListener('click', () => {\n            document.getElementById('registerPopup').classList.add('hidden');\n            document.getElementById('loginPopup').classList.remove('hidden');\n        });\n\n        // Login\n        document.getElementById('loginButton').addEventListener('click', () => {\n            const email = document.getElementById('loginEmail').value;\n            const password = document.getElementById('loginPassword').value;\n            let isValid = true;\n\n            // Validação email\n            if (!validateEmail(email)) {\n                showError('loginEmailError', 'Email inválido');\n                isValid = false;\n            } else {\n                clearError('loginEmailError');\n            }\n\n            // Validação senha\n            if (password.length < 6) {\n                showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n                isValid = false;\n            } else {\n                clearError('loginPasswordError');\n            }\n\n            if (isValid) {\n                document.getElementById('loginPopup').classList.add('hidden');\n                document.getElementById('analysisSection').style.display = 'block';\n            }\n        });\n\n        // Registro\n        document.getElementById('registerButton').addEventListener('click', () => {\n            const name = document.getElementById('registerName').value;\n            const email = document.getElementById('registerEmail').value;\n            const phone = document.getElementById('registerPhone').value;\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('confirmPassword').value;\n            let isValid = true;\n\n            // Validações\n            if (!name) {\n                showError('registerNameError', 'Nome é obrigatório');\n                isValid = false;\n            } else {\n                clearError('registerNameError');\n            }\n\n            if (!validateEmail(email)) {\n                showError('registerEmailError', 'Email inválido');\n                isValid = false;\n            } else {\n                clearError('registerEmailError');\n            }\n\n            if (!phone) {\n                showError('registerPhoneError', 'Telefone é obrigatório');\n                isValid = false;\n            } else {\n                clearError('registerPhoneError');\n            }\n\n            if (password.length < 6) {\n                showError('registerPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n                isValid = false;\n            } else {\n                clearError('registerPasswordError');\n            }\n\n            if (password !== confirmPassword) {\n                showError('confirmPasswordError', 'Senhas não coincidem');\n                isValid = false;\n            } else {\n                clearError('confirmPasswordError');\n            }\n\n            if (isValid) {\n                document.getElementById('registerPopup').classList.add('hidden');\n                document.getElementById('analysisSection').style.display = 'block';\n            }\n        });\n\n        // Limpar erros ao digitar\n        document.querySelectorAll('input').forEach(input => {\n            input.addEventListener('input', () => {\n                const errorId = input.id + 'Error';\n                clearError(errorId);\n            });\n        });\n    </script>\n</body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -780,
        -380
      ],
      "id": "5f844631-1b40-4535-ac10-3ad775f88c84",
      "name": "HTML"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -540,
        -380
      ],
      "id": "440d5b00-af6e-41dc-abad-4c34df6ee6cd",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "SaaS",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -840,
        180
      ],
      "id": "dd3fd363-7381-4371-8ffe-4fe2152b1e40",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bba06e20-2ea2-4a31-9153-ef3c69cd0d42",
              "leftValue": "={{ $('Webhook').item.json.body.email }}",
              "rightValue": "={{ $json.email }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "497e22d6-c8cf-4864-b0a1-b8a8357fad67",
              "leftValue": "={{ $('Webhook').item.json.body.password }}",
              "rightValue": "={{ $json.password }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        180
      ],
      "id": "4fba070f-7d30-473f-bd5f-2f0567635643",
      "name": "If"
    },
    {
      "parameters": {
        "tableId": "SaaS",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "email",
              "fieldValue": "={{ $json.body.email }}"
            },
            {
              "fieldId": "password",
              "fieldValue": "={{ $json.body.password }}"
            },
            {
              "fieldId": "nome",
              "fieldValue": "={{ $json.body.name }}"
            },
            {
              "fieldId": "contato",
              "fieldValue": "={{ $json.body.contact }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -800,
        -100
      ],
      "id": "2a47d0b6-52a6-43da-8461-c067a6dc49c1",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"message\": \"Credenciais inválidas\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -440,
        260
      ],
      "id": "fa25f358-654c-4119-a044-4ea13055cb38",
      "name": "Erro"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"userId\": {{ $json.id }},\n  \"message\": \"Login realizado com sucesso\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -440,
        80
      ],
      "id": "2b1986ba-205d-4dfb-ad1d-b3a536ce07fa",
      "name": "Sucesso"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "retorno",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        180
      ],
      "id": "74f71121-a1ca-46bb-982a-b20bd29315a5",
      "name": "Webhook",
      "webhookId": "b86b9992-6d2c-4d17-843d-c64a09b389b3"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "files",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -820,
        480
      ],
      "id": "3941ddff-3f54-4aba-90d9-f40aa368e3a3",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "analyze",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        480
      ],
      "id": "83a1fa55-1d73-4745-b921-48c74cce3ee0",
      "name": "Webhook1",
      "webhookId": "3349b5c0-be4e-432f-aa70-a42e405556a0"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dda017c-4284-45d0-905a-b826bc9e8daf",
              "leftValue": "={{$json.output}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -340,
        480
      ],
      "id": "7e2f67a7-a028-48e5-b03e-2c377278cf77",
      "name": "If2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"analysis\": {{ JSON.stringify($json.output) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -140,
        420
      ],
      "id": "98f443e9-5a80-465e-acd5-1b2a450c3344",
      "name": "Sucesso2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Erro ao processar a análise. Verifique os arquivos enviados e tente novamente.\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -140,
        600
      ],
      "id": "7deb150d-a813-4109-a8de-2ed3216c3b22",
      "name": "Erro2"
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=## Contexto\n{{ $('Webhook1').item.json.body.context }}\n\n### Conteúdo\n{{ $json.data }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -640,
        480
      ],
      "id": "de888daa-18f7-49c1-9890-882861c95416",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -680,
        640
      ],
      "id": "c19b32fb-e7b4-4b32-a80b-32175fcdeab6",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "RhJGnAesg7rbO4uq",
          "name": "primeiro assistent"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "criaconta",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        -100
      ],
      "id": "2cac47c4-83e5-492a-95f5-00b3c959dc03",
      "name": "Webhook2",
      "webhookId": "31b43b1f-364d-46b7-9fbb-c7f39f188555"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -400,
        -720
      ],
      "id": "c8d4a1a4-0a9e-4067-9960-a614b10edad1",
      "name": "Respond to Webhook1",
      "disabled": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* Reset básico */\n        *, *::before, *::after {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n\n        html, body {\n            height: 100%;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n            margin: 0;\n            padding: 0;\n            background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n            background-size: cover;\n            position: relative;\n            color: #ffffff; /* Texto branco padrão */\n        }\n\n        /* Sobreposição Escura para Melhor Legibilidade */\n        body::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(30, 30, 30, 0.7); /* Sobreposição escura */\n            z-index: -1;\n        }\n\n        /* Pop-ups de Login e Cadastro */\n        .popup {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.8);\n            z-index: 1000;\n            visibility: visible;\n            opacity: 1;\n            transition: opacity 0.3s ease, visibility 0.3s ease;\n        }\n\n        .popup.hidden {\n            visibility: hidden;\n            opacity: 0;\n        }\n\n        .popup-content {\n            background-color: #1e1e1e; /* Fundo escuro */\n            padding: 30px 40px;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            width: 100%;\n            max-width: 400px;\n            text-align: left;\n            color: #ffffff;\n            position: relative;\n        }\n\n        .popup-content h2 {\n            text-align: center;\n            color: #45DE71;\n            font-size: 24px;\n            margin-bottom: 20px;\n        }\n\n        /* Campos do formulário */\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n        }\n\n        .form-group label {\n            position: absolute;\n            top: 50%;\n            left: 12px;\n            transform: translateY(-50%);\n            background-color: #1e1e1e; /* Fundo escuro para label */\n            padding: 0 5px;\n            color: #ffffff;\n            font-size: 14px;\n            transition: all 0.2s ease;\n            pointer-events: none;\n            z-index: 2; /* Garante que o label fique acima do input */\n        }\n\n        .form-group input {\n            width: 100%;\n            padding: 14px 12px;\n            border: 1px solid #444;\n            border-radius: 5px;\n            font-size: 14px;\n            background-color: #1e1e1e; /* Fundo escuro */\n            color: #ffffff; /* Texto branco */\n            transition: border-color 0.2s ease, background-color 0.2s ease;\n        }\n\n        .form-group input:focus {\n            border-color: #45DE71;\n            background-color: #1a1a1a; /* Fundo ainda mais escuro ao focar */\n        }\n\n        .form-group input:focus + label,\n        .form-group input:not(:placeholder-shown) + label {\n            top: -8px;\n            left: 12px;\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        /* Campo de Telefone e Label Flutuante */\n        .contact-container {\n            position: relative;\n            display: flex;\n            align-items: center;\n            width: 100%;\n            height: 40px;\n        }\n\n        /* Seletor de País Personalizado */\n        .custom-select {\n            position: absolute;\n            left: 12px;\n            display: flex;\n            align-items: center;\n            cursor: pointer;\n            z-index: 3; /* Garante que a bandeira fique abaixo do label */\n        }\n\n        .custom-select img {\n            width: 24px;\n            height: 18px;\n            border-radius: 3px;\n        }\n\n        /* Campo de Telefone */\n        .phone-input {\n            width: 100%;\n            padding: 10px 12px 10px 75px; /* Aumentado para acomodar o label deslocado */\n            border: 1px solid #444;\n            border-radius: 5px;\n            font-size: 14px;\n            background-color: #1e1e1e; /* Fundo escuro */\n            color: #ffffff; /* Texto branco */\n            transition: border-color 0.2s ease, background-color 0.2s ease;\n            z-index: 1; /* Garante que o input fique abaixo do label */\n        }\n\n        .phone-input:focus {\n            border-color: #45DE71;\n            background-color: #1a1a1a; /* Fundo ainda mais escuro ao focar */\n        }\n\n        /* Remoção do placeholder para evitar texto transparente */\n        .phone-input::placeholder {\n            color: transparent;\n        }\n\n        .phone-input:focus::placeholder {\n            color: transparent;\n        }\n\n        /* Label Flutuante para Contato */\n        .contact-label {\n            position: absolute;\n            top: 50%; /* Centraliza verticalmente */\n            left: 90px; /* Desloca o label 2 letras para a direita (60px + 15px) */\n            transform: translateY(-50%); /* Ajusta para o centro exato */\n            background-color: #1e1e1e; /* Fundo escuro para label */\n            padding: 0 5px;\n            font-size: 14px;\n            color: #ffffff;\n            pointer-events: none;\n            transition: all 0.2s ease;\n            z-index: 4; /* Garante que o label fique acima da bandeira */\n        }\n\n        /* Estado ativo do label */\n        .contact-label.active {\n            top: -8px;\n            left: 90px; /* Mantém alinhado com a posição original */\n            transform: none; /* Remove a transformação para posicionar acima */\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        /* Dropdown de Opções */\n        .custom-options {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            width: 100%;\n            background-color: #1e1e1e; /* Fundo escuro */\n            border: 1px solid #45DE71;\n            border-radius: 5px;\n            max-height: 150px;\n            overflow-y: auto;\n            display: none;\n            z-index: 4;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            margin-top: 5px;\n        }\n\n        .custom-option {\n            display: flex;\n            align-items: center;\n            padding: 8px 12px;\n            cursor: pointer;\n            transition: background-color 0.2s, color 0.2s;\n        }\n\n        .custom-option:hover, .custom-option[aria-selected=\"true\"] {\n            background-color: #45DE71; /* Fundo verde ao passar o mouse ou selecionado */\n            color: #1e1e1e; /* Texto escuro */\n        }\n\n        .custom-option img {\n            width: 20px;\n            height: 15px;\n            margin-right: 8px;\n            border-radius: 2px;\n        }\n\n        /* Botões */\n        button {\n            width: 100%;\n            padding: 12px;\n            background-color: #45DE71;\n            border: none;\n            border-radius: 5px;\n            color: #1e1e1e; /* Texto escuro no botão */\n            font-size: 16px;\n            cursor: pointer;\n            font-weight: 600;\n            transition: background-color 0.2s ease;\n        }\n\n        button:hover {\n            background-color: #36b659;\n        }\n\n        .toggle-link {\n            text-align: center;\n            margin-top: 15px;\n        }\n\n        .toggle-link a {\n            color: #45DE71;\n            text-decoration: none;\n            font-size: 14px;\n        }\n\n        .toggle-link a:hover {\n            text-decoration: underline;\n        }\n\n        /* Container Principal para Centralizar a Seção de Análise */\n        .main-container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            padding: 20px;\n        }\n\n        /* Seção de Análise de Vendas */\n        .analysis-section {\n            display: none;\n            text-align: center;\n            background: #1e1e1e; /* Fundo escuro */\n            padding: 20px 30px;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            color: #ffffff;\n            max-width: 400px;\n            width: 100%;\n        }\n\n        .analysis-section h2 {\n            color: #45DE71;\n            margin-bottom: 20px;\n        }\n\n        .analysis-section form {\n            margin-top: 20px;\n        }\n\n        /* Responsividade para Dispositivos Menores */\n        @media (max-width: 500px) {\n            .popup-content {\n                padding: 20px 30px;\n            }\n\n            .analysis-section {\n                padding: 15px 20px;\n                max-width: 350px;\n            }\n\n            /* Ajuste adicional para dispositivos menores */\n            .contact-label {\n                left: 55px; /* Desloca um pouco menos para telas menores */\n                top: 50%;\n                transform: translateY(-50%);\n            }\n\n            .phone-input {\n                padding-left: 75px; /* Mantém o padding-left consistente */\n            }\n        }\n\n        /* Prevenindo que a cor de fundo dos inputs mude após preenchidos (especialmente autofill) */\n        input:-webkit-autofill,\n        input:-webkit-autofill:hover, \n        input:-webkit-autofill:focus, \n        input:-webkit-autofill:active {\n            -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n            box-shadow: 0 0 0 30px #1e1e1e inset !important;\n            -webkit-text-fill-color: #ffffff !important;\n            color: #ffffff !important;\n        }\n\n        /* Para Firefox */\n        input:-moz-autofill {\n            background-color: #1e1e1e !important;\n            color: #ffffff !important;\n        }\n\n        /* Para IE */\n        input:-ms-autofill {\n            background-color: #1e1e1e !important;\n            color: #ffffff !important;\n        }\n    </style>\n</head>\n<body>\n    <!-- Pop-up de Login -->\n    <div class=\"popup\" id=\"loginPopup\">\n        <div class=\"popup-content\">\n            <h2>Login</h2>\n            <form id=\"loginForm\">\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"loginEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"loginPassword\">Senha</label>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div class=\"toggle-link\">\n                    <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Pop-up de Cadastro -->\n    <div class=\"popup hidden\" id=\"registerPopup\">\n        <div class=\"popup-content\">\n            <h2>Cadastro</h2>\n            <form id=\"registerForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n                    <label for=\"registerName\">Nome</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"registerEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"contact-container\">\n                        <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n                            <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n                        </div>\n                        <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required aria-required=\"true\" placeholder=\" \">\n                        <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n                        <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n                            <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"registerPassword\">Senha</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n                    <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n                </div>\n                <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n                <div class=\"toggle-link\">\n                    <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Container Principal -->\n    <div class=\"main-container\">\n        <div class=\"analysis-section\" id=\"analysisSection\">\n            <h2>Analista de Vendas</h2>\n            <form id=\"analysisForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"contextArea\" name=\"context\" required placeholder=\" \">\n                    <label for=\"contextArea\">Contexto</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"file\" id=\"fileInput\" name=\"files\" accept=\".pdf, .txt, image/*\" required>\n                    <label for=\"fileInput\">Arquivos</label>\n                </div>\n                <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n            </form>\n        </div>\n    </div>\n\n    <script>\n        const loginPopup = document.getElementById('loginPopup');\n        const registerPopup = document.getElementById('registerPopup');\n        const analysisSection = document.getElementById('analysisSection');\n\n        // Alternar para o pop-up de cadastro\n        document.getElementById('showRegister').addEventListener('click', () => {\n            loginPopup.classList.add('hidden');\n            registerPopup.classList.remove('hidden');\n        });\n\n        // Alternar para o pop-up de login\n        document.getElementById('showLogin').addEventListener('click', () => {\n            registerPopup.classList.add('hidden');\n            loginPopup.classList.remove('hidden');\n        });\n\n        // Ação ao clicar no botão de login\n        document.getElementById('loginButton').addEventListener('click', () => {\n            // Aqui você pode adicionar a lógica de autenticação\n            loginPopup.classList.add('hidden');\n            analysisSection.parentElement.style.display = 'flex'; // Exibe o container flexível\n            analysisSection.style.display = 'block'; // Exibe a seção de análise\n        });\n\n        // Ação ao clicar no botão de cadastro\n        document.getElementById('registerButton').addEventListener('click', () => {\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('registerConfirmPassword').value;\n\n            if (password === confirmPassword) {\n                const contact = document.getElementById('registerContact').value;\n                const email = document.getElementById('registerEmail').value;\n                const name = document.getElementById('registerName').value;\n\n                if (contact && email && name) {\n                    alert('Cadastro realizado com sucesso!');\n                    registerPopup.classList.add('hidden');\n                    analysisSection.parentElement.style.display = 'flex';\n                    analysisSection.style.display = 'block';\n                } else {\n                    alert('Preencha todos os campos corretamente.');\n                }\n            } else {\n                alert('As senhas não coincidem.');\n            }\n        });\n\n        const customSelect = document.getElementById('customSelect');\n        const customOptions = document.getElementById('customOptions');\n        const currentFlag = document.getElementById('currentFlag');\n        const phoneInput = document.getElementById('registerContact');\n\n        // Abrir/fechar o dropdown de seleção de país\n        customSelect.addEventListener('click', (event) => {\n            event.stopPropagation();\n            const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n            customSelect.setAttribute('aria-expanded', !expanded);\n            customOptions.style.display = expanded ? 'none' : 'block';\n        });\n\n        // Selecionar uma opção do dropdown\n        customOptions.querySelectorAll('.custom-option').forEach(option => {\n            option.addEventListener('click', () => {\n                const flagSrc = option.querySelector('img').src;\n                const countryCode = option.getAttribute('data-value');\n\n                currentFlag.src = flagSrc;\n                phoneInput.value = countryCode + ' ';\n\n                customOptions.style.display = 'none';\n                customSelect.setAttribute('aria-expanded', 'false');\n            });\n        });\n\n        // Fechar o dropdown ao clicar fora\n        document.addEventListener('click', (event) => {\n            if (!customSelect.contains(event.target) && !customOptions.contains(event.target)) {\n                customOptions.style.display = 'none';\n                customSelect.setAttribute('aria-expanded', 'false');\n            }\n        });\n\n        // Gerenciar o label \"Contato\" para subir ao focar ou preencher o campo\n        const registerContact = document.getElementById('registerContact');\n        const contactLabel = document.querySelector('.contact-container .contact-label');\n\n        // Função para atualizar o estado do label\n        function updateContactLabel() {\n            if (registerContact === document.activeElement || registerContact.value.trim() !== '') {\n                contactLabel.classList.add('active');\n            } else {\n                contactLabel.classList.remove('active');\n            }\n        }\n\n        // Eventos para atualizar o label\n        registerContact.addEventListener('focus', updateContactLabel);\n        registerContact.addEventListener('blur', updateContactLabel);\n        registerContact.addEventListener('input', updateContactLabel);\n\n        // Inicializa o estado do label ao carregar a página\n        window.addEventListener('DOMContentLoaded', updateContactLabel);\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1100,
        -760
      ],
      "id": "239d67d9-b814-4baf-ae0a-7283c50c1d0f",
      "name": "HTML1"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        :root {\n            --primary: #45DE71;\n            --dark: #1e1e1e;\n            --white: #ffffff;\n        }\n\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Space Grotesk', sans-serif;\n            min-height: 100vh;\n            background: #1e1e1e;\n            color: var(--white);\n        }\n\n        .container {\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n            background: url('/api/placeholder/1920/1080') center/cover no-repeat;\n            position: relative;\n        }\n\n        .container::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.7);\n        }\n\n        .popup {\n            background: var(--dark);\n            padding: 30px;\n            border-radius: 10px;\n            width: 100%;\n            max-width: 400px;\n            position: relative;\n            display: block;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .popup.hidden {\n            display: none;\n        }\n\n        h2 {\n            color: var(--primary);\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n        }\n\n        .form-group label {\n            position: absolute;\n            left: 15px;\n            top: 50%;\n            transform: translateY(-50%);\n            transition: 0.3s ease;\n            pointer-events: none;\n            color: #aaa;\n        }\n\n        .form-group input:focus + label,\n        .form-group input:not(:placeholder-shown) + label {\n            top: 0;\n            font-size: 12px;\n            background: var(--dark);\n            padding: 0 5px;\n            color: var(--primary);\n        }\n\n        input {\n            width: 100%;\n            padding: 12px 15px;\n            border: 1px solid #444;\n            border-radius: 5px;\n            background: transparent;\n            color: var(--white);\n            font-size: 16px;\n            outline: none;\n        }\n\n        input:focus {\n            border-color: var(--primary);\n        }\n\n        .contact-container {\n            position: relative;\n        }\n\n        .country-select {\n            position: absolute;\n            left: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            z-index: 2;\n        }\n\n        .country-select img {\n            width: 24px;\n            height: 18px;\n            cursor: pointer;\n        }\n\n        .phone-input {\n            padding-left: 45px;\n        }\n\n        button {\n            width: 100%;\n            padding: 12px;\n            background: var(--primary);\n            color: var(--dark);\n            border: none;\n            border-radius: 5px;\n            font-size: 16px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: 0.3s;\n        }\n\n        button:hover {\n            background: #3ac562;\n        }\n\n        .toggle-link {\n            margin-top: 15px;\n            text-align: center;\n        }\n\n        .toggle-link a {\n            color: var(--primary);\n            text-decoration: none;\n            cursor: pointer;\n        }\n\n        .toggle-link a:hover {\n            text-decoration: underline;\n        }\n\n        .analysis-section {\n            display: none;\n            background: var(--dark);\n            padding: 30px;\n            border-radius: 10px;\n            width: 100%;\n            max-width: 400px;\n            position: relative;\n        }\n\n        .error {\n            color: #ff4444;\n            font-size: 14px;\n            margin-top: 5px;\n            display: none;\n        }\n\n        @media (max-width: 480px) {\n            .popup {\n                padding: 20px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Login -->\n        <div class=\"popup\" id=\"loginPopup\">\n            <h2>Login</h2>\n            <form id=\"loginForm\">\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" placeholder=\" \">\n                    <label for=\"loginEmail\">E-mail</label>\n                    <div class=\"error\" id=\"loginEmailError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" placeholder=\" \">\n                    <label for=\"loginPassword\">Senha</label>\n                    <div class=\"error\" id=\"loginPasswordError\"></div>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div class=\"toggle-link\">\n                    <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n                </div>\n            </form>\n        </div>\n\n        <!-- Register -->\n        <div class=\"popup hidden\" id=\"registerPopup\">\n            <h2>Cadastro</h2>\n            <form id=\"registerForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerName\" placeholder=\" \">\n                    <label for=\"registerName\">Nome</label>\n                    <div class=\"error\" id=\"registerNameError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"registerEmail\" placeholder=\" \">\n                    <label for=\"registerEmail\">E-mail</label>\n                    <div class=\"error\" id=\"registerEmailError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"contact-container\">\n                        <div class=\"country-select\">\n                            <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"countryFlag\">\n                        </div>\n                        <input type=\"tel\" id=\"registerPhone\" class=\"phone-input\" placeholder=\" \">\n                        <label for=\"registerPhone\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Telefone</label>\n                    </div>\n                    <div class=\"error\" id=\"registerPhoneError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerPassword\" placeholder=\" \">\n                    <label for=\"registerPassword\">Senha</label>\n                    <div class=\"error\" id=\"registerPasswordError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"confirmPassword\" placeholder=\" \">\n                    <label for=\"confirmPassword\">Confirmar Senha</label>\n                    <div class=\"error\" id=\"confirmPasswordError\"></div>\n                </div>\n                <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n                <div class=\"toggle-link\">\n                    <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n                </div>\n            </form>\n        </div>\n\n        <!-- Analysis Section -->\n        <div class=\"analysis-section\" id=\"analysisSection\">\n            <h2>Análise de Conversas</h2>\n            <form id=\"analysisForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"context\" placeholder=\" \">\n                    <label for=\"context\">Contexto</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"file\" id=\"fileInput\" accept=\".pdf,.txt,image/*\">\n                </div>\n                <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n            </form>\n        </div>\n    </div>\n\n    <script>\n        // Funções auxiliares\n        function showError(elementId, message) {\n            const errorElement = document.getElementById(elementId);\n            errorElement.textContent = message;\n            errorElement.style.display = 'block';\n        }\n\n        function clearError(elementId) {\n            const errorElement = document.getElementById(elementId);\n            errorElement.style.display = 'none';\n        }\n\n        function validateEmail(email) {\n            return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n        }\n\n        // Event Listeners\n        document.getElementById('showRegister').addEventListener('click', () => {\n            document.getElementById('loginPopup').classList.add('hidden');\n            document.getElementById('registerPopup').classList.remove('hidden');\n        });\n\n        document.getElementById('showLogin').addEventListener('click', () => {\n            document.getElementById('registerPopup').classList.add('hidden');\n            document.getElementById('loginPopup').classList.remove('hidden');\n        });\n\n        // Login\n        document.getElementById('loginButton').addEventListener('click', () => {\n            const email = document.getElementById('loginEmail').value;\n            const password = document.getElementById('loginPassword').value;\n            let isValid = true;\n\n            // Validação email\n            if (!validateEmail(email)) {\n                showError('loginEmailError', 'Email inválido');\n                isValid = false;\n            } else {\n                clearError('loginEmailError');\n            }\n\n            // Validação senha\n            if (password.length < 6) {\n                showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n                isValid = false;\n            } else {\n                clearError('loginPasswordError');\n            }\n\n            if (isValid) {\n                document.getElementById('loginPopup').classList.add('hidden');\n                document.getElementById('analysisSection').style.display = 'block';\n            }\n        });\n\n        // Registro\n        document.getElementById('registerButton').addEventListener('click', () => {\n            const name = document.getElementById('registerName').value;\n            const email = document.getElementById('registerEmail').value;\n            const phone = document.getElementById('registerPhone').value;\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('confirmPassword').value;\n            let isValid = true;\n\n            // Validações\n            if (!name) {\n                showError('registerNameError', 'Nome é obrigatório');\n                isValid = false;\n            } else {\n                clearError('registerNameError');\n            }\n\n            if (!validateEmail(email)) {\n                showError('registerEmailError', 'Email inválido');\n                isValid = false;\n            } else {\n                clearError('registerEmailError');\n            }\n\n            if (!phone) {\n                showError('registerPhoneError', 'Telefone é obrigatório');\n                isValid = false;\n            } else {\n                clearError('registerPhoneError');\n            }\n\n            if (password.length < 6) {\n                showError('registerPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n                isValid = false;\n            } else {\n                clearError('registerPasswordError');\n            }\n\n            if (password !== confirmPassword) {\n                showError('confirmPasswordError', 'Senhas não coincidem');\n                isValid = false;\n            } else {\n                clearError('confirmPasswordError');\n            }\n\n            if (isValid) {\n                document.getElementById('registerPopup').classList.add('hidden');\n                document.getElementById('analysisSection').style.display = 'block';\n            }\n        });\n\n        // Limpar erros ao digitar\n        document.querySelectorAll('input').forEach(input => {\n            input.addEventListener('input', () => {\n                const errorId = input.id + 'Error';\n                clearError(errorId);\n            });\n        });\n    </script>\n</body>\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -900,
        -760
      ],
      "id": "b8886ffd-d912-495a-a2b2-99fac39b0a33",
      "name": "HTML2"
    }
  ],
  "connections": {
    "Serve Frontend": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Sucesso",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        []
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Sucesso2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "5a8bf3f6-a85e-4805-ab8e-86400388f8da",
  "triggerCount": 4,
  "tags": []
}