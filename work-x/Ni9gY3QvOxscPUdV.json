{
  "createdAt": "2025-01-09T13:48:23.064Z",
  "updatedAt": "2025-01-10T21:07:46.174Z",
  "id": "Ni9gY3QvOxscPUdV",
  "name": "SaaS",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "path": "index",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "bd408dec-af85-4600-8c3a-ea67c3ea3d77",
      "name": "Serve Frontend",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1020,
        -380
      ],
      "webhookPath": "frontend",
      "method": "GET",
      "responseMode": "onReceived",
      "responseData": {
        "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"
      },
      "responseHeaders": [
        {
          "name": "Content-Type",
          "value": "text/html"
        }
      ],
      "webhookId": "18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* Reset básico */\n        *, *::before, *::after {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n\n        html, body {\n            height: 100%;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n            margin: 0;\n            padding: 0;\n            background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n            background-size: cover;\n            position: relative;\n            color: #ffffff; /* Texto branco padrão */\n        }\n\n        /* Sobreposição Escura para Melhor Legibilidade */\n        body::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background-color: rgba(30, 30, 30, 0.7); /* Sobreposição escura */\n            z-index: -1;\n        }\n\n        /* Pop-ups de Login e Cadastro */\n        .popup {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.8);\n            z-index: 1000;\n            visibility: visible;\n            opacity: 1;\n            transition: opacity 0.3s ease, visibility 0.3s ease;\n        }\n\n        .popup.hidden {\n            visibility: hidden;\n            opacity: 0;\n        }\n\n        .popup-content {\n            background-color: #1e1e1e; /* Fundo escuro */\n            padding: 30px 40px;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            width: 100%;\n            max-width: 400px;\n            text-align: left;\n            color: #ffffff;\n            position: relative;\n        }\n\n        .popup-content h2 {\n            text-align: center;\n            color: #45DE71;\n            font-size: 24px;\n            margin-bottom: 20px;\n        }\n\n        /* Campos do formulário */\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n        }\n\n        .form-group label {\n            position: absolute;\n            top: 50%;\n            left: 12px;\n            transform: translateY(-50%);\n            background-color: #1e1e1e; /* Fundo escuro para label */\n            padding: 0 5px;\n            color: #ffffff;\n            font-size: 14px;\n            transition: all 0.2s ease;\n            pointer-events: none;\n            z-index: 2; /* Garante que o label fique acima do input */\n        }\n\n        .form-group input {\n            width: 100%;\n            padding: 14px 12px;\n            border: 1px solid #444;\n            border-radius: 5px;\n            font-size: 14px;\n            background-color: #1e1e1e; /* Fundo escuro */\n            color: #ffffff; /* Texto branco */\n            transition: border-color 0.2s ease, background-color 0.2s ease;\n        }\n\n        .form-group input:focus {\n            border-color: #45DE71;\n            background-color: #1a1a1a; /* Fundo ainda mais escuro ao focar */\n        }\n\n        .form-group input:focus + label,\n        .form-group input:not(:placeholder-shown) + label {\n            top: -8px;\n            left: 12px;\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        /* Campo de Telefone e Label Flutuante */\n        .contact-container {\n            position: relative;\n            display: flex;\n            align-items: center;\n            width: 100%;\n            height: 40px;\n        }\n\n        /* Seletor de País Personalizado */\n        .custom-select {\n            position: absolute;\n            left: 12px;\n            display: flex;\n            align-items: center;\n            cursor: pointer;\n            z-index: 3; /* Garante que a bandeira fique abaixo do label */\n        }\n\n        .custom-select img {\n            width: 24px;\n            height: 18px;\n            border-radius: 3px;\n        }\n\n        /* Campo de Telefone */\n        .phone-input {\n            width: 100%;\n            padding: 10px 12px 10px 75px; /* Aumentado para acomodar o label deslocado */\n            border: 1px solid #444;\n            border-radius: 5px;\n            font-size: 14px;\n            background-color: #1e1e1e; /* Fundo escuro */\n            color: #ffffff; /* Texto branco */\n            transition: border-color 0.2s ease, background-color 0.2s ease;\n            z-index: 1; /* Garante que o input fique abaixo do label */\n        }\n\n        .phone-input:focus {\n            border-color: #45DE71;\n            background-color: #1a1a1a; /* Fundo ainda mais escuro ao focar */\n        }\n\n        /* Remoção do placeholder para evitar texto transparente */\n        .phone-input::placeholder {\n            color: transparent;\n        }\n\n        .phone-input:focus::placeholder {\n            color: transparent;\n        }\n\n        /* Label Flutuante para Contato */\n        .contact-label {\n            position: absolute;\n            top: 50%; /* Centraliza verticalmente */\n            left: 90px; /* Desloca o label 2 letras para a direita (60px + 15px) */\n            transform: translateY(-50%); /* Ajusta para o centro exato */\n            background-color: #1e1e1e; /* Fundo escuro para label */\n            padding: 0 5px;\n            font-size: 14px;\n            color: #ffffff;\n            pointer-events: none;\n            transition: all 0.2s ease;\n            z-index: 4; /* Garante que o label fique acima da bandeira */\n        }\n\n        /* Estado ativo do label */\n        .contact-label.active {\n            top: -8px;\n            left: 90px; /* Mantém alinhado com a posição original */\n            transform: none; /* Remove a transformação para posicionar acima */\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        /* Dropdown de Opções */\n        .custom-options {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            width: 100%;\n            background-color: #1e1e1e; /* Fundo escuro */\n            border: 1px solid #45DE71;\n            border-radius: 5px;\n            max-height: 150px;\n            overflow-y: auto;\n            display: none;\n            z-index: 4;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            margin-top: 5px;\n        }\n\n        .custom-option {\n            display: flex;\n            align-items: center;\n            padding: 8px 12px;\n            cursor: pointer;\n            transition: background-color 0.2s, color 0.2s;\n        }\n\n        .custom-option:hover, .custom-option[aria-selected=\"true\"] {\n            background-color: #45DE71; /* Fundo verde ao passar o mouse ou selecionado */\n            color: #1e1e1e; /* Texto escuro */\n        }\n\n        .custom-option img {\n            width: 20px;\n            height: 15px;\n            margin-right: 8px;\n            border-radius: 2px;\n        }\n\n        /* Botões */\n        button {\n            width: 100%;\n            padding: 12px;\n            background-color: #45DE71;\n            border: none;\n            border-radius: 5px;\n            color: #1e1e1e; /* Texto escuro no botão */\n            font-size: 16px;\n            cursor: pointer;\n            font-weight: 600;\n            transition: background-color 0.2s ease;\n        }\n\n        button:hover {\n            background-color: #36b659;\n        }\n\n        .toggle-link {\n            text-align: center;\n            margin-top: 15px;\n        }\n\n        .toggle-link a {\n            color: #45DE71;\n            text-decoration: none;\n            font-size: 14px;\n        }\n\n        .toggle-link a:hover {\n            text-decoration: underline;\n        }\n\n        /* Container Principal para Centralizar a Seção de Análise */\n        .main-container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            padding: 20px;\n        }\n\n        /* Seção de Análise de Vendas */\n        .analysis-section {\n            display: none;\n            text-align: center;\n            background: #1e1e1e; /* Fundo escuro */\n            padding: 20px 30px;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            color: #ffffff;\n            max-width: 400px;\n            width: 100%;\n        }\n\n        .analysis-section h2 {\n            color: #45DE71;\n            margin-bottom: 20px;\n        }\n\n        .analysis-section form {\n            margin-top: 20px;\n        }\n\n        /* Responsividade para Dispositivos Menores */\n        @media (max-width: 500px) {\n            .popup-content {\n                padding: 20px 30px;\n            }\n\n            .analysis-section {\n                padding: 15px 20px;\n                max-width: 350px;\n            }\n\n            /* Ajuste adicional para dispositivos menores */\n            .contact-label {\n                left: 55px; /* Desloca um pouco menos para telas menores */\n                top: 50%;\n                transform: translateY(-50%);\n            }\n\n            .phone-input {\n                padding-left: 75px; /* Mantém o padding-left consistente */\n            }\n        }\n\n        /* Prevenindo que a cor de fundo dos inputs mude após preenchidos (especialmente autofill) */\n        input:-webkit-autofill,\n        input:-webkit-autofill:hover, \n        input:-webkit-autofill:focus, \n        input:-webkit-autofill:active {\n            -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n            box-shadow: 0 0 0 30px #1e1e1e inset !important;\n            -webkit-text-fill-color: #ffffff !important;\n            color: #ffffff !important;\n        }\n\n        /* Para Firefox */\n        input:-moz-autofill {\n            background-color: #1e1e1e !important;\n            color: #ffffff !important;\n        }\n\n        /* Para IE */\n        input:-ms-autofill {\n            background-color: #1e1e1e !important;\n            color: #ffffff !important;\n        }\n    </style>\n</head>\n<body>\n    <!-- Pop-up de Login -->\n    <div class=\"popup\" id=\"loginPopup\">\n        <div class=\"popup-content\">\n            <h2>Login</h2>\n            <form id=\"loginForm\">\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"loginEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"loginPassword\">Senha</label>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div class=\"toggle-link\">\n                    <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Pop-up de Cadastro -->\n    <div class=\"popup hidden\" id=\"registerPopup\">\n        <div class=\"popup-content\">\n            <h2>Cadastro</h2>\n            <form id=\"registerForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n                    <label for=\"registerName\">Nome</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"registerEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"contact-container\">\n                        <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n                            <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n                        </div>\n                        <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required aria-required=\"true\" placeholder=\" \">\n                        <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n                        <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n                            <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"registerPassword\">Senha</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n                    <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n                </div>\n                <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n                <div class=\"toggle-link\">\n                    <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Container Principal -->\n    <div class=\"main-container\">\n        <div class=\"analysis-section\" id=\"analysisSection\">\n            <h2>Analista de Vendas</h2>\n            <form id=\"analysisForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"contextArea\" name=\"context\" required placeholder=\" \">\n                    <label for=\"contextArea\">Contexto</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"file\" id=\"fileInput\" name=\"files\" accept=\".pdf, .txt, image/*\" required>\n                    <label for=\"fileInput\">Arquivos</label>\n                </div>\n                <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n            </form>\n        </div>\n    </div>\n\n    <script>\n        const loginPopup = document.getElementById('loginPopup');\n        const registerPopup = document.getElementById('registerPopup');\n        const analysisSection = document.getElementById('analysisSection');\n\n        // Alternar para o pop-up de cadastro\n        document.getElementById('showRegister').addEventListener('click', () => {\n            loginPopup.classList.add('hidden');\n            registerPopup.classList.remove('hidden');\n        });\n\n        // Alternar para o pop-up de login\n        document.getElementById('showLogin').addEventListener('click', () => {\n            registerPopup.classList.add('hidden');\n            loginPopup.classList.remove('hidden');\n        });\n\n        // Ação ao clicar no botão de login\n        document.getElementById('loginButton').addEventListener('click', () => {\n            // Aqui você pode adicionar a lógica de autenticação\n            loginPopup.classList.add('hidden');\n            analysisSection.parentElement.style.display = 'flex'; // Exibe o container flexível\n            analysisSection.style.display = 'block'; // Exibe a seção de análise\n        });\n\n        // Ação ao clicar no botão de cadastro\n        document.getElementById('registerButton').addEventListener('click', () => {\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('registerConfirmPassword').value;\n\n            if (password === confirmPassword) {\n                const contact = document.getElementById('registerContact').value;\n                const email = document.getElementById('registerEmail').value;\n                const name = document.getElementById('registerName').value;\n\n                if (contact && email && name) {\n                    alert('Cadastro realizado com sucesso!');\n                    registerPopup.classList.add('hidden');\n                    analysisSection.parentElement.style.display = 'flex';\n                    analysisSection.style.display = 'block';\n                } else {\n                    alert('Preencha todos os campos corretamente.');\n                }\n            } else {\n                alert('As senhas não coincidem.');\n            }\n        });\n\n        const customSelect = document.getElementById('customSelect');\n        const customOptions = document.getElementById('customOptions');\n        const currentFlag = document.getElementById('currentFlag');\n        const phoneInput = document.getElementById('registerContact');\n\n        // Abrir/fechar o dropdown de seleção de país\n        customSelect.addEventListener('click', (event) => {\n            event.stopPropagation();\n            const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n            customSelect.setAttribute('aria-expanded', !expanded);\n            customOptions.style.display = expanded ? 'none' : 'block';\n        });\n\n        // Selecionar uma opção do dropdown\n        customOptions.querySelectorAll('.custom-option').forEach(option => {\n            option.addEventListener('click', () => {\n                const flagSrc = option.querySelector('img').src;\n                const countryCode = option.getAttribute('data-value');\n\n                currentFlag.src = flagSrc;\n                phoneInput.value = countryCode + ' ';\n\n                customOptions.style.display = 'none';\n                customSelect.setAttribute('aria-expanded', 'false');\n            });\n        });\n\n        // Fechar o dropdown ao clicar fora\n        document.addEventListener('click', (event) => {\n            if (!customSelect.contains(event.target) && !customOptions.contains(event.target)) {\n                customOptions.style.display = 'none';\n                customSelect.setAttribute('aria-expanded', 'false');\n            }\n        });\n\n        // Gerenciar o label \"Contato\" para subir ao focar ou preencher o campo\n        const registerContact = document.getElementById('registerContact');\n        const contactLabel = document.querySelector('.contact-container .contact-label');\n\n        // Função para atualizar o estado do label\n        function updateContactLabel() {\n            if (registerContact === document.activeElement || registerContact.value.trim() !== '') {\n                contactLabel.classList.add('active');\n            } else {\n                contactLabel.classList.remove('active');\n            }\n        }\n\n        // Eventos para atualizar o label\n        registerContact.addEventListener('focus', updateContactLabel);\n        registerContact.addEventListener('blur', updateContactLabel);\n        registerContact.addEventListener('input', updateContactLabel);\n\n        // Inicializa o estado do label ao carregar a página\n        window.addEventListener('DOMContentLoaded', updateContactLabel);\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -780,
        -380
      ],
      "id": "5f844631-1b40-4535-ac10-3ad775f88c84",
      "name": "HTML"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -540,
        -380
      ],
      "id": "440d5b00-af6e-41dc-abad-4c34df6ee6cd",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "SaaS",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -840,
        180
      ],
      "id": "dd3fd363-7381-4371-8ffe-4fe2152b1e40",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bba06e20-2ea2-4a31-9153-ef3c69cd0d42",
              "leftValue": "={{ $('Webhook').item.json.body.email }}",
              "rightValue": "={{ $json.email }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "497e22d6-c8cf-4864-b0a1-b8a8357fad67",
              "leftValue": "={{ $('Webhook').item.json.body.password }}",
              "rightValue": "={{ $json.password }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        180
      ],
      "id": "4fba070f-7d30-473f-bd5f-2f0567635643",
      "name": "If"
    },
    {
      "parameters": {
        "tableId": "SaaS",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "email",
              "fieldValue": "={{ $json.body.email }}"
            },
            {
              "fieldId": "password",
              "fieldValue": "={{ $json.body.password }}"
            },
            {
              "fieldId": "nome",
              "fieldValue": "={{ $json.body.name }}"
            },
            {
              "fieldId": "contato",
              "fieldValue": "={{ $json.body.contact }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -800,
        -100
      ],
      "id": "2a47d0b6-52a6-43da-8461-c067a6dc49c1",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Contato</title>\n    <style>\n        /* Reset básico */\n        html, body, div, span, applet, object, iframe,\n        h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n        a, abbr, acronym, address, big, cite, code,\n        del, dfn, em, img, ins, kbd, q, s, samp,\n        small, strike, strong, sub, sup, tt, var,\n        b, u, i, center,\n        dl, dt, dd, ol, ul, li,\n        fieldset, form, label, legend,\n        table, caption, tbody, tfoot, thead, tr, th, td,\n        article, aside, canvas, details, embed, \n        figure, figcaption, footer, header, hgroup, \n        menu, nav, output, ruby, section, summary,\n        time, mark, audio, video {\n            margin: 0;\n            padding: 0;\n            border: 0;\n            font-size: 100%;\n            font: inherit;\n            vertical-align: baseline;\n        }\n        /* Box sizing */\n        *, *::before, *::after {\n            box-sizing: border-box;\n        }\n\n        /* Estilos do Corpo */\n        body {\n            font-family: Arial, sans-serif;\n            background-color: #e0f7fa;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            position: relative;\n            overflow: hidden;\n            padding: 20px;\n        }\n\n        /* Fundo */\n        .background {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: -1;\n            background-image: url('https://i.imgur.com/9LKPTGy.jpeg');\n            background-size: cover;\n            background-position: center;\n            opacity: 0.6; /* Aumentado para 0.6 */\n            background-repeat: no-repeat;\n            /* Ajustando filtros para mais cor */\n            filter: saturate(1.5) brightness(1.2);\n        }\n\n        /* Container do Formulário e Mensagem de Agradecimento */\n        .container, .thank-you {\n            background-color: rgba(255, 255, 255, 0.7); /* Aumentada a transparência */\n            border-radius: 10px;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            padding: 20px 30px;\n            width: 100%;\n            max-width: 400px;\n            box-sizing: border-box;\n            text-align: left; /* Alinhamento à esquerda */\n            z-index: 1;\n            transition: all 0.3s ease-in-out;\n        }\n\n        /* Ocultar o Thank You inicialmente */\n        .thank-you {\n            display: none;\n        }\n\n        /* Títulos */\n        h2 {\n            color: #007bb5;\n            margin-bottom: 15px;\n            font-size: 20px;\n            text-align: center; /* Centralizar o título */\n        }\n\n        /* Grupos de Formulário */\n        .form-group {\n            margin-bottom: 15px;\n            width: 100%;\n            position: relative; /* Para posicionar a mensagem de erro */\n        }\n\n        /* Rótulos */\n        label {\n            color: #007bb5;\n            font-weight: bold;\n            display: block;\n            margin-bottom: 5px;\n            font-size: 14px;\n        }\n\n        /* Inputs */\n        input {\n            width: 100%;\n            padding: 10px 12px;\n            border: 1px solid #007bb5;\n            border-radius: 5px;\n            font-size: 14px;\n            outline: none;\n            transition: border-color 0.3s, background-color 0.3s;\n            background-color: rgba(255, 255, 255, 0.6); /* Fundo mais transparente */\n        }\n\n        input:focus {\n            border-color: #005f86;\n            background-color: rgba(255, 255, 255, 0.9); /* Fundo menos transparente no foco */\n        }\n\n        /* Estilos para erros */\n        input.error {\n            border-color: #e74c3c;\n        }\n\n        .error-message {\n            color: #e74c3c;\n            font-size: 12px;\n            margin-top: 5px;\n            display: none; /* Inicialmente oculto */\n        }\n\n        /* Container do Campo de Contato Integrado */\n        .contact-container {\n            position: relative;\n            display: flex;\n            align-items: center;\n            width: 100%;\n            height: 40px; /* Reduzir altura para campos menores */\n        }\n\n        /* Seletor de País Personalizado */\n        .custom-select {\n            position: absolute;\n            left: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            width: 24px;\n            height: 18px;\n            cursor: pointer;\n            z-index: 3;\n        }\n\n        .custom-select img {\n            width: 100%;\n            height: 100%;\n            border-radius: 3px;\n        }\n\n        /* Dropdown de Opções */\n        .custom-options {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            width: 100%;\n            background-color: rgba(255, 255, 255, 0.9); /* Aumentada a transparência */\n            border: 1px solid #007bb5;\n            border-radius: 5px;\n            max-height: 150px;\n            overflow-y: auto;\n            display: none;\n            z-index: 4; /* Aumentar z-index para ficar acima dos outros elementos */\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            margin-top: 5px;\n        }\n\n        .custom-option {\n            display: flex;\n            align-items: center;\n            padding: 8px 12px;\n            cursor: pointer;\n            transition: background-color 0.2s;\n        }\n\n        .custom-option:hover, .custom-option[aria-selected=\"true\"] {\n            background-color: rgba(240, 247, 250, 0.7); /* Fundo mais transparente no hover */\n        }\n\n        .custom-option img {\n            width: 20px;\n            height: 15px;\n            margin-right: 8px;\n            border-radius: 2px;\n        }\n\n        /* Campo de Telefone */\n        .phone-input {\n            width: 100%;\n            padding: 10px 12px 10px 40px; /* Espaço à esquerda para a bandeira */\n            border: 1px solid #007bb5;\n            border-radius: 5px;\n            font-size: 14px;\n            outline: none;\n            transition: border-color 0.3s, background-color 0.3s;\n            background-color: rgba(255, 255, 255, 0.6); /* Fundo mais transparente */\n        }\n\n        .phone-input:focus {\n            border-color: #005f86;\n            background-color: rgba(255, 255, 255, 0.9); /* Fundo menos transparente no foco */\n        }\n\n        /* Botões */\n        button {\n            width: 100%;\n            padding: 10px;\n            background-color: #007bb5;\n            color: #ffffff;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            transition: background-color 0.3s ease;\n            background-color: rgba(0, 123, 181, 0.9); /* Fundo com opacidade */\n        }\n\n        button:hover {\n            background-color: rgba(0, 95, 134, 0.9); /* Fundo com opacidade no hover */\n        }\n\n        /* Mensagem de Agradecimento */\n        .thank-you-message {\n            color: #007bb5;\n            font-size: 16px;\n            line-height: 1.4;\n            margin: 15px 0;\n        }\n\n        /* Responsividade */\n        @media (max-width: 480px) {\n            .container, .thank-you {\n                padding: 20px 20px;\n            }\n\n            .contact-container {\n                flex-direction: column;\n                align-items: flex-start;\n                height: auto; /* Ajustar altura para layout vertical */\n            }\n\n            .custom-select {\n                position: relative;\n                left: 10px;\n                top: 10px;\n                transform: none;\n                margin-bottom: 8px;\n                width: 24px;\n                height: 18px;\n            }\n\n            .phone-input {\n                padding-left: 40px; /* Ajustar padding para mobile */\n                width: 100%;\n                height: 40px; /* Manter altura consistente */\n            }\n\n            input {\n                height: 40px; /* Garantir altura consistente */\n            }\n\n            .custom-options {\n                max-height: 150px;\n            }\n\n            .custom-option {\n                padding: 8px 12px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"background\" aria-hidden=\"true\"></div>\n    <div class=\"container\" id=\"formContainer\">\n        <h2>Olá, Por favor, preencha os seguintes campos!</h2>\n        <form id=\"contactForm\" action=\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\" method=\"post\" novalidate>\n            <div class=\"form-group\">\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" name=\"email\" required placeholder=\"Digite seu email\" aria-required=\"true\">\n                <span class=\"error-message\" id=\"emailError\">Por favor, preencha este campo.</span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"name\">Nome:</label>\n                <input type=\"text\" id=\"name\" name=\"name\" required placeholder=\"Digite seu nome\" aria-required=\"true\">\n                <span class=\"error-message\" id=\"nameError\">Por favor, preencha este campo.</span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"senha\">Senha:</label>\n                <input type=\"password\" id=\"senha\" name=\"senha\" required placeholder=\"Digite sua senha\" aria-required=\"true\">\n                <span class=\"error-message\" id=\"senhaError\">Por favor, preencha este campo.</span>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"contact\">Contato:</label>\n                <div class=\"contact-container\">\n                    <!-- Seletor de País Personalizado -->\n                    <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n                        <!-- Bandeira Inicial -->\n                        <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n                    </div>\n\n                    <!-- Dropdown de Opções fora do custom-select -->\n                    <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n                        <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+34\" data-flag=\"es\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/es.png\" alt=\"Espanha\">Espanha (+34)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+33\" data-flag=\"fr\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/fr.png\" alt=\"França\">França (+33)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+39\" data-flag=\"it\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/it.png\" alt=\"Itália\">Itália (+39)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+81\" data-flag=\"jp\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/jp.png\" alt=\"Japão\">Japão (+81)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+86\" data-flag=\"cn\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/cn.png\" alt=\"China\">China (+86)\n                        </div>\n                        <div class=\"custom-option\" data-value=\"+61\" data-flag=\"au\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                            <img src=\"https://flagcdn.com/24x18/au.png\" alt=\"Austrália\">Austrália (+61)\n                        </div>\n                        <!-- Adicione mais opções conforme necessário -->\n                    </div>\n\n                    <!-- Campo de Telefone -->\n                    <input type=\"tel\" id=\"contact\" name=\"contact\" class=\"phone-input\" required placeholder=\"Digite seu telefone\" aria-required=\"true\" pattern=\"^\\+\\d{1,3}\\s?\\d{4,14}(?:x.+)?$\" title=\"Formato: +Código País Número\">\n                </div>\n                <span class=\"error-message\" id=\"contactError\">Por favor, preencha este campo corretamente.</span>\n            </div>\n            <button type=\"submit\">Enviar</button>\n        </form>\n    </div>\n    <div class=\"thank-you\" id=\"thankYouContainer\" role=\"alert\" aria-live=\"assertive\">\n        <h2>Obrigado pelo seu contato!</h2>\n        <p class=\"thank-you-message\">Agradecemos por entrar em contato. Em instantes, nossa equipe retornará para você no WhatsApp!</p>\n        <button type=\"button\" onclick=\"closeThankYou()\">OK</button>\n    </div>\n    <script>\n        document.addEventListener('DOMContentLoaded', () => {\n            const contactForm = document.getElementById('contactForm');\n            const thankYouContainer = document.getElementById('thankYouContainer');\n            const formContainer = document.getElementById('formContainer');\n            const customSelect = document.getElementById('customSelect');\n            const customOptions = document.getElementById('customOptions');\n            const currentFlag = document.getElementById('currentFlag');\n            const phoneInput = document.getElementById('contact');\n\n            let selectedCountryCode = '+55'; // Valor padrão\n\n            // Função para abrir/fechar o dropdown\n            const toggleDropdown = () => {\n                const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n                customSelect.setAttribute('aria-expanded', !expanded);\n                customOptions.style.display = expanded ? 'none' : 'block';\n            };\n\n            // Abrir/fechar o dropdown ao clicar ou pressionar Enter/Space\n            customSelect.addEventListener('click', toggleDropdown);\n            customSelect.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    toggleDropdown();\n                }\n            });\n\n            // Fechar o dropdown ao clicar fora\n            document.addEventListener('click', (e) => {\n                if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n                    customSelect.setAttribute('aria-expanded', 'false');\n                    customOptions.style.display = 'none';\n                }\n            });\n\n            // Selecionar uma opção\n            customOptions.querySelectorAll('.custom-option').forEach(option => {\n                const selectOption = () => {\n                    const flagSrc = option.querySelector('img').src;\n                    const countryName = option.querySelector('img').alt;\n                    const countryCode = option.getAttribute('data-value');\n\n                    // Atualizar a bandeira no seletor\n                    currentFlag.src = flagSrc;\n                    currentFlag.alt = countryName;\n\n                    // Atualizar o valor do seletor de país\n                    selectedCountryCode = countryCode;\n\n                    // Atualizar o campo de telefone com o código do país\n                    const currentValue = phoneInput.value;\n                    // Remover código de país anterior\n                    const newValue = currentValue.replace(/^\\+\\d{1,3}\\s?/, '');\n                    phoneInput.value = countryCode + ' ' + newValue;\n\n                    // Atualizar ARIA\n                    customOptions.querySelectorAll('.custom-option').forEach(opt => opt.setAttribute('aria-selected', 'false'));\n                    option.setAttribute('aria-selected', 'true');\n\n                    // Fechar o dropdown\n                    customSelect.setAttribute('aria-expanded', 'false');\n                    customOptions.style.display = 'none';\n\n                    // Focar no campo de telefone após seleção\n                    phoneInput.focus();\n                };\n\n                option.addEventListener('click', selectOption);\n                option.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        selectOption();\n                    }\n                });\n            });\n\n            // Função para fechar a mensagem de agradecimento\n            window.closeThankYou = () => {\n                thankYouContainer.style.display = 'none';\n                formContainer.style.display = 'block';\n                contactForm.reset();\n                // Resetar a bandeira e o código do país para o padrão\n                currentFlag.src = 'https://flagcdn.com/24x18/br.png';\n                currentFlag.alt = 'Brasil';\n                selectedCountryCode = '+55';\n\n                // Remover mensagens de erro e classes de erro\n                const errorMessages = document.querySelectorAll('.error-message');\n                errorMessages.forEach(msg => msg.style.display = 'none');\n\n                const errorInputs = document.querySelectorAll('input.error');\n                errorInputs.forEach(input => input.classList.remove('error'));\n            };\n\n            // Função de validação\n            const validateForm = () => {\n                let isValid = true;\n\n                // Obter todos os campos obrigatórios\n                const requiredFields = contactForm.querySelectorAll('input[required]');\n\n                requiredFields.forEach(field => {\n                    const errorMessage = document.getElementById(`${field.id}Error`) || document.getElementById(`${field.name}Error`);\n\n                    if (!field.value.trim()) {\n                        isValid = false;\n                        field.classList.add('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'block';\n                        }\n                    } else {\n                        field.classList.remove('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'none';\n                        }\n                    }\n\n                    // Validação específica para o campo de telefone\n                    if (field.type === 'tel') {\n                        const phonePattern = /^\\+\\d{1,3}\\s?\\d{4,14}(?:x.+)?$/;\n                        if (!phonePattern.test(field.value.trim())) {\n                            isValid = false;\n                            field.classList.add('error');\n                            if (errorMessage) {\n                                errorMessage.textContent = 'Por favor, insira um número de telefone válido.';\n                                errorMessage.style.display = 'block';\n                            }\n                        }\n                    }\n\n                    // Validação específica para o campo de email\n                    if (field.type === 'email') {\n                        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                        if (!emailPattern.test(field.value.trim())) {\n                            isValid = false;\n                            field.classList.add('error');\n                            if (errorMessage) {\n                                errorMessage.textContent = 'Por favor, insira um email válido.';\n                                errorMessage.style.display = 'block';\n                            }\n                        }\n                    }\n                });\n\n                return isValid;\n            };\n\n            // Manipulação do Formulário\n            contactForm.addEventListener('submit', (e) => {\n                e.preventDefault();\n\n                if (validateForm()) {\n                    // Enviar o formulário via Fetch API ou outro método\n                    const formData = new FormData(contactForm);\n                    fetch(contactForm.action, {\n                        method: contactForm.method,\n                        body: formData,\n                    })\n                    .then(response => {\n                        if (response.ok) {\n                            // Mostrar mensagem de agradecimento\n                            formContainer.style.display = 'none';\n                            thankYouContainer.style.display = 'block';\n                        } else {\n                            // Tratar erros de resposta\n                            alert('Houve um problema ao enviar o formulário. Por favor, tente novamente.');\n                        }\n                    })\n                    .catch(error => {\n                        console.error('Erro:', error);\n                        alert('Houve um problema ao enviar o formulário. Por favor, tente novamente.');\n                    });\n                } else {\n                    // Opcional: Scroll para o primeiro erro\n                    const firstError = contactForm.querySelector('.error');\n                    if (firstError) {\n                        firstError.scrollIntoView({ behavior: 'smooth', block: 'center' });\n                    }\n                }\n            });\n        });\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1480,
        -680
      ],
      "id": "d907fcb7-7275-4d0d-aa49-14a3719e7259",
      "name": "HTML2",
      "disabled": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <!-- Link para a fonte Space Grotesk -->\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* Reset básico */\n        html, body, div, span, applet, object, iframe,\n        h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n        a, abbr, acronym, address, big, cite, code,\n        del, dfn, em, img, ins, kbd, q, s, samp,\n        small, strike, strong, sub, sup, tt, var,\n        b, u, i, center,\n        dl, dt, dd, ol, ul, li,\n        fieldset, form, label, legend,\n        table, caption, tbody, tfoot, thead, tr, th, td,\n        article, aside, canvas, details, embed, \n        figure, figcaption, footer, header, hgroup, \n        menu, nav, output, ruby, section, summary,\n        time, mark, audio, video {\n            margin: 0;\n            padding: 0;\n            border: 0;\n            font-size: 100%;\n            font: inherit;\n            vertical-align: baseline;\n        }\n        /* Box sizing */\n        *, *::before, *::after {\n            box-sizing: border-box;\n        }\n\n        /* Estilos do Corpo */\n        body {\n            font-family: 'Space Grotesk', Arial, sans-serif;\n            background-color: #121212; /* Cor de fundo escura */\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            position: relative;\n            overflow: hidden;\n            padding: 20px;\n        }\n\n        /* Fundo */\n        .background {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: -1;\n            background-image: url('https://i.imgur.com/9LKPTGy.jpeg');\n            background-size: cover;\n            background-position: center;\n            opacity: 0.6;\n            background-repeat: no-repeat;\n            filter: saturate(1.5) brightness(1.2);\n        }\n\n        /* Popup de Login */\n        .popup {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 1000; /* Garantir que fique na frente */\n        }\n\n        .popup-content {\n            background-color: rgba(30, 30, 30, 0.9); /* Fundo semi-transparente */\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            padding: 30px 40px;\n            width: 100%;\n            max-width: 400px;\n            box-sizing: border-box;\n            text-align: left;\n            position: relative;\n            color: #ffffff;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n        }\n\n        .popup-content h2 {\n            color: #45DE71; /* Verde para títulos */\n            font-size: 24px;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        /* Formulário Principal e Popup Compartilhando Estilos */\n        .container, .popup-content {\n            background-color: rgba(30, 30, 30, 0.9); /* Fundo semi-transparente */\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n            padding: 20px 30px;\n            width: 100%;\n            max-width: 400px;\n            box-sizing: border-box;\n            text-align: left;\n            z-index: 1;\n            transition: all 0.3s ease-in-out;\n            color: #ffffff;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n        }\n\n        /* Títulos */\n        h1, h2, h3 {\n            color: #45DE71; /* Verde para títulos */\n            font-weight: 600;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        /* Grupos de Formulário */\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n            width: 100%;\n        }\n\n        /* Labels Flutuantes */\n        .form-group label {\n            position: absolute;\n            top: 14px;\n            left: 12px;\n            background-color: rgba(30, 30, 30, 0.9);\n            padding: 0 5px;\n            color: #ffffff;\n            font-size: 14px;\n            pointer-events: none;\n            transition: all 0.2s ease-in-out;\n        }\n\n        /* Inputs e Textarea */\n        input, textarea {\n            width: 100%;\n            padding: 14px 12px 14px 12px;\n            border: 1px solid #444; /* Bordas escuras */\n            border-radius: 5px;\n            font-size: 14px;\n            outline: none;\n            background-color: rgba(30, 30, 30, 0.8); /* Fundo semi-transparente */\n            color: #ffffff;\n            transition: border-color 0.3s, background-color 0.3s;\n        }\n\n        /* Foco nos Inputs */\n        input:focus, textarea:focus {\n            border-color: #45DE71;\n            background-color: rgba(30, 30, 30, 1);\n        }\n\n        /* Estado Flutuante das Labels */\n        input:focus + label,\n        input:not(:placeholder-shown) + label,\n        textarea:focus + label,\n        textarea:not(:placeholder-shown) + label {\n            top: -8px;\n            left: 8px;\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        /* Estilos para erros */\n        input.error, textarea.error {\n            border-color: #e74c3c;\n        }\n\n        .error-message {\n            color: #e74c3c;\n            font-size: 12px;\n            margin-top: 5px;\n            display: none;\n        }\n\n        /* Botões */\n        button {\n            width: 100%;\n            padding: 12px;\n            background-color: #45DE71; /* Botão verde */\n            color: #121212;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            font-weight: 600;\n            transition: background-color 0.3s ease;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n        }\n\n        button:hover:enabled {\n            background-color: #36b659; /* Cor ao passar o mouse */\n        }\n\n        button:disabled {\n            background-color: #444; /* Botão desativado */\n            cursor: not-allowed;\n        }\n\n        /* Container do Campo de Contato Integrado */\n        .contact-container {\n            position: relative;\n            display: flex;\n            align-items: center;\n            width: 100%;\n            height: 40px;\n            margin-bottom: 20px;\n        }\n\n        /* Seletor de País Personalizado */\n        .custom-select {\n            position: absolute;\n            left: 12px;\n            top: 50%;\n            transform: translateY(-50%);\n            width: 24px;\n            height: 18px;\n            cursor: pointer;\n            z-index: 3;\n        }\n\n        .custom-select img {\n            width: 100%;\n            height: 100%;\n            border-radius: 3px;\n        }\n\n        /* Dropdown de Opções */\n        .custom-options {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            width: 100%;\n            background-color: rgba(30, 30, 30, 0.9); /* Fundo semi-transparente */\n            border: 1px solid #45DE71;\n            border-radius: 5px;\n            max-height: 150px;\n            overflow-y: auto;\n            display: none;\n            z-index: 4;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n            margin-top: 5px;\n        }\n\n        .custom-option {\n            display: flex;\n            align-items: center;\n            padding: 8px 12px;\n            cursor: pointer;\n            transition: background-color 0.2s;\n        }\n\n        .custom-option:hover, .custom-option[aria-selected=\"true\"] {\n            background-color: rgba(69, 222, 113, 0.2); /* Fundo mais claro no hover */\n        }\n\n        .custom-option img {\n            width: 20px;\n            height: 15px;\n            margin-right: 8px;\n            border-radius: 2px;\n        }\n\n        /* Campo de Telefone */\n        .phone-input {\n            width: 100%;\n            padding: 10px 12px 10px 40px; /* Espaço à esquerda para a bandeira */\n            border: 1px solid #444; /* Bordas escuras */\n            border-radius: 5px;\n            font-size: 14px;\n            outline: none;\n            transition: border-color 0.3s, background-color 0.3s;\n            background-color: rgba(30, 30, 30, 0.8); /* Fundo semi-transparente */\n            color: #ffffff;\n        }\n\n        .phone-input:focus {\n            border-color: #45DE71;\n            background-color: rgba(30, 30, 30, 1);\n        }\n\n        /* Responsividade */\n        @media (max-width: 480px) {\n            .container, .popup-content {\n                padding: 20px 20px;\n            }\n\n            .contact-container {\n                flex-direction: column;\n                align-items: flex-start;\n                height: auto;\n            }\n\n            .custom-select {\n                position: relative;\n                left: 12px;\n                top: 10px;\n                transform: none;\n                margin-bottom: 8px;\n                width: 24px;\n                height: 18px;\n            }\n\n            .phone-input {\n                padding-left: 40px;\n                width: 100%;\n                height: 40px;\n            }\n\n            input, textarea {\n                height: 40px;\n            }\n\n            .custom-options {\n                max-height: 150px;\n            }\n\n            .custom-option {\n                padding: 8px 12px;\n            }\n        }\n\n        /* Análise de Conversas Específicos */\n        .main-title {\n            color: #45DE71; /* Verde para títulos */\n            font-size: 24px;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        #analysisResult {\n            background: rgba(30, 30, 30, 0.8); /* Fundo semi-transparente para resultado */\n            padding: 15px;\n            border-radius: 5px;\n            margin-top: 20px;\n            white-space: pre-wrap;\n            font-size: 14px;\n            line-height: 1.5;\n            color: #ffffff;\n        }\n\n        /* Mensagem de Erro no Login */\n        #loginError {\n            color: #e74c3c;\n            font-size: 14px;\n            margin-top: 10px;\n            display: none;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"background\" aria-hidden=\"true\"></div>\n\n    <!-- Pop-up de Login -->\n    <div class=\"popup\" id=\"loginPopup\">\n        <div class=\"popup-content\">\n            <h2>Login</h2>\n            <form id=\"loginForm\" novalidate>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \" aria-required=\"true\">\n                    <label for=\"loginEmail\">E-mail</label>\n                    <span class=\"error-message\" id=\"loginEmailError\">Por favor, preencha este campo.</span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \" aria-required=\"true\">\n                    <label for=\"loginPassword\">Senha</label>\n                    <span class=\"error-message\" id=\"loginPasswordError\">Por favor, preencha este campo.</span>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div id=\"loginError\"></div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Página Principal -->\n    <div class=\"container\" id=\"mainContainer\">\n        <h2 class=\"main-title\">Analista de Vendas</h2>\n        <form id=\"analysisForm\" novalidate>\n            <div class=\"form-group\">\n                <input type=\"text\" id=\"contextArea\" name=\"context\" required placeholder=\" \" aria-required=\"true\">\n                <label for=\"contextArea\">Contexto</label>\n                <span class=\"error-message\" id=\"contextAreaError\">Por favor, preencha este campo.</span>\n            </div>\n            <div class=\"form-group\">\n                <input type=\"file\" id=\"fileInput\" name=\"files\" accept=\".pdf, .txt, image/*\" multiple required aria-required=\"true\">\n                <label for=\"fileInput\">Arquivos</label>\n                <span class=\"error-message\" id=\"fileInputError\">Por favor, selecione pelo menos um arquivo.</span>\n            </div>\n            <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n            <div id=\"analysisResult\"></div>\n        </form>\n    </div>\n\n    <script>\n        let userId = null; // ID do usuário após login\n\n        // Função de validação genérica\n        const validateFields = (form, fields) => {\n            let isValid = true;\n            fields.forEach(field => {\n                const input = form.querySelector(`#${field.id}`);\n                const errorMessage = form.querySelector(`#${field.errorId}`);\n                if (input.type === 'file') {\n                    if (input.files.length === 0) {\n                        isValid = false;\n                        input.classList.add('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'block';\n                            errorMessage.textContent = field.message || 'Por favor, selecione pelo menos um arquivo.';\n                        }\n                    } else {\n                        input.classList.remove('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'none';\n                        }\n                    }\n                } else if (!input.value.trim()) {\n                    isValid = false;\n                    input.classList.add('error');\n                    if (errorMessage) {\n                        errorMessage.style.display = 'block';\n                        errorMessage.textContent = field.message || 'Por favor, preencha este campo.';\n                    }\n                } else {\n                    if (field.type === 'email') {\n                        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                        if (!emailPattern.test(input.value.trim())) {\n                            isValid = false;\n                            input.classList.add('error');\n                            if (errorMessage) {\n                                errorMessage.style.display = 'block';\n                                errorMessage.textContent = 'Por favor, insira um email válido.';\n                            }\n                        }\n                    }\n                    if (field.type === 'password') {\n                        if (input.value.trim().length < 6) {\n                            isValid = false;\n                            input.classList.add('error');\n                            if (errorMessage) {\n                                errorMessage.style.display = 'block';\n                                errorMessage.textContent = 'A senha deve ter pelo menos 6 caracteres.';\n                            }\n                        }\n                    }\n                    // Remover erro se válido\n                    if (isValid) {\n                        input.classList.remove('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'none';\n                        }\n                    }\n                }\n            });\n            return isValid;\n        };\n\n        // Pop-up de Login\n        document.getElementById('loginButton').addEventListener('click', async () => {\n            const loginButton = document.getElementById('loginButton');\n            const email = document.getElementById('loginEmail').value;\n            const password = document.getElementById('loginPassword').value;\n\n            // Validação\n            const isValid = validateFields(document.getElementById('loginForm'), [\n                { id: 'loginEmail', errorId: 'loginEmailError', type: 'email', message: 'Por favor, insira um email válido.' },\n                { id: 'loginPassword', errorId: 'loginPasswordError', type: 'password', message: 'A senha deve ter pelo menos 6 caracteres.' }\n            ]);\n\n            if (!isValid) {\n                return;\n            }\n\n            // Adicionar loading ao botão de login\n            loginButton.disabled = true;\n            loginButton.textContent = 'Entrando...';\n            document.getElementById('loginError').style.display = 'none';\n\n            try {\n                const response = await fetch('https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ email, password }),\n                });\n\n                const result = await response.json();\n\n                if (result.success) {\n                    userId = result.userId; // Armazena o ID do usuário retornado\n                    document.getElementById('loginPopup').style.display = 'none'; // Fecha o pop-up\n                } else {\n                    const loginError = document.getElementById('loginError');\n                    loginError.textContent = result.message || 'Login inválido.';\n                    loginError.style.display = 'block';\n                }\n            } catch (error) {\n                const loginError = document.getElementById('loginError');\n                loginError.textContent = 'Erro ao tentar fazer login.';\n                loginError.style.display = 'block';\n            } finally {\n                loginButton.disabled = false;\n                loginButton.textContent = 'Entrar';\n            }\n        });\n\n        // Botão de Análise\n        document.getElementById('analyzeButton').addEventListener('click', async () => {\n            const analyzeButton = document.getElementById('analyzeButton');\n            const context = document.getElementById('contextArea').value.trim();\n            const files = document.getElementById('fileInput').files;\n\n            // Validação\n            const isValid = validateFields(document.getElementById('analysisForm'), [\n                { id: 'contextArea', errorId: 'contextAreaError', type: 'text' },\n                { id: 'fileInput', errorId: 'fileInputError', type: 'file' }\n            ]);\n\n            if (!isValid) {\n                return;\n            }\n\n            // Adicionar loading ao botão de análise\n            analyzeButton.disabled = true;\n            analyzeButton.textContent = 'Analisando...';\n            document.getElementById('analysisResult').textContent = '';\n\n            try {\n                // Criar FormData para envio\n                const formData = new FormData();\n                formData.append('userId', userId); // ID do usuário\n                formData.append('context', context); // Contexto diretamente no envio\n\n                for (const file of files) {\n                    formData.append('files', file);\n                }\n\n                // Enviar para o webhook de análise\n                const response = await fetch('https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/analise', {\n                    method: 'POST',\n                    body: formData,\n                });\n\n                const result = await response.json();\n\n                // Analisar a resposta do servidor\n                if (result.success) {\n                    // Exibe o resultado da análise\n                    document.getElementById('analysisResult').textContent = result.analysis;\n                } else {\n                    // Exibe o erro ao usuário\n                    alert(result.message || 'Erro ao analisar os arquivos.');\n                }\n\n            } catch (error) {\n                alert('Ocorreu um erro ao processar a análise.');\n            } finally {\n                analyzeButton.disabled = false;\n                analyzeButton.textContent = 'Analisar';\n            }\n        });\n\n        // Dropdown de Seleção de País (opcional: se quiser implementar)\n        document.addEventListener('DOMContentLoaded', () => {\n            const customSelect = document.getElementById('customSelect');\n            const customOptions = document.getElementById('customOptions');\n            const currentFlag = document.getElementById('currentFlag');\n            const phoneInput = document.getElementById('contact');\n\n            let selectedCountryCode = '+55'; // Valor padrão\n\n            // Função para abrir/fechar o dropdown\n            const toggleDropdown = () => {\n                const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n                customSelect.setAttribute('aria-expanded', !expanded);\n                customOptions.style.display = expanded ? 'none' : 'block';\n            };\n\n            // Abrir/fechar o dropdown ao clicar ou pressionar Enter/Space\n            customSelect.addEventListener('click', toggleDropdown);\n            customSelect.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    toggleDropdown();\n                }\n            });\n\n            // Fechar o dropdown ao clicar fora\n            document.addEventListener('click', (e) => {\n                if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n                    customSelect.setAttribute('aria-expanded', 'false');\n                    customOptions.style.display = 'none';\n                }\n            });\n\n            // Selecionar uma opção\n            customOptions.querySelectorAll('.custom-option').forEach(option => {\n                const selectOption = () => {\n                    const flagSrc = option.querySelector('img').src;\n                    const countryName = option.querySelector('img').alt;\n                    const countryCode = option.getAttribute('data-value');\n\n                    // Atualizar a bandeira no seletor\n                    currentFlag.src = flagSrc;\n                    currentFlag.alt = countryName;\n\n                    // Atualizar o valor do seletor de país\n                    selectedCountryCode = countryCode;\n\n                    // Atualizar o campo de telefone com o código do país\n                    const currentValue = phoneInput.value;\n                    // Remover código de país anterior\n                    const newValue = currentValue.replace(/^\\+\\d{1,3}\\s?/, '');\n                    phoneInput.value = countryCode + ' ' + newValue;\n\n                    // Atualizar ARIA\n                    customOptions.querySelectorAll('.custom-option').forEach(opt => opt.setAttribute('aria-selected', 'false'));\n                    option.setAttribute('aria-selected', 'true');\n\n                    // Fechar o dropdown\n                    customSelect.setAttribute('aria-expanded', 'false');\n                    customOptions.style.display = 'none';\n\n                    // Focar no campo de telefone após seleção\n                    phoneInput.focus();\n                };\n\n                option.addEventListener('click', selectOption);\n                option.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        selectOption();\n                    }\n                });\n            });\n        });\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1280,
        -680
      ],
      "id": "e10b130e-73c6-42fd-8b81-56decd8f6c29",
      "name": "HTML1",
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"message\": \"Credenciais inválidas\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -440,
        260
      ],
      "id": "fa25f358-654c-4119-a044-4ea13055cb38",
      "name": "Erro"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"userId\": {{ $json.id }},\n  \"message\": \"Login realizado com sucesso\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -440,
        80
      ],
      "id": "2b1986ba-205d-4dfb-ad1d-b3a536ce07fa",
      "name": "Sucesso"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "retorno",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        180
      ],
      "id": "74f71121-a1ca-46bb-982a-b20bd29315a5",
      "name": "Webhook",
      "webhookId": "b86b9992-6d2c-4d17-843d-c64a09b389b3"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "files",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -820,
        480
      ],
      "id": "3941ddff-3f54-4aba-90d9-f40aa368e3a3",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "analyze",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        480
      ],
      "id": "83a1fa55-1d73-4745-b921-48c74cce3ee0",
      "name": "Webhook1",
      "webhookId": "3349b5c0-be4e-432f-aa70-a42e405556a0"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dda017c-4284-45d0-905a-b826bc9e8daf",
              "leftValue": "={{$json.output}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -340,
        480
      ],
      "id": "7e2f67a7-a028-48e5-b03e-2c377278cf77",
      "name": "If2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"analysis\": {{ JSON.stringify($json.output) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -140,
        420
      ],
      "id": "98f443e9-5a80-465e-acd5-1b2a450c3344",
      "name": "Sucesso2"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Erro ao processar a análise. Verifique os arquivos enviados e tente novamente.\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -140,
        600
      ],
      "id": "7deb150d-a813-4109-a8de-2ed3216c3b22",
      "name": "Erro2"
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=## Contexto\n{{ $('Webhook1').item.json.body.context }}\n\n### Conteúdo\n{{ $json.data }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -640,
        480
      ],
      "id": "de888daa-18f7-49c1-9890-882861c95416",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -680,
        640
      ],
      "id": "c19b32fb-e7b4-4b32-a80b-32175fcdeab6",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "RhJGnAesg7rbO4uq",
          "name": "primeiro assistent"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "criaconta",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        -100
      ],
      "id": "2cac47c4-83e5-492a-95f5-00b3c959dc03",
      "name": "Webhook2",
      "webhookId": "31b43b1f-364d-46b7-9fbb-c7f39f188555"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -400,
        -140
      ],
      "id": "c8d4a1a4-0a9e-4067-9960-a614b10edad1",
      "name": "Respond to Webhook1",
      "disabled": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <!-- Link para a fonte Space Grotesk -->\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* Reset básico */\n        html, body, div, span, applet, object, iframe,\n        h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n        a, abbr, acronym, address, big, cite, code,\n        del, dfn, em, img, ins, kbd, q, s, samp,\n        small, strike, strong, sub, sup, tt, var,\n        b, u, i, center,\n        dl, dt, dd, ol, ul, li,\n        fieldset, form, label, legend,\n        table, caption, tbody, tfoot, thead, tr, th, td,\n        article, aside, canvas, details, embed, \n        figure, figcaption, footer, header, hgroup, \n        menu, nav, output, ruby, section, summary,\n        time, mark, audio, video {\n            margin: 0;\n            padding: 0;\n            border: 0;\n            font-size: 100%;\n            font: inherit;\n            vertical-align: baseline;\n        }\n        /* Box sizing */\n        *, *::before, *::after {\n            box-sizing: border-box;\n        }\n\n        /* Estilos do Corpo */\n        body {\n            font-family: 'Space Grotesk', Arial, sans-serif;\n            background-color: #121212; /* Cor de fundo escura */\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh;\n            position: relative;\n            overflow: hidden;\n            padding: 20px;\n        }\n\n        /* Fundo */\n        .background {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: -1;\n            background-image: url('https://i.imgur.com/9LKPTGy.jpeg');\n            background-size: cover;\n            background-position: center;\n            opacity: 0.6;\n            background-repeat: no-repeat;\n            filter: saturate(1.5) brightness(1.2);\n        }\n\n        /* Popup de Login */\n        .popup {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.8);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            z-index: 1000; /* Garantir que fique na frente */\n        }\n\n        .popup-content {\n            background-color: rgba(30, 30, 30, 0.9); /* Fundo semi-transparente */\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            padding: 30px 40px;\n            width: 100%;\n            max-width: 400px;\n            box-sizing: border-box;\n            text-align: left;\n            position: relative;\n            color: #ffffff;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n        }\n\n        .popup-content h2 {\n            color: #45DE71; /* Verde para títulos */\n            font-size: 24px;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        /* Formulário Principal e Popup Compartilhando Estilos */\n        .container, .popup-content {\n            background-color: rgba(30, 30, 30, 0.9); /* Fundo semi-transparente */\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n            padding: 20px 30px;\n            width: 100%;\n            max-width: 400px;\n            box-sizing: border-box;\n            text-align: left;\n            z-index: 1;\n            transition: all 0.3s ease-in-out;\n            color: #ffffff;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n        }\n\n        /* Títulos */\n        h1, h2, h3 {\n            color: #45DE71; /* Verde para títulos */\n            font-weight: 600;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        /* Grupos de Formulário */\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n            width: 100%;\n        }\n\n        /* Labels Flutuantes */\n        .form-group label {\n            position: absolute;\n            top: 14px;\n            left: 12px;\n            background-color: rgba(30, 30, 30, 0.9);\n            padding: 0 5px;\n            color: #ffffff;\n            font-size: 14px;\n            pointer-events: none;\n            transition: all 0.2s ease-in-out;\n        }\n\n        /* Inputs e Textarea */\n        input, textarea {\n            width: 100%;\n            padding: 14px 12px 14px 12px;\n            border: 1px solid #444; /* Bordas escuras */\n            border-radius: 5px;\n            font-size: 14px;\n            outline: none;\n            background-color: rgba(30, 30, 30, 0.8); /* Fundo semi-transparente */\n            color: #ffffff;\n            transition: border-color 0.3s, background-color 0.3s;\n        }\n\n        /* Foco nos Inputs */\n        input:focus, textarea:focus {\n            border-color: #45DE71;\n            background-color: rgba(30, 30, 30, 1);\n        }\n\n        /* Estado Flutuante das Labels */\n        input:focus + label,\n        input:not(:placeholder-shown) + label,\n        textarea:focus + label,\n        textarea:not(:placeholder-shown) + label {\n            top: -8px;\n            left: 8px;\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        /* Estilos para erros */\n        input.error, textarea.error {\n            border-color: #e74c3c;\n        }\n\n        .error-message {\n            color: #e74c3c;\n            font-size: 12px;\n            margin-top: 5px;\n            display: none;\n        }\n\n        /* Botões */\n        button {\n            width: 100%;\n            padding: 12px;\n            background-color: #45DE71; /* Botão verde */\n            color: #121212;\n            border: none;\n            border-radius: 5px;\n            cursor: pointer;\n            font-size: 16px;\n            font-weight: 600;\n            transition: background-color 0.3s ease;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n        }\n\n        button:hover:enabled {\n            background-color: #36b659; /* Cor ao passar o mouse */\n        }\n\n        button:disabled {\n            background-color: #444; /* Botão desativado */\n            cursor: not-allowed;\n        }\n\n        /* Container do Campo de Contato Integrado */\n        .contact-container {\n            position: relative;\n            display: flex;\n            align-items: center;\n            width: 100%;\n            height: 40px;\n            margin-bottom: 20px;\n        }\n\n        /* Seletor de País Personalizado */\n        .custom-select {\n            position: absolute;\n            left: 12px;\n            top: 50%;\n            transform: translateY(-50%);\n            width: 24px;\n            height: 18px;\n            cursor: pointer;\n            z-index: 3;\n        }\n\n        .custom-select img {\n            width: 100%;\n            height: 100%;\n            border-radius: 3px;\n        }\n\n        /* Dropdown de Opções */\n        .custom-options {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            width: 100%;\n            background-color: rgba(30, 30, 30, 0.9); /* Fundo semi-transparente */\n            border: 1px solid #45DE71;\n            border-radius: 5px;\n            max-height: 150px;\n            overflow-y: auto;\n            display: none;\n            z-index: 4;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n            margin-top: 5px;\n        }\n\n        .custom-option {\n            display: flex;\n            align-items: center;\n            padding: 8px 12px;\n            cursor: pointer;\n            transition: background-color 0.2s;\n        }\n\n        .custom-option:hover, .custom-option[aria-selected=\"true\"] {\n            background-color: rgba(69, 222, 113, 0.2); /* Fundo mais claro no hover */\n        }\n\n        .custom-option img {\n            width: 20px;\n            height: 15px;\n            margin-right: 8px;\n            border-radius: 2px;\n        }\n\n        /* Campo de Telefone */\n        .phone-input {\n            width: 100%;\n            padding: 10px 12px 10px 40px; /* Espaço à esquerda para a bandeira */\n            border: 1px solid #444; /* Bordas escuras */\n            border-radius: 5px;\n            font-size: 14px;\n            outline: none;\n            transition: border-color 0.3s, background-color 0.3s;\n            background-color: rgba(30, 30, 30, 0.8); /* Fundo semi-transparente */\n            color: #ffffff;\n        }\n\n        .phone-input:focus {\n            border-color: #45DE71;\n            background-color: rgba(30, 30, 30, 1);\n        }\n\n        /* Responsividade */\n        @media (max-width: 480px) {\n            .container, .popup-content {\n                padding: 20px 20px;\n            }\n\n            .contact-container {\n                flex-direction: column;\n                align-items: flex-start;\n                height: auto;\n            }\n\n            .custom-select {\n                position: relative;\n                left: 12px;\n                top: 10px;\n                transform: none;\n                margin-bottom: 8px;\n                width: 24px;\n                height: 18px;\n            }\n\n            .phone-input {\n                padding-left: 40px;\n                width: 100%;\n                height: 40px;\n            }\n\n            input, textarea {\n                height: 40px;\n            }\n\n            .custom-options {\n                max-height: 150px;\n            }\n\n            .custom-option {\n                padding: 8px 12px;\n            }\n        }\n\n        /* Análise de Conversas Específicos */\n        .main-title {\n            color: #45DE71; /* Verde para títulos */\n            font-size: 24px;\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        #analysisResult {\n            background: rgba(30, 30, 30, 0.8); /* Fundo semi-transparente para resultado */\n            padding: 15px;\n            border-radius: 5px;\n            margin-top: 20px;\n            white-space: pre-wrap;\n            font-size: 14px;\n            line-height: 1.5;\n            color: #ffffff;\n        }\n\n        /* Mensagem de Erro no Login */\n        #loginError {\n            color: #e74c3c;\n            font-size: 14px;\n            margin-top: 10px;\n            display: none;\n            text-align: center;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"background\" aria-hidden=\"true\"></div>\n\n    <!-- Pop-up de Login -->\n    <div class=\"popup\" id=\"loginPopup\">\n        <div class=\"popup-content\">\n            <h2>Login</h2>\n            <form id=\"loginForm\" novalidate>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \" aria-required=\"true\">\n                    <label for=\"loginEmail\">E-mail</label>\n                    <span class=\"error-message\" id=\"loginEmailError\">Por favor, preencha este campo.</span>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \" aria-required=\"true\">\n                    <label for=\"loginPassword\">Senha</label>\n                    <span class=\"error-message\" id=\"loginPasswordError\">Por favor, preencha este campo.</span>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div id=\"loginError\"></div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Página Principal -->\n    <div class=\"container\" id=\"mainContainer\">\n        <h2 class=\"main-title\">Analista de Vendas</h2>\n        <form id=\"analysisForm\" novalidate>\n            <div class=\"form-group\">\n                <input type=\"text\" id=\"contextArea\" name=\"context\" required placeholder=\" \" aria-required=\"true\">\n                <label for=\"contextArea\">Contexto</label>\n                <span class=\"error-message\" id=\"contextAreaError\">Por favor, preencha este campo.</span>\n            </div>\n            <div class=\"form-group\">\n                <input type=\"file\" id=\"fileInput\" name=\"files\" accept=\".pdf, .txt, image/*\" multiple required aria-required=\"true\">\n                <label for=\"fileInput\">Arquivos</label>\n                <span class=\"error-message\" id=\"fileInputError\">Por favor, selecione pelo menos um arquivo.</span>\n            </div>\n            <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n            <div id=\"analysisResult\"></div>\n        </form>\n    </div>\n\n    <script>\n        let userId = null; // ID do usuário após login\n\n        // Função de validação genérica\n        const validateFields = (form, fields) => {\n            let isValid = true;\n            fields.forEach(field => {\n                const input = form.querySelector(`#${field.id}`);\n                const errorMessage = form.querySelector(`#${field.errorId}`);\n                if (input.type === 'file') {\n                    if (input.files.length === 0) {\n                        isValid = false;\n                        input.classList.add('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'block';\n                            errorMessage.textContent = field.message || 'Por favor, selecione pelo menos um arquivo.';\n                        }\n                    } else {\n                        input.classList.remove('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'none';\n                        }\n                    }\n                } else if (!input.value.trim()) {\n                    isValid = false;\n                    input.classList.add('error');\n                    if (errorMessage) {\n                        errorMessage.style.display = 'block';\n                        errorMessage.textContent = field.message || 'Por favor, preencha este campo.';\n                    }\n                } else {\n                    if (field.type === 'email') {\n                        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                        if (!emailPattern.test(input.value.trim())) {\n                            isValid = false;\n                            input.classList.add('error');\n                            if (errorMessage) {\n                                errorMessage.style.display = 'block';\n                                errorMessage.textContent = 'Por favor, insira um email válido.';\n                            }\n                        }\n                    }\n                    if (field.type === 'password') {\n                        if (input.value.trim().length < 6) {\n                            isValid = false;\n                            input.classList.add('error');\n                            if (errorMessage) {\n                                errorMessage.style.display = 'block';\n                                errorMessage.textContent = 'A senha deve ter pelo menos 6 caracteres.';\n                            }\n                        }\n                    }\n                    // Remover erro se válido\n                    if (isValid) {\n                        input.classList.remove('error');\n                        if (errorMessage) {\n                            errorMessage.style.display = 'none';\n                        }\n                    }\n                }\n            });\n            return isValid;\n        };\n\n        // Pop-up de Login\n        document.getElementById('loginButton').addEventListener('click', async () => {\n            const loginButton = document.getElementById('loginButton');\n            const email = document.getElementById('loginEmail').value;\n            const password = document.getElementById('loginPassword').value;\n\n            // Validação\n            const isValid = validateFields(document.getElementById('loginForm'), [\n                { id: 'loginEmail', errorId: 'loginEmailError', type: 'email', message: 'Por favor, insira um email válido.' },\n                { id: 'loginPassword', errorId: 'loginPasswordError', type: 'password', message: 'A senha deve ter pelo menos 6 caracteres.' }\n            ]);\n\n            if (!isValid) {\n                return;\n            }\n\n            // Adicionar loading ao botão de login\n            loginButton.disabled = true;\n            loginButton.textContent = 'Entrando...';\n            document.getElementById('loginError').style.display = 'none';\n\n            try {\n                const response = await fetch('https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ email, password }),\n                });\n\n                const result = await response.json();\n\n                if (result.success) {\n                    userId = result.userId; // Armazena o ID do usuário retornado\n                    document.getElementById('loginPopup').style.display = 'none'; // Fecha o pop-up\n                } else {\n                    const loginError = document.getElementById('loginError');\n                    loginError.textContent = result.message || 'Login inválido.';\n                    loginError.style.display = 'block';\n                }\n            } catch (error) {\n                const loginError = document.getElementById('loginError');\n                loginError.textContent = 'Erro ao tentar fazer login.';\n                loginError.style.display = 'block';\n            } finally {\n                loginButton.disabled = false;\n                loginButton.textContent = 'Entrar';\n            }\n        });\n\n        // Botão de Análise\n        document.getElementById('analyzeButton').addEventListener('click', async () => {\n            const analyzeButton = document.getElementById('analyzeButton');\n            const context = document.getElementById('contextArea').value.trim();\n            const files = document.getElementById('fileInput').files;\n\n            // Validação\n            const isValid = validateFields(document.getElementById('analysisForm'), [\n                { id: 'contextArea', errorId: 'contextAreaError', type: 'text' },\n                { id: 'fileInput', errorId: 'fileInputError', type: 'file' }\n            ]);\n\n            if (!isValid) {\n                return;\n            }\n\n            // Adicionar loading ao botão de análise\n            analyzeButton.disabled = true;\n            analyzeButton.textContent = 'Analisando...';\n            document.getElementById('analysisResult').textContent = '';\n\n            try {\n                // Criar FormData para envio\n                const formData = new FormData();\n                formData.append('userId', userId); // ID do usuário\n                formData.append('context', context); // Contexto diretamente no envio\n\n                for (const file of files) {\n                    formData.append('files', file);\n                }\n\n                // Enviar para o webhook de análise\n                const response = await fetch('https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/analyze', {\n                    method: 'POST',\n                    body: formData,\n                });\n\n                const result = await response.json();\n\n                // Analisar a resposta do servidor\n                if (result.success) {\n                    // Exibe o resultado da análise\n                    document.getElementById('analysisResult').textContent = result.analysis;\n                } else {\n                    // Exibe o erro ao usuário\n                    alert(result.message || 'Erro ao analisar os arquivos.');\n                }\n\n            } catch (error) {\n                alert('Ocorreu um erro ao processar a análise.');\n            } finally {\n                analyzeButton.disabled = false;\n                analyzeButton.textContent = 'Analisar';\n            }\n        });\n\n        // Dropdown de Seleção de País (opcional: se quiser implementar)\n        document.addEventListener('DOMContentLoaded', () => {\n            const customSelect = document.getElementById('customSelect');\n            const customOptions = document.getElementById('customOptions');\n            const currentFlag = document.getElementById('currentFlag');\n            const phoneInput = document.getElementById('contact');\n\n            let selectedCountryCode = '+55'; // Valor padrão\n\n            // Função para abrir/fechar o dropdown\n            const toggleDropdown = () => {\n                const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n                customSelect.setAttribute('aria-expanded', !expanded);\n                customOptions.style.display = expanded ? 'none' : 'block';\n            };\n\n            // Abrir/fechar o dropdown ao clicar ou pressionar Enter/Space\n            customSelect.addEventListener('click', toggleDropdown);\n            customSelect.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    toggleDropdown();\n                }\n            });\n\n            // Fechar o dropdown ao clicar fora\n            document.addEventListener('click', (e) => {\n                if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n                    customSelect.setAttribute('aria-expanded', 'false');\n                    customOptions.style.display = 'none';\n                }\n            });\n\n            // Selecionar uma opção\n            customOptions.querySelectorAll('.custom-option').forEach(option => {\n                const selectOption = () => {\n                    const flagSrc = option.querySelector('img').src;\n                    const countryName = option.querySelector('img').alt;\n                    const countryCode = option.getAttribute('data-value');\n\n                    // Atualizar a bandeira no seletor\n                    currentFlag.src = flagSrc;\n                    currentFlag.alt = countryName;\n\n                    // Atualizar o valor do seletor de país\n                    selectedCountryCode = countryCode;\n\n                    // Atualizar o campo de telefone com o código do país\n                    const currentValue = phoneInput.value;\n                    // Remover código de país anterior\n                    const newValue = currentValue.replace(/^\\+\\d{1,3}\\s?/, '');\n                    phoneInput.value = countryCode + ' ' + newValue;\n\n                    // Atualizar ARIA\n                    customOptions.querySelectorAll('.custom-option').forEach(opt => opt.setAttribute('aria-selected', 'false'));\n                    option.setAttribute('aria-selected', 'true');\n\n                    // Fechar o dropdown\n                    customSelect.setAttribute('aria-expanded', 'false');\n                    customOptions.style.display = 'none';\n\n                    // Focar no campo de telefone após seleção\n                    phoneInput.focus();\n                };\n\n                option.addEventListener('click', selectOption);\n                option.addEventListener('keydown', (e) => {\n                    if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        selectOption();\n                    }\n                });\n            });\n        });\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1480,
        -480
      ],
      "id": "6ffd47cb-bfbe-4d08-b006-4d8cc6640036",
      "name": "HTML3",
      "disabled": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* Reset básico */\n        *, *::before, *::after {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n\n        html, body {\n            height: 100%;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n            background-color: #121212;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n        /* Fundo da página */\n        .background {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: -1;\n            background-image: url('https://i.imgur.com/9LKPTGy.jpeg');\n            background-size: cover;\n            background-position: center;\n            opacity: 0.6;\n        }\n\n        /* Pop-ups de Login e Cadastro */\n        .popup {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.8);\n            z-index: 1000;\n            visibility: visible;\n            opacity: 1;\n            transition: opacity 0.3s ease, visibility 0.3s ease;\n        }\n\n        .popup.hidden {\n            visibility: hidden;\n            opacity: 0;\n        }\n\n        .popup-content {\n            background-color: rgba(30, 30, 30, 0.7); /* Ajuste na transparência */\n            padding: 30px 40px;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            width: 100%;\n            max-width: 400px;\n            text-align: left;\n            color: #ffffff;\n        }\n\n        .popup-content h2 {\n            text-align: center;\n            color: #45DE71;\n            font-size: 24px;\n            margin-bottom: 20px;\n        }\n\n        /* Campos do formulário */\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n        }\n\n        .form-group label {\n            position: absolute;\n            top: 14px;\n            left: 12px;\n            background-color: rgba(30, 30, 30, 0.7); /* Ajuste na transparência */\n            padding: 0 5px;\n            color: #ffffff;\n            font-size: 14px;\n            transition: all 0.2s ease;\n        }\n\n        .form-group input {\n            width: 100%;\n            padding: 14px 12px;\n            border: 1px solid #444;\n            border-radius: 5px;\n            font-size: 14px;\n            background-color: rgba(30, 30, 30, 0.5); /* Ajuste na transparência */\n            color: #ffffff;\n        }\n\n        .form-group input:focus {\n            border-color: #45DE71;\n        }\n\n        .form-group input:focus + label,\n        .form-group input:not(:placeholder-shown) + label {\n            top: -8px;\n            left: 8px;\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        /* Botões */\n        button {\n            width: 100%;\n            padding: 12px;\n            background-color: #45DE71;\n            border: none;\n            border-radius: 5px;\n            color: #121212;\n            font-size: 16px;\n            cursor: pointer;\n            font-weight: 600;\n        }\n\n        button:hover {\n            background-color: #36b659;\n        }\n\n        .toggle-link {\n            text-align: center;\n            margin-top: 15px;\n        }\n\n        .toggle-link a {\n            color: #45DE71;\n            text-decoration: none;\n            font-size: 14px;\n        }\n\n        .toggle-link a:hover {\n            text-decoration: underline;\n        }\n\n        /* Seção de Análise de Vendas */\n        .analysis-section {\n            display: none;\n            text-align: center;\n            background: rgba(30, 30, 30, 0.7); /* Ajuste na transparência */\n            padding: 30px;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            color: #ffffff;\n        }\n\n        .analysis-section h2 {\n            color: #45DE71;\n        }\n\n        .analysis-section form {\n            margin-top: 20px;\n        }\n    </style>\n</head>\n<body>\n    <div class=\"background\" aria-hidden=\"true\"></div>\n\n    <!-- Pop-up de Login -->\n    <div class=\"popup\" id=\"loginPopup\">\n        <div class=\"popup-content\">\n            <h2>Login</h2>\n            <form id=\"loginForm\">\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"loginEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"loginPassword\">Senha</label>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div class=\"toggle-link\">\n                    <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Pop-up de Cadastro -->\n    <div class=\"popup hidden\" id=\"registerPopup\">\n        <div class=\"popup-content\">\n            <h2>Cadastro</h2>\n            <form id=\"registerForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n                    <label for=\"registerName\">Nome</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"registerEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerContact\" name=\"contact\" required placeholder=\" \">\n                    <label for=\"registerContact\">Contato</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"registerPassword\">Senha</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n                    <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n                </div>\n                <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n                <div class=\"toggle-link\">\n                    <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Seção de Análise de Vendas -->\n    <div class=\"analysis-section\" id=\"analysisSection\">\n        <h2>Analista de Vendas</h2>\n        <form id=\"analysisForm\">\n            <div class=\"form-group\">\n                <input type=\"text\" id=\"contextArea\" name=\"context\" required placeholder=\" \">\n                <label for=\"contextArea\">Contexto</label>\n            </div>\n            <div class=\"form-group\">\n                <input type=\"file\" id=\"fileInput\" name=\"files\" accept=\".pdf, .txt, image/*\" required>\n                <label for=\"fileInput\">Arquivos</label>\n            </div>\n            <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n        </form>\n    </div>\n\n    <script>\n        const loginPopup = document.getElementById('loginPopup');\n        const registerPopup = document.getElementById('registerPopup');\n        const analysisSection = document.getElementById('analysisSection');\n\n        document.getElementById('showRegister').addEventListener('click', () => {\n            loginPopup.classList.add('hidden');\n            registerPopup.classList.remove('hidden');\n        });\n\n        document.getElementById('showLogin').addEventListener('click', () => {\n            registerPopup.classList.add('hidden');\n            loginPopup.classList.remove('hidden');\n        });\n\n        document.getElementById('loginButton').addEventListener('click', () => {\n            loginPopup.classList.add('hidden');\n            analysisSection.style.display = 'block';\n        });\n\n        document.getElementById('registerButton').addEventListener('click', () => {\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('registerConfirmPassword').value;\n\n            if (password === confirmPassword) {\n                registerPopup.classList.add('hidden');\n                analysisSection.style.display = 'block';\n            } else {\n                alert('As senhas não coincidem.');\n            }\n        });\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1680,
        -680
      ],
      "id": "9230bfd7-c460-443e-93c4-b154a92c5466",
      "name": "HTML4"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* Reset básico */\n        *, *::before, *::after {\n            box-sizing: border-box;\n            margin: 0;\n            padding: 0;\n        }\n\n        html, body {\n            height: 100%;\n            font-family: 'Space Grotesk', Arial, sans-serif;\n            /* Removido o background-color para permitir que a div.background seja visível */\n            margin: 0;\n            padding: 0;\n        }\n\n        /* Fundo da página */\n        .background {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: -1;\n            background-image: url('https://i.imgur.com/9LKPTGy.jpeg'); /* URL da imagem de fundo */\n            background-size: cover;\n            background-position: center;\n            opacity: 0.6;\n        }\n\n        /* Pop-ups de Login e Cadastro */\n        .popup {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            background: rgba(0, 0, 0, 0.8);\n            z-index: 1000;\n            visibility: visible;\n            opacity: 1;\n            transition: opacity 0.3s ease, visibility 0.3s ease;\n        }\n\n        .popup.hidden {\n            visibility: hidden;\n            opacity: 0;\n        }\n\n        .popup-content {\n            background-color: rgba(30, 30, 30, 0.7); /* Transparência ajustada */\n            padding: 30px 40px;\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            width: 100%;\n            max-width: 400px;\n            text-align: left;\n            color: #ffffff;\n        }\n\n        .popup-content h2 {\n            text-align: center;\n            color: #45DE71;\n            font-size: 24px;\n            margin-bottom: 20px;\n        }\n\n        /* Campos do formulário */\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n        }\n\n        .form-group label {\n            position: absolute;\n            top: 14px;\n            left: 12px;\n            background-color: rgba(30, 30, 30, 0.7); /* Transparência ajustada */\n            padding: 0 5px;\n            color: #ffffff;\n            font-size: 14px;\n            transition: all 0.2s ease;\n        }\n\n        /* Ajuste específico para o label do campo Contato */\n        .form-group label[for=\"registerContact\"] {\n            left: 50px; /* Desloca o label para a direita */\n        }\n\n        .form-group input {\n            width: 100%;\n            padding: 14px 12px;\n            border: 1px solid #444;\n            border-radius: 5px;\n            font-size: 14px;\n            background-color: rgba(30, 30, 30, 0.5); /* Transparência ajustada */\n            color: #ffffff;\n        }\n\n        .form-group input:focus {\n            border-color: #45DE71;\n        }\n\n        .form-group input:focus + label,\n        .form-group input:not(:placeholder-shown) + label {\n            top: -8px;\n            left: 8px;\n            font-size: 12px;\n            color: #45DE71;\n        }\n\n        .contact-container {\n            position: relative;\n            display: flex;\n            align-items: center;\n            width: 100%;\n            height: 40px; /* Reduzir altura para campos menores */\n        }\n\n        /* Seletor de País Personalizado */\n        .custom-select {\n            position: absolute;\n            left: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            width: 24px;\n            height: 18px;\n            cursor: pointer;\n            z-index: 3;\n        }\n\n        .custom-select img {\n            width: 100%;\n            height: 100%;\n            border-radius: 3px;\n        }\n\n        /* Dropdown de Opções */\n        .custom-options {\n            position: absolute;\n            top: 100%;\n            left: 0;\n            width: 100%;\n            background-color: rgba(30, 30, 30, 0.8);\n            border: 1px solid #45DE71;\n            border-radius: 5px;\n            max-height: 150px;\n            overflow-y: auto;\n            display: none;\n            z-index: 4;\n            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n            margin-top: 5px;\n        }\n\n        .custom-option {\n            display: flex;\n            align-items: center;\n            padding: 8px 12px;\n            cursor: pointer;\n            transition: background-color 0.2s;\n        }\n\n        .custom-option:hover, .custom-option[aria-selected=\"true\"] {\n            background-color: rgba(69, 222, 113, 0.2);\n        }\n\n        .custom-option img {\n            width: 20px;\n            height: 15px;\n            margin-right: 8px;\n            border-radius: 2px;\n        }\n\n        /* Campo de Telefone */\n        .phone-input {\n            width: 100%;\n            padding: 10px 12px 10px 50px; /* Ajuste para o texto não ficar atrás da bandeira */\n            border: 1px solid #444;\n            border-radius: 5px;\n            font-size: 14px;\n            background-color: rgba(30, 30, 30, 0.5);\n            color: #ffffff;\n        }\n\n        .phone-input::placeholder {\n            color: #888; /* Cor do placeholder */\n        }\n\n        .phone-input:focus::placeholder {\n            color: transparent; /* Placeholder desaparece ao focar no campo */\n        }\n\n        .phone-input:focus {\n            border-color: #45DE71;\n        }\n\n        /* Botões */\n        button {\n            width: 100%;\n            padding: 12px;\n            background-color: #45DE71;\n            border: none;\n            border-radius: 5px;\n            color: #121212;\n            font-size: 16px;\n            cursor: pointer;\n            font-weight: 600;\n        }\n\n        button:hover {\n            background-color: #36b659;\n        }\n\n        .toggle-link {\n            text-align: center;\n            margin-top: 15px;\n        }\n\n        .toggle-link a {\n            color: #45DE71;\n            text-decoration: none;\n            font-size: 14px;\n        }\n\n        .toggle-link a:hover {\n            text-decoration: underline;\n        }\n\n        /* Container Principal para Centralizar a Seção de Análise */\n        .main-container {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            min-height: 100vh; /* Garante que o container ocupe a altura total da viewport */\n            padding: 20px; /* Espaçamento interno para dispositivos menores */\n        }\n\n        /* Seção de Análise de Vendas */\n        .analysis-section {\n            display: none; /* Continua escondida por padrão */\n            text-align: center;\n            background: rgba(30, 30, 30, 0.5); /* Aumenta a transparência */\n            padding: 20px 30px; /* Reduz o padding para tornar a seção menor */\n            border-radius: 10px;\n            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n            color: #ffffff;\n            max-width: 400px; /* Define uma largura máxima menor */\n            width: 100%; /* Garante responsividade */\n        }\n\n        .analysis-section h2 {\n            color: #45DE71;\n            margin-bottom: 20px;\n        }\n\n        .analysis-section form {\n            margin-top: 20px;\n        }\n\n        /* Responsividade para Dispositivos Menores */\n        @media (max-width: 500px) {\n            .popup-content {\n                padding: 20px 30px;\n            }\n\n            .analysis-section {\n                padding: 15px 20px;\n                max-width: 350px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <!-- Fundo da Página -->\n    <div class=\"background\" aria-hidden=\"true\"></div>\n\n    <!-- Pop-up de Login -->\n    <div class=\"popup\" id=\"loginPopup\">\n        <div class=\"popup-content\">\n            <h2>Login</h2>\n            <form id=\"loginForm\">\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"loginEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"loginPassword\">Senha</label>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div class=\"toggle-link\">\n                    <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Pop-up de Cadastro -->\n    <div class=\"popup hidden\" id=\"registerPopup\">\n        <div class=\"popup-content\">\n            <h2>Cadastro</h2>\n            <form id=\"registerForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n                    <label for=\"registerName\">Nome</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n                    <label for=\"registerEmail\">E-mail</label>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"registerContact\">Contato</label>\n                    <div class=\"contact-container\">\n                        <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n                            <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n                        </div>\n                        <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n                            <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n                            </div>\n                            <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n                            </div>\n                        </div>\n                        <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required aria-required=\"true\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n                    <label for=\"registerPassword\">Senha</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n                    <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n                </div>\n                <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n                <div class=\"toggle-link\">\n                    <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n                </div>\n            </form>\n        </div>\n    </div>\n\n    <!-- Container Principal -->\n    <div class=\"main-container\">\n        <!-- Seção de Análise de Vendas -->\n        <div class=\"analysis-section\" id=\"analysisSection\">\n            <h2>Analista de Vendas</h2>\n            <form id=\"analysisForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"contextArea\" name=\"context\" required placeholder=\" \">\n                    <label for=\"contextArea\">Contexto</label>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"file\" id=\"fileInput\" name=\"files\" accept=\".pdf, .txt, image/*\" required>\n                    <label for=\"fileInput\">Arquivos</label>\n                </div>\n                <button type=\"button\" id=\"analyzeButton\">Analisar</button>\n            </form>\n        </div>\n    </div>\n\n    <script>\n        const loginPopup = document.getElementById('loginPopup');\n        const registerPopup = document.getElementById('registerPopup');\n        const analysisSection = document.getElementById('analysisSection');\n\n        // Alternar para o pop-up de cadastro\n        document.getElementById('showRegister').addEventListener('click', () => {\n            loginPopup.classList.add('hidden');\n            registerPopup.classList.remove('hidden');\n        });\n\n        // Alternar para o pop-up de login\n        document.getElementById('showLogin').addEventListener('click', () => {\n            registerPopup.classList.add('hidden');\n            loginPopup.classList.remove('hidden');\n        });\n\n        // Ação ao clicar no botão de login\n        document.getElementById('loginButton').addEventListener('click', () => {\n            // Aqui você pode adicionar a lógica de autenticação\n            loginPopup.classList.add('hidden');\n            analysisSection.parentElement.style.display = 'flex'; // Exibe o container flexível\n            analysisSection.style.display = 'block'; // Exibe a seção de análise\n        });\n\n        // Ação ao clicar no botão de cadastro\n        document.getElementById('registerButton').addEventListener('click', () => {\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('registerConfirmPassword').value;\n\n            if (password === confirmPassword) {\n                // Aqui você pode adicionar a lógica de registro\n                registerPopup.classList.add('hidden');\n                analysisSection.parentElement.style.display = 'flex'; // Exibe o container flexível\n                analysisSection.style.display = 'block'; // Exibe a seção de análise\n            } else {\n                alert('As senhas não coincidem.');\n            }\n        });\n\n        const customSelect = document.getElementById('customSelect');\n        const customOptions = document.getElementById('customOptions');\n        const currentFlag = document.getElementById('currentFlag');\n        const phoneInput = document.getElementById('registerContact');\n\n        // Abrir/fechar o dropdown de seleção de país\n        customSelect.addEventListener('click', (event) => {\n            event.stopPropagation(); // Evita que o evento seja capturado pelo listener de document\n            const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n            customSelect.setAttribute('aria-expanded', !expanded);\n            customOptions.style.display = expanded ? 'none' : 'block';\n        });\n\n        // Selecionar uma opção do dropdown\n        customOptions.querySelectorAll('.custom-option').forEach(option => {\n            option.addEventListener('click', () => {\n                const flagSrc = option.querySelector('img').src;\n                const countryCode = option.getAttribute('data-value');\n\n                currentFlag.src = flagSrc;\n                phoneInput.value = countryCode + ' ';\n\n                customOptions.style.display = 'none';\n                customSelect.setAttribute('aria-expanded', 'false');\n            });\n        });\n\n        // Fechar o dropdown ao clicar fora\n        document.addEventListener('click', (event) => {\n            if (!customSelect.contains(event.target) && !customOptions.contains(event.target)) {\n                customOptions.style.display = 'none';\n                customSelect.setAttribute('aria-expanded', 'false');\n            }\n        });\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1660,
        -480
      ],
      "id": "26f2eccb-c826-4174-845b-197430689588",
      "name": "melhor"
    }
  ],
  "connections": {
    "Serve Frontend": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Sucesso",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        []
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Sucesso2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "187f892c-d307-44d3-8457-e9dfdf7830ca",
  "triggerCount": 4,
  "tags": []
}