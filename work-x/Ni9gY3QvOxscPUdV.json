{
  "createdAt": "2025-01-09T13:48:23.064Z",
  "updatedAt": "2025-01-16T13:08:45.302Z",
  "id": "Ni9gY3QvOxscPUdV",
  "name": "SaaS",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "path": "index",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "bd408dec-af85-4600-8c3a-ea67c3ea3d77",
      "name": "Serve Frontend",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1020,
        -380
      ],
      "webhookPath": "frontend",
      "method": "GET",
      "responseMode": "onReceived",
      "responseData": {
        "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"
      },
      "responseHeaders": [
        {
          "name": "Content-Type",
          "value": "text/html"
        }
      ],
      "webhookId": "18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Análise de Conversas</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    /* ======= RESET E ESTILOS GLOBAIS ======= */\n    *, *::before, *::after {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    html, body {\n      height: 100%;\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n      background-size: cover;\n      position: relative;\n      color: #ffffff;\n    }\n    /* Sobreposição para melhor legibilidade */\n    body::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(30, 30, 30, 0.7);\n      z-index: -1;\n    }\n    /* ======= ESTILOS DOS POP-UPS (LOGIN/CADASTRO) E MODAIS ======= */\n    .popup, .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.8);\n      z-index: 1000;\n      visibility: visible;\n      opacity: 1;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    .popup.hidden, .modal.hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n    .popup-content, .modal-content {\n      background-color: #1e1e1e;\n      padding: 30px 40px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      width: 100%;\n      max-width: 400px;\n      text-align: left;\n      color: #ffffff;\n      position: relative;\n    }\n    .popup-content h2, .modal-content h2 {\n      text-align: center;\n      color: #45DE71;\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    .form-group {\n      margin-bottom: 20px;\n      position: relative;\n    }\n    .form-group label {\n      position: absolute;\n      top: 50%;\n      left: 12px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      color: #ffffff;\n      font-size: 14px;\n      transition: all 0.2s ease;\n      pointer-events: none;\n      z-index: 2;\n    }\n    .form-group input, .form-group textarea {\n      width: 100%;\n      padding: 14px 12px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n    }\n    .form-group input:focus, .form-group textarea:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .form-group input:focus + label,\n    .form-group input:not(:placeholder-shown) + label,\n    .form-group textarea:focus + label,\n    .form-group textarea:not(:placeholder-shown) + label {\n      top: -8px;\n      left: 12px;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    /* Seletor personalizado para telefone */\n    .contact-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 40px;\n    }\n    .custom-select {\n      position: absolute;\n      left: 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      z-index: 3;\n    }\n    .custom-select img {\n      width: 24px;\n      height: 18px;\n      border-radius: 3px;\n    }\n    .phone-input {\n      width: 100%;\n      padding: 10px 12px 10px 75px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      z-index: 1;\n    }\n    .phone-input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .phone-input::placeholder {\n      color: transparent;\n    }\n    .phone-input:focus::placeholder {\n      color: transparent;\n    }\n    .contact-label {\n      position: absolute;\n      top: 50%;\n      left: 90px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      font-size: 14px;\n      color: #ffffff;\n      pointer-events: none;\n      transition: all 0.2s ease;\n      z-index: 4;\n    }\n    .contact-label.active {\n      top: -8px;\n      left: 90px;\n      transform: none;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    .custom-options {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      background-color: #1e1e1e;\n      border: 1px solid #45DE71;\n      border-radius: 5px;\n      max-height: 150px;\n      overflow-y: auto;\n      display: none;\n      z-index: 4;\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n      margin-top: 5px;\n    }\n    .custom-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: background-color 0.2s, color 0.2s;\n    }\n    .custom-option:hover,\n    .custom-option[aria-selected=\"true\"] {\n      background-color: #45DE71;\n      color: #1e1e1e;\n    }\n    .custom-option img {\n      width: 20px;\n      height: 15px;\n      margin-right: 8px;\n      border-radius: 2px;\n    }\n    /* Botões */\n    button {\n      width: 100%;\n      padding: 12px;\n      background-color: #45DE71;\n      border: none;\n      border-radius: 5px;\n      color: #1e1e1e;\n      font-size: 16px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.2s ease;\n    }\n    button:hover {\n      background-color: #36b659;\n    }\n    .toggle-link {\n      text-align: center;\n      margin-top: 15px;\n    }\n    .toggle-link a {\n      color: #45DE71;\n      text-decoration: none;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    .toggle-link a:hover {\n      text-decoration: underline;\n    }\n    /* ======= ESTILOS DA SEÇÃO DE INFORMAÇÕES DA ANÁLISE ======= */\n    .analysis-section {\n      display: none;\n      margin: 20px auto 0;\n      width: 100%;\n      max-width: 600px;\n      padding: 20px 30px;\n      background: #1e1e1e;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      color: #ffffff;\n    }\n    .analysis-section h2 {\n      color: #45DE71;\n      margin-bottom: 20px;\n      text-align: center;\n    }\n    .ticket {\n      background-color: #27272a;\n      border: 1px solid #3f3f46;\n      border-radius: 5px;\n      padding: 15px;\n      margin-bottom: 15px;\n    }\n    .ticket p {\n      margin-bottom: 10px;\n      font-size: 14px;\n    }\n    /* Modal de sucesso e modal de erro */\n    .modal-content p {\n      text-align: center;\n      margin-bottom: 20px;\n      font-size: 16px;\n    }\n    /* Responsividade */\n    @media (max-width: 500px) {\n      .popup-content, .modal-content {\n        padding: 20px 30px;\n      }\n      .analysis-section {\n        padding: 15px 20px;\n        max-width: 350px;\n      }\n      .contact-label {\n        left: 55px;\n      }\n      .phone-input {\n        padding-left: 75px;\n      }\n    }\n    /* Correção para autofill */\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover, \n    input:-webkit-autofill:focus, \n    input:-webkit-autofill:active {\n      -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      -webkit-text-fill-color: #ffffff !important;\n      color: #ffffff !important;\n    }\n    input:-moz-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    input:-ms-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    /* Mensagens de erro */\n    .error {\n      color: #ff6b6b;\n      font-size: 13px;\n      margin-top: 3px;\n      display: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- POP-UP DE LOGIN -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h2>Login</h2>\n      <form id=\"loginForm\">\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"loginEmail\">E-mail</label>\n          <div class=\"error\" id=\"loginEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"loginPassword\">Senha</label>\n          <div class=\"error\" id=\"loginPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"loginButton\">Entrar</button>\n        <div class=\"toggle-link\">\n          <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE CADASTRO -->\n  <div class=\"popup hidden\" id=\"registerPopup\">\n    <div class=\"popup-content\">\n      <h2>Cadastro</h2>\n      <form id=\"registerForm\">\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n          <label for=\"registerName\">Nome</label>\n          <div class=\"error\" id=\"registerNameError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"registerEmail\">E-mail</label>\n          <div class=\"error\" id=\"registerEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <!-- Container com seletor de país e input de telefone -->\n          <div class=\"contact-container\">\n            <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n              <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n            </div>\n            <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required placeholder=\" \">\n            <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n            <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n              <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n              </div>\n              <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n              </div>\n              <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n              </div>\n              <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n              </div>\n            </div>\n          </div>\n          <div class=\"error\" id=\"registerContactError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"registerPassword\">Senha</label>\n          <div class=\"error\" id=\"registerPasswordError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n          <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n          <div class=\"error\" id=\"registerConfirmPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n        <div class=\"toggle-link\">\n          <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE MENSAGEM DE SUCESSO -->\n  <div class=\"modal hidden\" id=\"successModal\">\n    <div class=\"modal-content\">\n      <h2>Sucesso</h2>\n      <p>Cadastro realizado com sucesso!</p>\n      <button type=\"button\" id=\"okSuccess\">OK</button>\n    </div>\n  </div>\n\n  <!-- POP-UP DE ERRO DE LOGIN -->\n  <div class=\"modal hidden\" id=\"errorModal\">\n    <div class=\"modal-content\">\n      <h2>Erro</h2>\n      <p>Credenciais inválidas!</p>\n      <button type=\"button\" id=\"okError\">OK</button>\n    </div>\n  </div>\n\n  <!-- SEÇÃO DE INFORMAÇÕES DA ANÁLISE COM CAMPOS PRÉ-PREENCHIDOS -->\n  <div class=\"analysis-section\" id=\"analysisSection\">\n    <h2>Informações da Análise</h2>\n    <form id=\"analysisForm\">\n      <!-- Os valores abaixo já estão preenchidos conforme os dados obtidos do webhook ou pré-definidos -->\n      <div class=\"form-group\">\n        <input type=\"text\" id=\"analysisTitle\" name=\"title\" required placeholder=\" \" value=\"Título Exemplo\">\n        <label for=\"analysisTitle\">Título</label>\n      </div>\n      <div class=\"form-group\">\n        <textarea id=\"analysisComment\" name=\"comment\" rows=\"3\" required placeholder=\" \">Comentário pré-definido</textarea>\n        <label for=\"analysisComment\">Comentário</label>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"text\" id=\"analysisClient\" name=\"client\" required placeholder=\" \" value=\"Cliente XYZ\">\n        <label for=\"analysisClient\">Cliente</label>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"text\" id=\"analysisCompany\" name=\"company\" required placeholder=\" \" value=\"Empresa ABC\">\n        <label for=\"analysisCompany\">Empresa</label>\n      </div>\n      <div class=\"form-group\">\n        <input type=\"text\" id=\"analysisAIAssessment\" name=\"aiAssessment\" required placeholder=\" \" value=\"Avaliação 9.0\">\n        <label for=\"analysisAIAssessment\">Avaliação AI</label>\n      </div>\n      <div class=\"form-group\">\n        <textarea id=\"analysisImprove\" name=\"improve\" rows=\"3\" required placeholder=\" \">Sugestões de melhoria pré-definidas</textarea>\n        <label for=\"analysisImprove\">Onde melhorar</label>\n      </div>\n      <!-- Botão de salvar alterações removido -->\n    </form>\n  </div>\n\n  <script>\n    window.addEventListener('DOMContentLoaded', () => {\n      // Referências dos elementos\n      const loginPopup = document.getElementById('loginPopup');\n      const registerPopup = document.getElementById('registerPopup');\n      const successModal = document.getElementById('successModal');\n      const errorModal = document.getElementById('errorModal');\n      const analysisSection = document.getElementById('analysisSection');\n\n      // Troca entre pop-ups de login e cadastro\n      document.getElementById('showRegister').addEventListener('click', () => {\n        loginPopup.classList.add('hidden');\n        registerPopup.classList.remove('hidden');\n      });\n      document.getElementById('showLogin').addEventListener('click', () => {\n        registerPopup.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      document.getElementById('okSuccess').addEventListener('click', () => {\n        successModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      document.getElementById('okError').addEventListener('click', () => {\n        errorModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      /* ENVIO DOS DADOS DE LOGIN PARA O WEBHOOK (POST) */\n      document.getElementById('loginButton').addEventListener('click', () => {\n        const email = document.getElementById('loginEmail').value.trim();\n        const password = document.getElementById('loginPassword').value.trim();\n        let isValid = true;\n        \n        // Validações básicas do login\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n          showError('loginEmailError', 'Email inválido');\n          isValid = false;\n        } else {\n          clearError('loginEmailError');\n        }\n        if (password.length < 6) {\n          showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n          isValid = false;\n        } else {\n          clearError('loginPasswordError');\n        }\n        if (isValid) {\n          // Inicia o fluxo de login\n          fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log(\"Retorno do login:\", data);\n            if (!data.success) {\n              // Caso o login falhe, exibe modal de erro\n              loginPopup.classList.add('hidden');\n              errorModal.classList.remove('hidden');\n            } else {\n              // Login bem-sucedido: oculta popup\n              loginPopup.classList.add('hidden');\n              // Chama o primeiro webhook (analyze-tickets)\n              fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/analyze-tickets\", {\n                method: \"POST\"\n              })\n              .then(response => response.json())\n              .then(ticketData => {\n                console.log(\"Retorno do webhook analyze-tickets:\", ticketData);\n                // Em seguida, chama o segundo webhook (infosanalise)\n                fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/infosanalise\", {\n                  method: \"POST\"\n                })\n                .then(response => response.json())\n                .then(infoData => {\n                  console.log(\"Retorno do webhook infosanalise:\", infoData);\n                  if (infoData.success && infoData.infos) {\n                    // Atualiza os campos da análise conforme os dados retornados\n                    document.getElementById('analysisTitle').value = infoData.infos.title || \"\";\n                    document.getElementById('analysisComment').value = infoData.infos.comment || \"\";\n                    document.getElementById('analysisClient').value = infoData.infos.client || \"\";\n                    document.getElementById('analysisCompany').value = infoData.infos.company || \"\";\n                    document.getElementById('analysisAIAssessment').value = infoData.infos.aiAssessment || \"\";\n                    document.getElementById('analysisImprove').value = infoData.infos.improve || \"\";\n                  } else {\n                    alert(infoData.message || \"Erro ao obter informações da análise.\");\n                  }\n                  // Exibe a seção de informações da análise\n                  analysisSection.style.display = 'block';\n                })\n                .catch(error => {\n                  console.error(\"Erro no webhook infosanalise:\", error);\n                  alert(\"Erro ao obter informações da análise. Tente novamente mais tarde.\");\n                  analysisSection.style.display = 'block';\n                });\n              })\n              .catch(error => {\n                console.error(\"Erro no webhook analyze-tickets:\", error);\n                alert(\"Erro ao executar o webhook de tickets. Tente novamente mais tarde.\");\n              });\n            }\n          })\n          .catch(error => {\n            console.error(\"Erro no login:\", error);\n            alert(\"Erro no login. Tente novamente mais tarde.\");\n          });\n        }\n      });\n\n      function showError(id, message) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = message;\n        errorElem.style.display = 'block';\n      }\n      function clearError(id) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = \"\";\n        errorElem.style.display = 'none';\n      }\n\n      /* SELETOR DE PAÍS PARA CONTATO */\n      const customSelect = document.getElementById('customSelect');\n      const customOptions = document.getElementById('customOptions');\n      const currentFlag = document.getElementById('currentFlag');\n      const phoneInput = document.getElementById('registerContact');\n\n      customSelect.addEventListener('click', (e) => {\n        e.stopPropagation();\n        const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n        customSelect.setAttribute('aria-expanded', !expanded);\n        customOptions.style.display = expanded ? 'none' : 'block';\n      });\n      customOptions.querySelectorAll('.custom-option').forEach(option => {\n        option.addEventListener('click', () => {\n          const flagSrc = option.querySelector('img').src;\n          const countryCode = option.getAttribute('data-value');\n          currentFlag.src = flagSrc;\n          phoneInput.value = countryCode + ' ';\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        });\n      });\n      document.addEventListener('click', (e) => {\n        if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        }\n      });\n\n      /* LABEL FLUTUANTE PARA CONTATO */\n      const registerContactElem = document.getElementById('registerContact');\n      const contactLabel = document.querySelector('.contact-container .contact-label');\n      function updateContactLabel() {\n        if (document.activeElement === registerContactElem || registerContactElem.value.trim() !== '') {\n          contactLabel.classList.add('active');\n        } else {\n          contactLabel.classList.remove('active');\n        }\n      }\n      registerContactElem.addEventListener('focus', updateContactLabel);\n      registerContactElem.addEventListener('blur', updateContactLabel);\n      registerContactElem.addEventListener('input', updateContactLabel);\n      window.addEventListener('DOMContentLoaded', updateContactLabel);\n    });\n  </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -840,
        -380
      ],
      "id": "5f844631-1b40-4535-ac10-3ad775f88c84",
      "name": "HTML"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -660,
        -380
      ],
      "id": "440d5b00-af6e-41dc-abad-4c34df6ee6cd",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "SaaS",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -840,
        20
      ],
      "id": "dd3fd363-7381-4371-8ffe-4fe2152b1e40",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bba06e20-2ea2-4a31-9153-ef3c69cd0d42",
              "leftValue": "={{ $('Webhook').item.json.body.email }}",
              "rightValue": "={{ $json.email }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "497e22d6-c8cf-4864-b0a1-b8a8357fad67",
              "leftValue": "={{ $('Webhook').item.json.body.password }}",
              "rightValue": "={{ $json.password }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        20
      ],
      "id": "4fba070f-7d30-473f-bd5f-2f0567635643",
      "name": "If"
    },
    {
      "parameters": {
        "tableId": "SaaS",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "email",
              "fieldValue": "={{ $json.body.email }}"
            },
            {
              "fieldId": "password",
              "fieldValue": "={{ $json.body.password }}"
            },
            {
              "fieldId": "nome",
              "fieldValue": "={{ $json.body.name }}"
            },
            {
              "fieldId": "contato",
              "fieldValue": "={{ $json.body.contact }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -840,
        -180
      ],
      "id": "2a47d0b6-52a6-43da-8461-c067a6dc49c1",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"message\": \"Credenciais inválidas\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        80
      ],
      "id": "fa25f358-654c-4119-a044-4ea13055cb38",
      "name": "Erro"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"userId\": {{ $json.id }},\n  \"message\": \"Login realizado com sucesso\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        -60
      ],
      "id": "2b1986ba-205d-4dfb-ad1d-b3a536ce07fa",
      "name": "Sucesso"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "retorno",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        20
      ],
      "id": "74f71121-a1ca-46bb-982a-b20bd29315a5",
      "name": "Webhook",
      "webhookId": "b86b9992-6d2c-4d17-843d-c64a09b389b3"
    },
    {
      "parameters": {
        "operation": "text",
        "binaryPropertyName": "files",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -400,
        -720
      ],
      "id": "3941ddff-3f54-4aba-90d9-f40aa368e3a3",
      "name": "Extract from File",
      "disabled": true
    },
    {
      "parameters": {
        "path": "analyze",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -600,
        -720
      ],
      "id": "83a1fa55-1d73-4745-b921-48c74cce3ee0",
      "name": "Webhook1",
      "webhookId": "3349b5c0-be4e-432f-aa70-a42e405556a0",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dda017c-4284-45d0-905a-b826bc9e8daf",
              "leftValue": "={{$json.output}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        100,
        -720
      ],
      "id": "7e2f67a7-a028-48e5-b03e-2c377278cf77",
      "name": "If2",
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"analysis\": {{ JSON.stringify($json.output) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        280,
        -780
      ],
      "id": "98f443e9-5a80-465e-acd5-1b2a450c3344",
      "name": "Sucesso2",
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Erro ao processar a análise. Verifique os arquivos enviados e tente novamente.\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        280,
        -600
      ],
      "id": "7deb150d-a813-4109-a8de-2ed3216c3b22",
      "name": "Erro2",
      "disabled": true
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=## Contexto\n{{ $('Webhook1').item.json.body.context }}\n\n### Conteúdo\n{{ $json.data }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -220,
        -720
      ],
      "id": "de888daa-18f7-49c1-9890-882861c95416",
      "name": "AI Agent",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -260,
        -560
      ],
      "id": "c19b32fb-e7b4-4b32-a80b-32175fcdeab6",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "RhJGnAesg7rbO4uq",
          "name": "primeiro assistent"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "criaconta",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        -180
      ],
      "id": "2cac47c4-83e5-492a-95f5-00b3c959dc03",
      "name": "Webhook2",
      "webhookId": "31b43b1f-364d-46b7-9fbb-c7f39f188555"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Análise de Conversas</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n    <style>\n        :root {\n            --primary: #45DE71;\n            --dark: #1e1e1e;\n            --white: #ffffff;\n        }\n\n        * {\n            margin: 0;\n            padding: 0;\n            box-sizing: border-box;\n        }\n\n        body {\n            font-family: 'Space Grotesk', sans-serif;\n            min-height: 100vh;\n            background: #1e1e1e;\n            color: var(--white);\n        }\n\n        .container {\n            min-height: 100vh;\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            padding: 20px;\n            background: url('/api/placeholder/1920/1080') center/cover no-repeat;\n            position: relative;\n        }\n\n        .container::before {\n            content: '';\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.7);\n        }\n\n        .popup {\n            background: var(--dark);\n            padding: 30px;\n            border-radius: 10px;\n            width: 100%;\n            max-width: 400px;\n            position: relative;\n            display: block;\n            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n        }\n\n        .popup.hidden {\n            display: none;\n        }\n\n        h2 {\n            color: var(--primary);\n            margin-bottom: 20px;\n            text-align: center;\n        }\n\n        .form-group {\n            margin-bottom: 20px;\n            position: relative;\n        }\n\n        .form-group label {\n            position: absolute;\n            left: 15px;\n            top: 50%;\n            transform: translateY(-50%);\n            transition: 0.3s ease;\n            pointer-events: none;\n            color: #aaa;\n        }\n\n        .form-group input:focus + label,\n        .form-group input:not(:placeholder-shown) + label {\n            top: 0;\n            font-size: 12px;\n            background: var(--dark);\n            padding: 0 5px;\n            color: var(--primary);\n        }\n\n        input {\n            width: 100%;\n            padding: 12px 15px;\n            border: 1px solid #444;\n            border-radius: 5px;\n            background: transparent;\n            color: var(--white);\n            font-size: 16px;\n            outline: none;\n        }\n\n        input:focus {\n            border-color: var(--primary);\n        }\n\n        .contact-container {\n            position: relative;\n        }\n\n        .country-select {\n            position: absolute;\n            left: 10px;\n            top: 50%;\n            transform: translateY(-50%);\n            z-index: 2;\n        }\n\n        .country-select img {\n            width: 24px;\n            height: 18px;\n            cursor: pointer;\n        }\n\n        .phone-input {\n            padding-left: 45px;\n        }\n\n        button {\n            width: 100%;\n            padding: 12px;\n            background: var(--primary);\n            color: var(--dark);\n            border: none;\n            border-radius: 5px;\n            font-size: 16px;\n            font-weight: 600;\n            cursor: pointer;\n            transition: 0.3s;\n        }\n\n        button:hover {\n            background: #3ac562;\n        }\n\n        .toggle-link {\n            margin-top: 15px;\n            text-align: center;\n        }\n\n        .toggle-link a {\n            color: var(--primary);\n            text-decoration: none;\n            cursor: pointer;\n        }\n\n        .toggle-link a:hover {\n            text-decoration: underline;\n        }\n\n        .analysis-section {\n            display: none;\n            background: var(--dark);\n            padding: 30px;\n            border-radius: 10px;\n            width: 100%;\n            max-width: 600px;\n            position: relative;\n            margin-top: 20px;\n        }\n\n        .result-section {\n            margin-top: 20px;\n            padding: 20px;\n            background: #282828;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n        }\n\n        .result-section h3 {\n            color: var(--primary);\n            margin-bottom: 10px;\n            font-size: 18px;\n        }\n\n        .result-section p {\n            font-size: 15px;\n            color: var(--white);\n            line-height: 1.5;\n            margin-bottom: 15px;\n        }\n\n        .result-section .highlight {\n            color: var(--primary);\n            font-weight: bold;\n        }\n\n        @media (max-width: 480px) {\n            .popup {\n                padding: 20px;\n            }\n        }\n    </style>\n</head>\n<body>\n    <div class=\"container\">\n        <!-- Login -->\n        <div class=\"popup\" id=\"loginPopup\">\n            <h2>Login</h2>\n            <form id=\"loginForm\">\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"loginEmail\" placeholder=\" \">\n                    <label for=\"loginEmail\">E-mail</label>\n                    <div class=\"error\" id=\"loginEmailError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"loginPassword\" placeholder=\" \">\n                    <label for=\"loginPassword\">Senha</label>\n                    <div class=\"error\" id=\"loginPasswordError\"></div>\n                </div>\n                <button type=\"button\" id=\"loginButton\">Entrar</button>\n                <div class=\"toggle-link\">\n                    <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n                </div>\n            </form>\n        </div>\n\n        <!-- Register -->\n        <div class=\"popup hidden\" id=\"registerPopup\">\n            <h2>Cadastro</h2>\n            <form id=\"registerForm\">\n                <div class=\"form-group\">\n                    <input type=\"text\" id=\"registerName\" placeholder=\" \">\n                    <label for=\"registerName\">Nome</label>\n                    <div class=\"error\" id=\"registerNameError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"email\" id=\"registerEmail\" placeholder=\" \">\n                    <label for=\"registerEmail\">E-mail</label>\n                    <div class=\"error\" id=\"registerEmailError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"contact-container\">\n                        <div class=\"country-select\">\n                            <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"countryFlag\">\n                        </div>\n                        <input type=\"tel\" id=\"registerPhone\" class=\"phone-input\" placeholder=\" \">\n                        <label for=\"registerPhone\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Telefone</label>\n                    </div>\n                    <div class=\"error\" id=\"registerPhoneError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"registerPassword\" placeholder=\" \">\n                    <label for=\"registerPassword\">Senha</label>\n                    <div class=\"error\" id=\"registerPasswordError\"></div>\n                </div>\n                <div class=\"form-group\">\n                    <input type=\"password\" id=\"confirmPassword\" placeholder=\" \">\n                    <label for=\"confirmPassword\">Confirmar Senha</label>\n                    <div class=\"error\" id=\"confirmPasswordError\"></div>\n                </div>\n                <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n                <div class=\"toggle-link\">\n                    <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n                </div>\n            </form>\n        </div>\n\n        <!-- Analysis Section -->\n        <div class=\"analysis-section\" id=\"analysisSection\">\n            <h2>Análise Detalhada</h2>\n            <div class=\"result-section\">\n                <h3>Comentário:</h3>\n                <p id=\"comment\">\"Texto do comentário processado pela IA aqui.\"</p>\n            </div>\n\n            <div class=\"result-section\">\n                <h3>Pontos de Melhoria:</h3>\n                <p id=\"improvements\">Identifique as áreas de aprimoramento, como: <span class=\"highlight\">clareza</span>, <span class=\"highlight\">objetividade</span>, e <span class=\"highlight\">tom adequado</span>.</p>\n            </div>\n\n            <div class=\"result-section\">\n                <h3>Sugestões:</h3>\n                <p id=\"suggestions\">A IA recomenda: evite redundâncias, seja mais direto, e destaque pontos relevantes no início.</p>\n            </div>\n        </div>\n    </div>\n\n    <script>\n        // Funções auxiliares\n        function showError(elementId, message) {\n            const errorElement = document.getElementById(elementId);\n            errorElement.textContent = message;\n            errorElement.style.display = 'block';\n        }\n\n        function clearError(elementId) {\n            const errorElement = document.getElementById(elementId);\n            errorElement.style.display = 'none';\n        }\n\n        function validateEmail(email) {\n            return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n        }\n\n        // Event Listeners\n        document.getElementById('showRegister').addEventListener('click', () => {\n            document.getElementById('loginPopup').classList.add('hidden');\n            document.getElementById('registerPopup').classList.remove('hidden');\n        });\n\n        document.getElementById('showLogin').addEventListener('click', () => {\n            document.getElementById('registerPopup').classList.add('hidden');\n            document.getElementById('loginPopup').classList.remove('hidden');\n        });\n\n        // Login\n        document.getElementById('loginButton').addEventListener('click', () => {\n            const email = document.getElementById('loginEmail').value;\n            const password = document.getElementById('loginPassword').value;\n            let isValid = true;\n\n            // Validação email\n            if (!validateEmail(email)) {\n                showError('loginEmailError', 'Email inválido');\n                isValid = false;\n            } else {\n                clearError('loginEmailError');\n            }\n\n            // Validação senha\n            if (password.length < 6) {\n                showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n                isValid = false;\n            } else {\n                clearError('loginPasswordError');\n            }\n\n            if (isValid) {\n                document.getElementById('loginPopup').classList.add('hidden');\n                document.getElementById('analysisSection').style.display = 'block';\n            }\n        });\n\n        // Registro\n        document.getElementById('registerButton').addEventListener('click', () => {\n            const name = document.getElementById('registerName').value;\n            const email = document.getElementById('registerEmail').value;\n            const phone = document.getElementById('registerPhone').value;\n            const password = document.getElementById('registerPassword').value;\n            const confirmPassword = document.getElementById('confirmPassword').value;\n            let isValid = true;\n\n            // Validações\n            if (!name) {\n                showError('registerNameError', 'Nome é obrigatório');\n                isValid = false;\n            } else {\n                clearError('registerNameError');\n            }\n\n            if (!validateEmail(email)) {\n                showError('registerEmailError', 'Email inválido');\n                isValid = false;\n            } else {\n                clearError('registerEmailError');\n            }\n\n            if (!phone) {\n                showError('registerPhoneError', 'Telefone é obrigatório');\n                isValid = false;\n            } else {\n                clearError('registerPhoneError');\n            }\n\n            if (password.length < 6) {\n                showError('registerPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n                isValid = false;\n            } else {\n                clearError('registerPasswordError');\n            }\n\n            if (password !== confirmPassword) {\n                showError('confirmPasswordError', 'Senhas não coincidem');\n                isValid = false;\n            } else {\n                clearError('confirmPasswordError');\n            }\n\n            if (isValid) {\n                document.getElementById('registerPopup').classList.add('hidden');\n                document.getElementById('analysisSection').style.display = 'block';\n            }\n        });\n\n        // Limpar erros ao digitar\n        document.querySelectorAll('input').forEach(input => {\n            input.addEventListener('input', () => {\n                const errorId = input.id + 'Error';\n                clearError(errorId);\n            });\n        });\n    </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1020,
        -900
      ],
      "id": "26b852b5-04dc-4e78-90c6-4eda489f41a4",
      "name": "esse ta bom",
      "disabled": true
    },
    {
      "parameters": {
        "html": "import React, { useState } from 'react';\nimport { Card, CardContent, CardHeader } from '@/components/ui/card';\nimport { Brain, Lightbulb, TrendingUp, AlertTriangle } from 'lucide-react';\n\nconst CommentAnalysis = () => {\n  // Simule o resultado da análise da IA - substitua pelos dados reais do seu webhook\n  const [analysis] = useState({\n    originalComment: \"A entrega demorou muito mais que o prometido, o atendente foi grosseiro quando reclamei, mas o produto em si é de boa qualidade.\",\n    sentiment: \"Negativo\",\n    score: 35,\n    mainPoints: {\n      positive: [\"Qualidade do produto satisfatória\"],\n      negative: [\n        \"Atraso na entrega\",\n        \"Atendimento ao cliente inadequado\"\n      ]\n    },\n    improvements: [\n      \"Melhorar o sistema de previsão de entrega\",\n      \"Realizar treinamento de atendimento ao cliente\",\n      \"Manter o padrão de qualidade do produto\"\n    ],\n    priority: \"Alta\",\n    impact: \"Experiência do Cliente\"\n  });\n\n  return (\n    <div className=\"w-full max-w-3xl mx-auto p-4\">\n      <Card className=\"bg-zinc-900 border-zinc-800\">\n        <CardHeader className=\"border-b border-zinc-800\">\n          <div className=\"flex items-center gap-2\">\n            <Brain className=\"h-6 w-6 text-green-400\" />\n            <h1 className=\"text-xl font-bold text-white\">Análise de Feedback</h1>\n          </div>\n        </CardHeader>\n        \n        <CardContent className=\"space-y-6 pt-6\">\n          {/* Comentário Original */}\n          <div className=\"bg-zinc-800 p-4 rounded-lg\">\n            <h2 className=\"text-zinc-400 text-sm mb-2\">Comentário Original:</h2>\n            <p className=\"text-white\">{analysis.originalComment}</p>\n          </div>\n\n          {/* Sentimento e Pontuação */}\n          <div className=\"flex items-center justify-between bg-zinc-800/50 p-4 rounded-lg\">\n            <div className=\"flex items-center gap-2\">\n              <div className={`px-3 py-1 rounded-full ${\n                analysis.sentiment === \"Positivo\" ? \"bg-green-500/20 text-green-400\" :\n                analysis.sentiment === \"Negativo\" ? \"bg-red-500/20 text-red-400\" :\n                \"bg-yellow-500/20 text-yellow-400\"\n              }`}>\n                {analysis.sentiment}\n              </div>\n            </div>\n            <div className=\"text-zinc-400\">\n              Score: <span className=\"text-white font-bold\">{analysis.score}/100</span>\n            </div>\n          </div>\n\n          {/* Pontos Principais */}\n          <div className=\"space-y-4\">\n            <div>\n              <h2 className=\"flex items-center gap-2 text-white mb-3\">\n                <TrendingUp className=\"h-5 w-5 text-green-400\" />\n                Análise dos Pontos\n              </h2>\n              \n              {analysis.mainPoints.positive.length > 0 && (\n                <div className=\"mb-3\">\n                  <h3 className=\"text-green-400 text-sm mb-2\">Pontos Positivos:</h3>\n                  <ul className=\"space-y-1\">\n                    {analysis.mainPoints.positive.map((point, index) => (\n                      <li key={index} className=\"text-zinc-300 flex items-center gap-2\">\n                        <span className=\"w-1.5 h-1.5 bg-green-400 rounded-full\"></span>\n                        {point}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n\n              {analysis.mainPoints.negative.length > 0 && (\n                <div>\n                  <h3 className=\"text-red-400 text-sm mb-2\">Pontos a Melhorar:</h3>\n                  <ul className=\"space-y-1\">\n                    {analysis.mainPoints.negative.map((point, index) => (\n                      <li key={index} className=\"text-zinc-300 flex items-center gap-2\">\n                        <span className=\"w-1.5 h-1.5 bg-red-400 rounded-full\"></span>\n                        {point}\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Recomendações */}\n          <div>\n            <h2 className=\"flex items-center gap-2 text-white mb-3\">\n              <Lightbulb className=\"h-5 w-5 text-yellow-400\" />\n              Recomendações\n            </h2>\n            <div className=\"space-y-2\">\n              {analysis.improvements.map((improvement, index) => (\n                <div key={index} className=\"bg-zinc-800/50 p-3 rounded-lg text-zinc-300\">\n                  {improvement}\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Prioridade e Impacto */}\n          <div className=\"flex items-center justify-between mt-4\">\n            <div className=\"flex items-center gap-2\">\n              <AlertTriangle className=\"h-4 w-4 text-yellow-400\" />\n              <span className=\"text-zinc-400\">Prioridade:</span>\n              <span className={`font-medium ${\n                analysis.priority === \"Alta\" ? \"text-red-400\" :\n                analysis.priority === \"Média\" ? \"text-yellow-400\" :\n                \"text-green-400\"\n              }`}>\n                {analysis.priority}\n              </span>\n            </div>\n            <div className=\"text-zinc-400\">\n              Área de Impacto: <span className=\"text-white\">{analysis.impact}</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default CommentAnalysis;"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -820,
        -720
      ],
      "id": "f8300f00-caec-40bc-8e76-9526a450a40a",
      "name": "HTML1",
      "disabled": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    /* ======= ESTILOS GLOBAIS E RESET ======= */\n    *, *::before, *::after {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    html, body {\n      height: 100%;\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n      background-size: cover;\n      position: relative;\n      color: #ffffff;\n    }\n    /* Sobreposição para melhor legibilidade */\n    body::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(30, 30, 30, 0.7);\n      z-index: -1;\n    }\n    /* ======= ESTILOS PARA POP-UPS E FORMULÁRIOS ======= */\n    .popup {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.8);\n      z-index: 1000;\n      visibility: visible;\n      opacity: 1;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    .popup.hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n    .popup-content {\n      background-color: #1e1e1e;\n      padding: 30px 40px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n      width: 100%;\n      max-width: 400px;\n      text-align: left;\n      color: #ffffff;\n      position: relative;\n    }\n    .popup-content h2 {\n      text-align: center;\n      color: #45DE71;\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    .form-group {\n      margin-bottom: 20px;\n      position: relative;\n    }\n    .form-group label {\n      position: absolute;\n      top: 50%;\n      left: 12px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      color: #ffffff;\n      font-size: 14px;\n      transition: all 0.2s ease;\n      pointer-events: none;\n      z-index: 2;\n    }\n    .form-group input {\n      width: 100%;\n      padding: 14px 12px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n    }\n    .form-group input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .form-group input:focus + label,\n    .form-group input:not(:placeholder-shown) + label {\n      top: -8px;\n      left: 12px;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    /* Seletor personalizado para telefone */\n    .contact-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 40px;\n    }\n    .custom-select {\n      position: absolute;\n      left: 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      z-index: 3;\n    }\n    .custom-select img {\n      width: 24px;\n      height: 18px;\n      border-radius: 3px;\n    }\n    .phone-input {\n      width: 100%;\n      padding: 10px 12px 10px 75px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      z-index: 1;\n    }\n    .phone-input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .phone-input::placeholder {\n      color: transparent;\n    }\n    .phone-input:focus::placeholder {\n      color: transparent;\n    }\n    .contact-label {\n      position: absolute;\n      top: 50%;\n      left: 90px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      font-size: 14px;\n      color: #ffffff;\n      pointer-events: none;\n      transition: all 0.2s ease;\n      z-index: 4;\n    }\n    .contact-label.active {\n      top: -8px;\n      left: 90px;\n      transform: none;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    .custom-options {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      background-color: #1e1e1e;\n      border: 1px solid #45DE71;\n      border-radius: 5px;\n      max-height: 150px;\n      overflow-y: auto;\n      display: none;\n      z-index: 4;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      margin-top: 5px;\n    }\n    .custom-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: background-color 0.2s, color 0.2s;\n    }\n    .custom-option:hover,\n    .custom-option[aria-selected=\"true\"] {\n      background-color: #45DE71;\n      color: #1e1e1e;\n    }\n    .custom-option img {\n      width: 20px;\n      height: 15px;\n      margin-right: 8px;\n      border-radius: 2px;\n    }\n    /* Botões */\n    button {\n      width: 100%;\n      padding: 12px;\n      background-color: #45DE71;\n      border: none;\n      border-radius: 5px;\n      color: #1e1e1e;\n      font-size: 16px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.2s ease;\n    }\n    button:hover {\n      background-color: #36b659;\n    }\n    .toggle-link {\n      text-align: center;\n      margin-top: 15px;\n    }\n    .toggle-link a {\n      color: #45DE71;\n      text-decoration: none;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    .toggle-link a:hover {\n      text-decoration: underline;\n    }\n    /* Seção de Análise (após login/cadastro) */\n    .analysis-section {\n      display: none;\n      text-align: center;\n      background: #1e1e1e;\n      padding: 20px 30px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n      color: #ffffff;\n      max-width: 600px;\n      width: 100%;\n      margin: 20px auto 0;\n    }\n    .analysis-section h2 {\n      color: #45DE71;\n      margin-bottom: 20px;\n    }\n    /* Responsividade para dispositivos menores */\n    @media (max-width: 500px) {\n      .popup-content {\n        padding: 20px 30px;\n      }\n      .analysis-section {\n        padding: 15px 20px;\n        max-width: 350px;\n      }\n      .contact-label {\n        left: 55px;\n      }\n      .phone-input {\n        padding-left: 75px;\n      }\n    }\n    /* Correção para autofill */\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover, \n    input:-webkit-autofill:focus, \n    input:-webkit-autofill:active {\n      -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      -webkit-text-fill-color: #ffffff !important;\n      color: #ffffff !important;\n    }\n    input:-moz-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    input:-ms-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    /* ===== ESTILOS DAS MENSAGENS DE ERRO (inspirados no segundo código) ===== */\n    .error {\n      color: #ff6b6b;\n      font-size: 13px;\n      margin-top: 3px;\n      display: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- Pop-up de Login -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h2>Login</h2>\n      <form id=\"loginForm\">\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"loginEmail\">E-mail</label>\n          <div class=\"error\" id=\"loginEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"loginPassword\">Senha</label>\n          <div class=\"error\" id=\"loginPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"loginButton\">Entrar</button>\n        <div class=\"toggle-link\">\n          <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- Pop-up de Cadastro -->\n  <div class=\"popup hidden\" id=\"registerPopup\">\n    <div class=\"popup-content\">\n      <h2>Cadastro</h2>\n      <form id=\"registerForm\">\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n          <label for=\"registerName\">Nome</label>\n          <div class=\"error\" id=\"registerNameError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"registerEmail\">E-mail</label>\n          <div class=\"error\" id=\"registerEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <!-- Container com seletor de país e input de telefone -->\n          <div class=\"contact-container\">\n            <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n              <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n            </div>\n            <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required placeholder=\" \">\n            <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n            <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n              <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n              </div>\n              <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n              </div>\n              <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n              </div>\n              <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n              </div>\n            </div>\n          </div>\n          <div class=\"error\" id=\"registerContactError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"registerPassword\">Senha</label>\n          <div class=\"error\" id=\"registerPasswordError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n          <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n          <div class=\"error\" id=\"registerConfirmPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n        <div class=\"toggle-link\">\n          <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- Container Principal (pode ser estilizado adicionalmente, se necessário) -->\n  <div class=\"analysis-section\" id=\"analysisSection\">\n    <h2>Analista de Vendas</h2>\n    <!-- Abaixo, por exemplo, você pode inserir ou renderizar os resultados da análise -->\n    <p>Aqui serão exibidos os resultados da análise, comentários processados pela IA e sugestões.</p>\n  </div>\n\n  <script>\n    /***************** EVENTOS DE TROCA DE POP-UP *****************/\n    const loginPopup    = document.getElementById('loginPopup');\n    const registerPopup = document.getElementById('registerPopup');\n    const analysisSection = document.getElementById('analysisSection');\n\n    // Alterna para o pop-up de cadastro\n    document.getElementById('showRegister').addEventListener('click', () => {\n      loginPopup.classList.add('hidden');\n      registerPopup.classList.remove('hidden');\n    });\n    // Alterna para o pop-up de login\n    document.getElementById('showLogin').addEventListener('click', () => {\n      registerPopup.classList.add('hidden');\n      loginPopup.classList.remove('hidden');\n    });\n\n    /***************** VALIDAÇÕES E ENVIO VIA WEBHOOK (LOGIN) *****************/\n    document.getElementById('loginButton').addEventListener('click', () => {\n      const email    = document.getElementById('loginEmail').value.trim();\n      const password = document.getElementById('loginPassword').value.trim();\n      let isValid    = true;\n\n      // Validação simples do email\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n        showError('loginEmailError', 'Email inválido');\n        isValid = false;\n      } else {\n        clearError('loginEmailError');\n      }\n      // Validação da senha (mínimo 6 caracteres)\n      if (password.length < 6) {\n        showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n        isValid = false;\n      } else {\n        clearError('loginPasswordError');\n      }\n\n      if (isValid) {\n        // Exemplo de envio para webhook via POST (substitua pela sua URL e payload)\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ email, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n          // Se o retorno indicar sucesso, oculta o pop-up e exibe a análise\n          if(data.success) {\n            loginPopup.classList.add('hidden');\n            analysisSection.style.display = 'block';\n          } else {\n            alert(data.message || \"Erro no login. Verifique suas credenciais.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no login:\", error);\n          alert(\"Erro no login. Tente novamente mais tarde.\");\n        });\n      }\n    });\n\n    /***************** VALIDAÇÕES E ENVIO VIA WEBHOOK (CADASTRO) *****************/\n    document.getElementById('registerButton').addEventListener('click', () => {\n      const name            = document.getElementById('registerName').value.trim();\n      const email           = document.getElementById('registerEmail').value.trim();\n      const contactRaw      = document.getElementById('registerContact').value.trim();\n      const password        = document.getElementById('registerPassword').value;\n      const confirmPassword = document.getElementById('registerConfirmPassword').value;\n      let isValid           = true;\n\n      if (!name) {\n        showError('registerNameError', 'Nome é obrigatório');\n        isValid = false;\n      } else {\n        clearError('registerNameError');\n      }\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n        showError('registerEmailError', 'Email inválido');\n        isValid = false;\n      } else {\n        clearError('registerEmailError');\n      }\n      if (!contactRaw) {\n        showError('registerContactError', 'Contato é obrigatório');\n        isValid = false;\n      } else {\n        clearError('registerContactError');\n      }\n      if (password.length < 6) {\n        showError('registerPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n        isValid = false;\n      } else {\n        clearError('registerPasswordError');\n      }\n      if (password !== confirmPassword) {\n        showError('registerConfirmPasswordError', 'Senhas não coincidem');\n        isValid = false;\n      } else {\n        clearError('registerConfirmPasswordError');\n      }\n\n      if (isValid) {\n        // Exemplo de envio para webhook via POST para cadastro (substitua pela sua URL e payload)\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/analyze\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ name, email, contact: contactRaw, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n          if(data.success) {\n            alert(\"Cadastro realizado com sucesso!\");\n            registerPopup.classList.add('hidden');\n            analysisSection.style.display = 'block';\n          } else {\n            alert(data.message || \"Erro no cadastro. Verifique as informações.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no cadastro:\", error);\n          alert(\"Erro no cadastro. Tente novamente mais tarde.\");\n        });\n      }\n    });\n\n    /***************** FUNÇÕES AUXILIARES DE VALIDAÇÃO *****************/\n    function showError(elementId, message) {\n      const errorElement = document.getElementById(elementId);\n      errorElement.textContent = message;\n      errorElement.style.display = 'block';\n    }\n    function clearError(elementId) {\n      const errorElement = document.getElementById(elementId);\n      errorElement.textContent = \"\";\n      errorElement.style.display = 'none';\n    }\n\n    /***************** SELETOR DE PAÍS PARA CONTATO *****************/\n    const customSelect  = document.getElementById('customSelect');\n    const customOptions = document.getElementById('customOptions');\n    const currentFlag   = document.getElementById('currentFlag');\n    const phoneInput    = document.getElementById('registerContact');\n\n    customSelect.addEventListener('click', (event) => {\n      event.stopPropagation();\n      const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n      customSelect.setAttribute('aria-expanded', !expanded);\n      customOptions.style.display = expanded ? 'none' : 'block';\n    });\n    customOptions.querySelectorAll('.custom-option').forEach(option => {\n      option.addEventListener('click', () => {\n        const flagSrc    = option.querySelector('img').src;\n        const countryCode = option.getAttribute('data-value');\n        currentFlag.src = flagSrc;\n        phoneInput.value = countryCode + ' ';\n        customOptions.style.display = 'none';\n        customSelect.setAttribute('aria-expanded', 'false');\n      });\n    });\n    document.addEventListener('click', (event) => {\n      if (!customSelect.contains(event.target) && !customOptions.contains(event.target)) {\n        customOptions.style.display = 'none';\n        customSelect.setAttribute('aria-expanded', 'false');\n      }\n    });\n\n    /***************** LABEL FLUTUANTE DO CONTATO *****************/\n    const registerContact = document.getElementById('registerContact');\n    const contactLabel    = document.querySelector('.contact-container .contact-label');\n    function updateContactLabel() {\n      if (document.activeElement === registerContact || registerContact.value.trim() !== '') {\n        contactLabel.classList.add('active');\n      } else {\n        contactLabel.classList.remove('active');\n      }\n    }\n    registerContact.addEventListener('focus', updateContactLabel);\n    registerContact.addEventListener('blur', updateContactLabel);\n    registerContact.addEventListener('input', updateContactLabel);\n    window.addEventListener('DOMContentLoaded', updateContactLabel);\n  </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -1020,
        -720
      ],
      "id": "d8131a43-89d6-435e-9ba4-e53cdc3ba781",
      "name": "comwebhook e atualizado",
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://api.tomticket.com/v2.0/ticket/list",
        "allowUnauthorizedCerts": true,
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "TomTicket",
              "value": "Bearer d06ef10487be6ad29b2f24e8d279b254cacd1c1e8284cbdc852b95329a28c954"
            }
          ]
        }
      },
      "id": "69af4ceb-06ad-4d1c-ba44-a56a36df4a29",
      "name": "List Tickets",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -840,
        240
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "BjPWOeZdmAaP6H1D",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function calculateTimeOpen(creationDate) {\n  const created = new Date(creationDate);\n  const now = new Date();\n  const diffHours = Math.round((now - created) / (1000 * 60 * 60));\n  return diffHours;\n}\n\nfunction calculatePriority(message, subject) {\n  const urgentKeywords = ['urgente', 'emergência', 'crítico', 'erro', 'falha'];\n  const text = (message + ' ' + subject).toLowerCase();\n  return urgentKeywords.some(keyword => text.includes(keyword)) ? 'alta' : 'normal';\n}\n\nconst tickets = $input.first().json.data;\n\nconst output = tickets.map(ticket => {\n  const baseTicket = {\n    id: ticket.protocol,\n    Titulo: ticket.subject,\n    Conversa: ticket.message,\n    Data: ticket.creation_date,\n  };\n\n  const enrichedData = {\n    cliente_info: {\n      nome: ticket.customer_name,\n      email: ticket.customer_email,\n      empresa: ticket.company_name\n    },\n    metrics: {\n      tempo_aberto_horas: calculateTimeOpen(ticket.creation_date),\n      prioridade_sugerida: calculatePriority(ticket.message, ticket.subject),\n      departamento: ticket.department,\n      categoria: ticket.category,\n      status: ticket.status\n    }\n  };\n\n  return {\n    ...baseTicket,\n    ...enrichedData\n  };\n});\n\nreturn {\n  json: {\n    tickets: output\n  }\n};"
      },
      "id": "37001f76-0922-48e8-a96e-56203cb06877",
      "name": "Prepare Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -660,
        240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const analysis = $input.first().json.output;\nconst ticketData = $node[\"Prepare Data\"].json.tickets[0];\n\n// Função para formatar datas no formato DD/MM/YYYY\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('pt-BR', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  });\n};\n\n// Função para formatar e melhorar a legibilidade do conteúdo\nconst formatContent = content => {\n  if (typeof content !== 'string') {\n    return '<p>Conteúdo não disponível</p>';\n  }\n\n  const lines = content.split(/\\r\\n|\\n|\\r/);\n  const formattedLines = lines.map(line => {\n    let formattedLine = line.trim();\n\n    // Remover vírgulas no final de cada linha\n    if (formattedLine.endsWith(',')) {\n      formattedLine = formattedLine.slice(0, -1).trim();\n    }\n\n    // Verificar se a linha está vazia\n    if (formattedLine === '') {\n      return '<br>';\n    }\n\n    // Retornar a linha formatada com HTML escapado\n    return `<p>${formattedLine\n      .replace(/&/g, '&amp;')    // Escapa '&'\n      .replace(/</g, '&lt;')    // Escapa '<'\n      .replace(/>/g, '&gt;')    // Escapa '>'\n      .replace(/\"/g, '&quot;')  // Escapa aspas duplas\n      .replace(/'/g, '&#39;')   // Escapa aspas simples\n      .replace(/{/g, '')        // Remove '{'\n      .replace(/}/g, '')        // Remove '}'\n      .replace(/\\[/g, '')       // Remove '['\n      .replace(/]/g, '')        // Remove ']'\n    }</p>`;\n  });\n\n  return formattedLines.join('');\n};\n\n// Retorno do JSON formatado\nreturn {\n  json: {\n    success: true,\n    timestamp: new Date().toISOString(),\n    ticket_info: {\n      id: ticketData.id,\n      title: ticketData.Titulo,\n      date: formatDate(ticketData.Data),\n      client: ticketData.cliente_info,\n      metrics: ticketData.metrics\n    },\n    analysis: {\n      content: formatContent(analysis), // Conteúdo formatado\n      metadata: {\n        model: \"gpt-4\",\n        temperature: 0.7,\n        type: \"detailed_ticket_analysis\",\n        analyzed_at: new Date().toISOString()\n      }\n    }\n  }\n};\n"
      },
      "id": "ce172e8f-e9d5-4f39-a57c-df023e8c90ae",
      "name": "Format Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -160,
        240
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$node[\"Format Response\"].json}}",
        "options": {}
      },
      "id": "7de9392f-396e-468e-941b-0232fd2fc49f",
      "name": "Respond to Webhook2",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        220,
        240
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d75dbb33-85b3-477a-ab59-19b25bde2c53",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -520,
        420
      ],
      "credentials": {
        "openAiApi": {
          "id": "RhJGnAesg7rbO4uq",
          "name": "primeiro assistent"
        }
      }
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=Analise o seguinte ticket de suporte e forneça:\n1. Resumo do problema\n2. Classificação do tipo de problema\n3. Nível de urgência sugerido\n4. Principais pontos de ação necessários\n5. Sugestões de resposta\n\nTicket:\n{{ $json.tickets[0].Conversa }}\n\nContexto adicional:\n- Cliente: {{ $('List Tickets').item.json.data[0].customer.name }}\n- Empresa: {{ $('List Tickets').item.json.data[0].customer.organization.name }}\n- Tempo aberto: {{ $json.tickets[0].metrics.tempo_aberto_horas }} horas",
        "options": {}
      },
      "id": "6b4793e1-f65b-4c66-b6c5-3f4e545e4fac",
      "name": "AI Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -480,
        240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TomTicket API</title>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Informações do Ticket</h1>\n    \n    <div class=\"card\">\n      <h2>Detalhes do Ticket</h2>\n      <div class=\"info-row\">\n        <span class=\"label\">ID:</span>\n        <span class=\"value\">{{ $json.ticket_info.id }}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Título:</span>\n        <span class=\"value\">{{ $json.ticket_info.title }}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Data:</span>\n        <span class=\"value date-format\">{{ $json.ticket_info.date }}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Empresa:</span>\n        <span class=\"value\">{{ $('List Tickets').item.json.data[0].customer.organization.name }}</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Cliente:</span>\n        <span class=\"value\">{{ $('List Tickets').item.json.data[0].customer.name }}</span>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <h2>Métricas</h2>\n      <div class=\"info-row\">\n        <span class=\"label\">Tempo Aberto:</span>\n        <span class=\"value\">{{ $json.ticket_info.metrics.tempo_aberto_horas }}h</span>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <h2>Análise da IA</h2>\n      <div class=\"analysis-content\">      \n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Conteúdo:</span>\n        <span class=\"value\">{{ $json.analysis.content }}</span>\n      </div>\n  \n    </div>\n  </div>\n</body>\n<style>\n.container {\n  background-color: #f5f7fa;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.card {\n  background-color: #ffffff;\n  padding: 16px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #ff6d5a;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n  padding: 8px;\n  margin-bottom: 20px;\n}\n\nh2 {\n  color: #909399;\n  font-size: 18px;\n  font-weight: bold;\n  padding: 8px;\n  margin-bottom: 12px;\n  border-bottom: 1px solid #eaeaea;\n}\n\n.info-row {\n  display: flex;\n  padding: 8px;\n  border-bottom: 1px solid #f5f5f5;\n}\n\n.info-row:last-child {\n  border-bottom: none;\n}\n\n.label {\n  color: #909399;\n  font-weight: bold;\n  width: 140px;\n  flex-shrink: 0;\n}\n\n.value {\n  color: #606266;\n  flex-grow: 1;\n}\n\n.analysis-content {\n  padding: 10px 0;\n}\n\n.section {\n  margin-bottom: 20px;\n}\n\n.section:last-child {\n  margin-bottom: 0;\n}\n\n.section h3 {\n  color: #606266;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.section p {\n  color: #606266;\n  line-height: 1.5;\n  margin: 0;\n}\n\n.section ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.section ul li {\n  color: #606266;\n  padding: 4px 0;\n  line-height: 1.5;\n  position: relative;\n  padding-left: 20px;\n}\n\n.section ul li:before {\n  content: \"•\";\n  color: #ff6d5a;\n  position: absolute;\n  left: 0;\n}\n\n.urgency {\n  display: inline-block;\n  padding: 4px 12px;\n  border-radius: 4px;\n  background-color: #f56c6c;\n  color: white;\n  font-weight: 600;\n}\n\n.timestamp {\n  border-top: 1px solid #eaeaea;\n  margin-top: 20px;\n  padding-top: 12px;\n}\n\n.priority {\n  color: #ffffff;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.priority:before {\n  content: attr(data-value);\n}\n\n.priority[data-value=\"alta\"] {\n  background-color: #f56c6c;\n}\n\n.priority[data-value=\"normal\"] {\n  background-color: #67c23a;\n}\n</style>\n<script>\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Formatar apenas datas (DD/MM/YYYY)\n  const dates = document.querySelectorAll('.date-format');\n  dates.forEach(date => {\n    if (date.textContent) {\n      const timestamp = date.textContent;\n      const day = timestamp.substring(8, 10);\n      const month = timestamp.substring(5, 7);\n      const year = timestamp.substring(0, 4);\n      date.textContent = `${day}/${month}/${year}`;\n    }\n  });\n\n  // Formatar datetime (DD/MM/YYYY HH:mm:ss)\n  const datetimes = document.querySelectorAll('.datetime-format');\n  datetimes.forEach(datetime => {\n    if (datetime.textContent) {\n      const timestamp = datetime.textContent;\n      const day = timestamp.substring(8, 10);\n      const month = timestamp.substring(5, 7);\n      const year = timestamp.substring(0, 4);\n      const time = timestamp.substring(11, 19);\n      datetime.textContent = `${day}/${month}/${year} ${time}`;\n    }\n  });\n\n  // Configurar badges de prioridade\n  const priorities = document.querySelectorAll('.priority');\n  priorities.forEach(priority => {\n    priority.dataset.value = priority.textContent.toLowerCase().trim();\n  });\n\n  // Remover chaves dos valores de conteúdo\n  const values = document.querySelectorAll('.value');\n  values.forEach(value => {\n    if (value.textContent) {\n      // Corrigir conteúdo escapado (como &quot;)\n      let fixedContent = value.textContent.replace(/&quot;/g, '\"');\n      fixedContent = fixedContent.replace(/[{}]/g, '').trim();\n      value.textContent = fixedContent;\n    }\n  });\n});\n\n</script>\n</html>"
      },
      "id": "d422598f-734c-4e8c-9a74-1001decb6869",
      "name": "HTML2",
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        20,
        -900
      ],
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "analyze-tickets",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "51666176-1eef-457f-b5fc-8c3683d23959",
      "name": "Webhook3",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1020,
        240
      ],
      "webhookId": "tomticket-analyze"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Análise de Conversas</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    /* ======= RESET E ESTILOS GLOBAIS ======= */\n    *, *::before, *::after {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    html, body {\n      height: 100%;\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n      background-size: cover;\n      position: relative;\n      color: #ffffff;\n    }\n    /* Sobreposição para melhor legibilidade */\n    body::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(30, 30, 30, 0.7);\n      z-index: -1;\n    }\n    /* ======= ESTILOS DOS POP-UPS (LOGIN/CADASTRO) ======= */\n    .popup {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.8);\n      z-index: 1000;\n      visibility: visible;\n      opacity: 1;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    .popup.hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n    .popup-content {\n      background-color: #1e1e1e;\n      padding: 30px 40px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n      width: 100%;\n      max-width: 400px;\n      text-align: left;\n      color: #ffffff;\n      position: relative;\n    }\n    .popup-content h2 {\n      text-align: center;\n      color: #45DE71;\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    .form-group {\n      margin-bottom: 20px;\n      position: relative;\n    }\n    .form-group label {\n      position: absolute;\n      top: 50%;\n      left: 12px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      color: #ffffff;\n      font-size: 14px;\n      transition: all 0.2s ease;\n      pointer-events: none;\n      z-index: 2;\n    }\n    .form-group input {\n      width: 100%;\n      padding: 14px 12px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n    }\n    .form-group input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .form-group input:focus + label,\n    .form-group input:not(:placeholder-shown) + label {\n      top: -8px;\n      left: 12px;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    /* Seletor personalizado para telefone */\n    .contact-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 40px;\n    }\n    .custom-select {\n      position: absolute;\n      left: 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      z-index: 3;\n    }\n    .custom-select img {\n      width: 24px;\n      height: 18px;\n      border-radius: 3px;\n    }\n    .phone-input {\n      width: 100%;\n      padding: 10px 12px 10px 75px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      z-index: 1;\n    }\n    .phone-input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .phone-input::placeholder {\n      color: transparent;\n    }\n    .phone-input:focus::placeholder {\n      color: transparent;\n    }\n    .contact-label {\n      position: absolute;\n      top: 50%;\n      left: 90px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      font-size: 14px;\n      color: #ffffff;\n      pointer-events: none;\n      transition: all 0.2s ease;\n      z-index: 4;\n    }\n    .contact-label.active {\n      top: -8px;\n      left: 90px;\n      transform: none;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    .custom-options {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      background-color: #1e1e1e;\n      border: 1px solid #45DE71;\n      border-radius: 5px;\n      max-height: 150px;\n      overflow-y: auto;\n      display: none;\n      z-index: 4;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      margin-top: 5px;\n    }\n    .custom-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: background-color 0.2s, color 0.2s;\n    }\n    .custom-option:hover,\n    .custom-option[aria-selected=\"true\"] {\n      background-color: #45DE71;\n      color: #1e1e1e;\n    }\n    .custom-option img {\n      width: 20px;\n      height: 15px;\n      margin-right: 8px;\n      border-radius: 2px;\n    }\n    /* Botões */\n    button {\n      width: 100%;\n      padding: 12px;\n      background-color: #45DE71;\n      border: none;\n      border-radius: 5px;\n      color: #1e1e1e;\n      font-size: 16px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.2s ease;\n    }\n    button:hover {\n      background-color: #36b659;\n    }\n    .toggle-link {\n      text-align: center;\n      margin-top: 15px;\n    }\n    .toggle-link a {\n      color: #45DE71;\n      text-decoration: none;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    .toggle-link a:hover {\n      text-decoration: underline;\n    }\n    /* ======= ESTILOS DA SEÇÃO DE ANÁLISE (TELA FINAL) ======= */\n    .analysis-section {\n      display: none;\n      margin: 20px auto 0;\n      width: 100%;\n      max-width: 600px;\n      padding: 20px 30px;\n      background: #1e1e1e;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      color: #ffffff;\n    }\n    .analysis-section h2 {\n      color: #45DE71;\n      margin-bottom: 20px;\n      text-align: center;\n    }\n    /* Estilos para os elementos de análise */\n    .card {\n      background-color: #27272a;\n      border: 1px solid #3f3f46;\n      border-radius: 0.5rem;\n      padding: 1rem;\n      margin: 1rem 0;\n    }\n    .card-header {\n      border-bottom: 1px solid #3f3f46;\n      margin-bottom: 1rem;\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n    }\n    .card-header h1 {\n      font-size: 1.25rem;\n      font-weight: bold;\n      color: #ffffff;\n    }\n    .card-content {\n      line-height: 1.5;\n    }\n    .section-box {\n      background-color: #1f2937;\n      padding: 1rem;\n      border-radius: 0.5rem;\n      margin-bottom: 1rem;\n    }\n    .section-box h3 {\n      font-size: 0.875rem;\n      margin-bottom: 0.5rem;\n    }\n    .section-box ul {\n      list-style: none;\n      margin-left: 1rem;\n    }\n    .section-box ul li {\n      display: flex;\n      align-items: center;\n      gap: 0.5rem;\n      font-size: 0.875rem;\n      margin-bottom: 0.25rem;\n    }\n    .pill {\n      padding: 0.25rem 0.5rem;\n      border-radius: 9999px;\n      font-size: 0.75rem;\n      font-weight: bold;\n      text-align: center;\n    }\n    .pill.positivo {\n      background-color: rgba(16, 185, 129, 0.2);\n      color: #10B981;\n    }\n    .pill.negativo {\n      background-color: rgba(239, 68, 68, 0.2);\n      color: #EF4444;\n    }\n    .score {\n      color: #ffffff;\n      font-weight: bold;\n    }\n    .flex {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n    .icon {\n      width: 20px;\n      height: 20px;\n      vertical-align: middle;\n    }\n    /* Responsividade */\n    @media (max-width: 500px) {\n      .popup-content {\n        padding: 20px 30px;\n      }\n      .analysis-section {\n        padding: 15px 20px;\n        max-width: 350px;\n      }\n      .contact-label {\n        left: 55px;\n      }\n      .phone-input {\n        padding-left: 75px;\n      }\n    }\n    /* Correção para autofill */\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover, \n    input:-webkit-autofill:focus, \n    input:-webkit-autofill:active {\n      -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      -webkit-text-fill-color: #ffffff !important;\n      color: #ffffff !important;\n    }\n    input:-moz-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    input:-ms-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    /* Mensagens de erro */\n    .error {\n      color: #ff6b6b;\n      font-size: 13px;\n      margin-top: 3px;\n      display: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- POP-UP DE LOGIN -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h2>Login</h2>\n      <form id=\"loginForm\">\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"loginEmail\">E-mail</label>\n          <div class=\"error\" id=\"loginEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"loginPassword\">Senha</label>\n          <div class=\"error\" id=\"loginPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"loginButton\">Entrar</button>\n        <div class=\"toggle-link\">\n          <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE CADASTRO -->\n  <div class=\"popup hidden\" id=\"registerPopup\">\n    <div class=\"popup-content\">\n      <h2>Cadastro</h2>\n      <form id=\"registerForm\">\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n          <label for=\"registerName\">Nome</label>\n          <div class=\"error\" id=\"registerNameError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"registerEmail\">E-mail</label>\n          <div class=\"error\" id=\"registerEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <!-- Container com seletor de país e input de telefone -->\n          <div class=\"contact-container\">\n            <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n              <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n            </div>\n            <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required placeholder=\" \">\n            <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n            <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n              <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n              </div>\n              <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n              </div>\n              <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n              </div>\n              <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n              </div>\n            </div>\n          </div>\n          <div class=\"error\" id=\"registerContactError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"registerPassword\">Senha</label>\n          <div class=\"error\" id=\"registerPasswordError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n          <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n          <div class=\"error\" id=\"registerConfirmPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n        <div class=\"toggle-link\">\n          <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- SEÇÃO DE ANÁLISE (TELA FINAL) -->\n  <div class=\"analysis-section\" id=\"analysisSection\">\n    <h2>Análise de Feedback</h2>\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <!-- Ícone simulado de \"Cérebro\" -->\n        <img src=\"https://via.placeholder.com/24/10B981/ffffff?text=B\" alt=\"Ícone Brain\" class=\"icon\" />\n        <h1>Análise de Feedback</h1>\n      </div>\n      <div class=\"card-content\" id=\"analysisContent\">\n        <!-- Os dados de análise serão inseridos dinamicamente aqui -->\n        <p>Carregando análise...</p>\n      </div>\n    </div>\n  </div>\n\n  <script>\n    /* EVENTOS DE TROCA DE POP-UP */\n    const loginPopup = document.getElementById('loginPopup');\n    const registerPopup = document.getElementById('registerPopup');\n    const analysisSection = document.getElementById('analysisSection');\n    const analysisContent = document.getElementById('analysisContent');\n\n    document.getElementById('showRegister').addEventListener('click', () => {\n      loginPopup.classList.add('hidden');\n      registerPopup.classList.remove('hidden');\n    });\n    document.getElementById('showLogin').addEventListener('click', () => {\n      registerPopup.classList.add('hidden');\n      loginPopup.classList.remove('hidden');\n    });\n\n    /* ENVIO DOS DADOS DE LOGIN PARA O WEBHOOK (POST) */\n    document.getElementById('loginButton').addEventListener('click', () => {\n      const email = document.getElementById('loginEmail').value.trim();\n      const password = document.getElementById('loginPassword').value.trim();\n      let isValid = true;\n\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n        showError('loginEmailError', 'Email inválido');\n        isValid = false;\n      } else {\n        clearError('loginEmailError');\n      }\n      if (password.length < 6) {\n        showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n        isValid = false;\n      } else {\n        clearError('loginPasswordError');\n      }\n      if (isValid) {\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ email, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            loginPopup.classList.add('hidden');\n            analysisSection.style.display = 'block';\n            enviarAnalise(); // Envia a análise após login\n          } else {\n            alert(data.message || \"Erro no login. Verifique suas credenciais.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no login:\", error);\n          alert(\"Erro no login. Tente novamente mais tarde.\");\n        });\n      }\n    });\n\n    /* ENVIO DOS DADOS DE CADASTRO PARA O WEBHOOK (POST) */\n    document.getElementById('registerButton').addEventListener('click', () => {\n      const name = document.getElementById('registerName').value.trim();\n      const email = document.getElementById('registerEmail').value.trim();\n      const contact = document.getElementById('registerContact').value.trim();\n      const password = document.getElementById('registerPassword').value;\n      const confirmPassword = document.getElementById('registerConfirmPassword').value;\n      let isValid = true;\n      \n      if (!name) {\n        showError('registerNameError', 'Nome é obrigatório');\n        isValid = false;\n      } else {\n        clearError('registerNameError');\n      }\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n        showError('registerEmailError', 'Email inválido');\n        isValid = false;\n      } else {\n        clearError('registerEmailError');\n      }\n      if (!contact) {\n        showError('registerContactError', 'Contato é obrigatório');\n        isValid = false;\n      } else {\n        clearError('registerContactError');\n      }\n      if (password.length < 6) {\n        showError('registerPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n        isValid = false;\n      } else {\n        clearError('registerPasswordError');\n      }\n      if (password !== confirmPassword) {\n        showError('registerConfirmPasswordError', 'Senhas não coincidem');\n        isValid = false;\n      } else {\n        clearError('registerConfirmPasswordError');\n      }\n      if (isValid) {\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/criaconta\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ name, email, contact, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            alert(\"Cadastro realizado com sucesso!\");\n            registerPopup.classList.add('hidden');\n            analysisSection.style.display = 'block';\n            enviarAnalise(); // Envia a análise após cadastro\n          } else {\n            alert(data.message || \"Erro no cadastro. Verifique as informações.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no cadastro:\", error);\n          alert(\"Erro no cadastro. Tente novamente mais tarde.\");\n        });\n      }\n    });\n\n    /* FUNÇÃO PARA ENVIAR A ANÁLISE VIA GET */\n    function enviarAnalise() {\n      // Dados de análise (exemplo fixo – personalize conforme necessário)\n      const params = new URLSearchParams({\n        originalComment: \"A entrega demorou muito mais que o prometido, o atendente foi grosseiro quando reclamei, mas o produto em si é de boa qualidade.\",\n        sentiment: \"Negativo\",\n        score: 35,\n        positivePoints: \"Qualidade do produto satisfatória\",\n        negativePoints: \"Atraso na entrega;Atendimento ao cliente inadequado\",\n        improvements: \"Melhorar o sistema de previsão de entrega;Realizar treinamento de atendimento ao cliente;Manter o padrão de qualidade do produto\",\n        priority: \"Alta\",\n        impact: \"Experiência do Cliente\"\n      });\n\n      const url = `https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/analyze?${params.toString()}`;\n\n      fetch(url, {\n        method: \"GET\"\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          // Atualiza a seção de análise com os dados retornados\n          updateAnalysisSection(data.analysis);\n        } else {\n          alert(data.message || \"Erro ao obter análise.\");\n          analysisContent.innerHTML = \"<p>Erro ao carregar análise.</p>\";\n        }\n      })\n      .catch(error => {\n        console.error(\"Erro na análise:\", error);\n        alert(\"Erro ao obter análise. Tente novamente mais tarde.\");\n        analysisContent.innerHTML = \"<p>Erro ao carregar análise.</p>\";\n      });\n    }\n\n    /* FUNÇÃO PARA ATUALIZAR A SEÇÃO DE ANÁLISE COM OS DADOS RETORNADOS */\n    function updateAnalysisSection(analysis) {\n      // Limpa o conteúdo atual\n      analysisContent.innerHTML = '';\n\n      // Comentário Original\n      const originalCommentBox = document.createElement('div');\n      originalCommentBox.classList.add('section-box');\n      originalCommentBox.innerHTML = `\n        <h3>Comentário Original:</h3>\n        <p>${analysis.originalComment}</p>\n      `;\n      analysisContent.appendChild(originalCommentBox);\n\n      // Sentimento e Pontuação\n      const sentimentBox = document.createElement('div');\n      sentimentBox.classList.add('section-box', 'flex');\n      const sentimentPill = document.createElement('div');\n      sentimentPill.classList.add('pill', analysis.sentiment.toLowerCase());\n      sentimentPill.textContent = analysis.sentiment;\n      const scoreDiv = document.createElement('div');\n      scoreDiv.classList.add('score');\n      scoreDiv.innerHTML = `Score: <strong>${analysis.score}/100</strong>`;\n      sentimentBox.appendChild(sentimentPill);\n      sentimentBox.appendChild(scoreDiv);\n      analysisContent.appendChild(sentimentBox);\n\n      // Pontos Principais\n      const mainPointsBox = document.createElement('div');\n      mainPointsBox.classList.add('section-box');\n      mainPointsBox.innerHTML = `\n        <h3>Análise dos Pontos:</h3>\n        <div style=\"margin-bottom: 1rem;\">\n          <h4 style=\"font-size: 0.875rem; color: #10B981; margin-bottom: 0.5rem;\">Pontos Positivos:</h4>\n          <ul>\n            ${analysis.positivePoints.split(';').map(point => `<li><span style=\"display:inline-block;width:6px;height:6px;background:#10B981;border-radius:50%;\"></span> ${point.trim()}</li>`).join('')}\n          </ul>\n        </div>\n        <div>\n          <h4 style=\"font-size: 0.875rem; color: #EF4444; margin-bottom: 0.5rem;\">Pontos a Melhorar:</h4>\n          <ul>\n            ${analysis.negativePoints.split(';').map(point => `<li><span style=\"display:inline-block;width:6px;height:6px;background:#EF4444;border-radius:50%;\"></span> ${point.trim()}</li>`).join('')}\n          </ul>\n        </div>\n      `;\n      analysisContent.appendChild(mainPointsBox);\n\n      // Recomendações\n      const recommendationsBox = document.createElement('div');\n      recommendationsBox.classList.add('section-box');\n      recommendationsBox.innerHTML = `\n        <h3>Recomendações</h3>\n        <ul>\n          ${analysis.improvements.split(';').map(item => `<li>${item.trim()}</li>`).join('')}\n        </ul>\n      `;\n      analysisContent.appendChild(recommendationsBox);\n\n      // Prioridade e Impacto\n      const priorityImpactBox = document.createElement('div');\n      priorityImpactBox.classList.add('section-box', 'flex');\n      priorityImpactBox.innerHTML = `\n        <div style=\"display: flex; align-items: center; gap: 0.5rem;\">\n          <img src=\"https://via.placeholder.com/16/EF4444/ffffff?text=!\" alt=\"Alerta\" class=\"icon\" style=\"width: 16px; height: 16px;\" />\n          <span>Prioridade:</span>\n          <span style=\"font-weight: bold; color:#EF4444;\">${analysis.priority}</span>\n        </div>\n        <div>\n          <span>Área de Impacto:</span>\n          <span style=\"font-weight: bold;\">${analysis.impact}</span>\n        </div>\n      `;\n      analysisContent.appendChild(priorityImpactBox);\n    }\n\n    function showError(id, message) {\n      const errorElem = document.getElementById(id);\n      errorElem.textContent = message;\n      errorElem.style.display = 'block';\n    }\n    function clearError(id) {\n      const errorElem = document.getElementById(id);\n      errorElem.textContent = \"\";\n      errorElem.style.display = 'none';\n    }\n\n    /* SELETOR DE PAÍS PARA CONTATO */\n    const customSelect = document.getElementById('customSelect');\n    const customOptions = document.getElementById('customOptions');\n    const currentFlag = document.getElementById('currentFlag');\n    const phoneInput = document.getElementById('registerContact');\n\n    customSelect.addEventListener('click', (e) => {\n      e.stopPropagation();\n      const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n      customSelect.setAttribute('aria-expanded', !expanded);\n      customOptions.style.display = expanded ? 'none' : 'block';\n    });\n    customOptions.querySelectorAll('.custom-option').forEach(option => {\n      option.addEventListener('click', () => {\n        const flagSrc = option.querySelector('img').src;\n        const countryCode = option.getAttribute('data-value');\n        currentFlag.src = flagSrc;\n        phoneInput.value = countryCode + ' ';\n        customOptions.style.display = 'none';\n        customSelect.setAttribute('aria-expanded', 'false');\n      });\n    });\n    document.addEventListener('click', (e) => {\n      if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n        customOptions.style.display = 'none';\n        customSelect.setAttribute('aria-expanded', 'false');\n      }\n    });\n\n    /* LABEL FLUTUANTE PARA CONTATO */\n    const registerContactElem = document.getElementById('registerContact');\n    const contactLabel = document.querySelector('.contact-container .contact-label');\n    function updateContactLabel() {\n      if (document.activeElement === registerContactElem || registerContactElem.value.trim() !== '') {\n        contactLabel.classList.add('active');\n      } else {\n        contactLabel.classList.remove('active');\n      }\n    }\n    registerContactElem.addEventListener('focus', updateContactLabel);\n    registerContactElem.addEventListener('blur', updateContactLabel);\n    registerContactElem.addEventListener('input', updateContactLabel);\n    window.addEventListener('DOMContentLoaded', updateContactLabel);\n  </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -820,
        -900
      ],
      "id": "fcd3719c-7333-48ef-9b2a-c1aed5e639af",
      "name": "versao final",
      "disabled": true
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Análise de Conversas</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    /* ======= RESET E ESTILOS GLOBAIS ======= */\n    *, *::before, *::after {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    html, body {\n      height: 100%;\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n      background-size: cover;\n      position: relative;\n      color: #ffffff;\n    }\n    /* Sobreposição para melhor legibilidade */\n    body::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(30, 30, 30, 0.7);\n      z-index: -1;\n    }\n    /* ======= ESTILOS DOS POP-UPS (LOGIN/CADASTRO) ======= */\n    .popup {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.8);\n      z-index: 1000;\n      visibility: visible;\n      opacity: 1;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    .popup.hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n    .popup-content {\n      background-color: #1e1e1e;\n      padding: 30px 40px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);\n      width: 100%;\n      max-width: 400px;\n      text-align: left;\n      color: #ffffff;\n      position: relative;\n    }\n    .popup-content h2 {\n      text-align: center;\n      color: #45DE71;\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    .form-group {\n      margin-bottom: 20px;\n      position: relative;\n    }\n    .form-group label {\n      position: absolute;\n      top: 50%;\n      left: 12px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      color: #ffffff;\n      font-size: 14px;\n      transition: all 0.2s ease;\n      pointer-events: none;\n      z-index: 2;\n    }\n    .form-group input {\n      width: 100%;\n      padding: 14px 12px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n    }\n    .form-group input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .form-group input:focus + label,\n    .form-group input:not(:placeholder-shown) + label {\n      top: -8px;\n      left: 12px;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    /* Seletor personalizado para telefone */\n    .contact-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 40px;\n    }\n    .custom-select {\n      position: absolute;\n      left: 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      z-index: 3;\n    }\n    .custom-select img {\n      width: 24px;\n      height: 18px;\n      border-radius: 3px;\n    }\n    .phone-input {\n      width: 100%;\n      padding: 10px 12px 10px 75px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      z-index: 1;\n    }\n    .phone-input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .phone-input::placeholder {\n      color: transparent;\n    }\n    .phone-input:focus::placeholder {\n      color: transparent;\n    }\n    .contact-label {\n      position: absolute;\n      top: 50%;\n      left: 90px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      font-size: 14px;\n      color: #ffffff;\n      pointer-events: none;\n      transition: all 0.2s ease;\n      z-index: 4;\n    }\n    .contact-label.active {\n      top: -8px;\n      left: 90px;\n      transform: none;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    .custom-options {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      background-color: #1e1e1e;\n      border: 1px solid #45DE71;\n      border-radius: 5px;\n      max-height: 150px;\n      overflow-y: auto;\n      display: none;\n      z-index: 4;\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n      margin-top: 5px;\n    }\n    .custom-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: background-color 0.2s, color 0.2s;\n    }\n    .custom-option:hover,\n    .custom-option[aria-selected=\"true\"] {\n      background-color: #45DE71;\n      color: #1e1e1e;\n    }\n    .custom-option img {\n      width: 20px;\n      height: 15px;\n      margin-right: 8px;\n      border-radius: 2px;\n    }\n    /* Botões */\n    button {\n      width: 100%;\n      padding: 12px;\n      background-color: #45DE71;\n      border: none;\n      border-radius: 5px;\n      color: #1e1e1e;\n      font-size: 16px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.2s ease;\n    }\n    button:hover {\n      background-color: #36b659;\n    }\n    .toggle-link {\n      text-align: center;\n      margin-top: 15px;\n    }\n    .toggle-link a {\n      color: #45DE71;\n      text-decoration: none;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    .toggle-link a:hover {\n      text-decoration: underline;\n    }\n    /* ======= ESTILOS DA SEÇÃO DE TICKETS ======= */\n    .tickets-section {\n      display: none;\n      margin: 20px auto 0;\n      width: 100%;\n      max-width: 600px;\n      padding: 20px 30px;\n      background: #1e1e1e;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      color: #ffffff;\n    }\n    .tickets-section h2 {\n      color: #45DE71;\n      margin-bottom: 20px;\n      text-align: center;\n    }\n    .ticket {\n      background-color: #27272a;\n      border: 1px solid #3f3f46;\n      border-radius: 5px;\n      padding: 15px;\n      margin-bottom: 15px;\n    }\n    .ticket p {\n      margin-bottom: 10px;\n      font-size: 14px;\n    }\n    /* Responsividade */\n    @media (max-width: 500px) {\n      .popup-content {\n        padding: 20px 30px;\n      }\n      .tickets-section {\n        padding: 15px 20px;\n        max-width: 350px;\n      }\n      .contact-label {\n        left: 55px;\n      }\n      .phone-input {\n        padding-left: 75px;\n      }\n    }\n    /* Correção para autofill */\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover, \n    input:-webkit-autofill:focus, \n    input:-webkit-autofill:active {\n      -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      -webkit-text-fill-color: #ffffff !important;\n      color: #ffffff !important;\n    }\n    input:-moz-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    input:-ms-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    /* Mensagens de erro */\n    .error {\n      color: #ff6b6b;\n      font-size: 13px;\n      margin-top: 3px;\n      display: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- POP-UP DE LOGIN -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h2>Login</h2>\n      <form id=\"loginForm\">\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"loginEmail\">E-mail</label>\n          <div class=\"error\" id=\"loginEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"loginPassword\">Senha</label>\n          <div class=\"error\" id=\"loginPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"loginButton\">Entrar</button>\n        <div class=\"toggle-link\">\n          <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE CADASTRO -->\n  <div class=\"popup hidden\" id=\"registerPopup\">\n    <div class=\"popup-content\">\n      <h2>Cadastro</h2>\n      <form id=\"registerForm\">\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n          <label for=\"registerName\">Nome</label>\n          <div class=\"error\" id=\"registerNameError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"registerEmail\">E-mail</label>\n          <div class=\"error\" id=\"registerEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <!-- Container com seletor de país e input de telefone -->\n          <div class=\"contact-container\">\n            <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n              <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n            </div>\n            <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required placeholder=\" \">\n            <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n            <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n              <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n              </div>\n              <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n              </div>\n              <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n              </div>\n              <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n              </div>\n            </div>\n          </div>\n          <div class=\"error\" id=\"registerContactError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"registerPassword\">Senha</label>\n          <div class=\"error\" id=\"registerPasswordError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n          <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n          <div class=\"error\" id=\"registerConfirmPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n        <div class=\"toggle-link\">\n          <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- SEÇÃO DE TICKETS (TELA APÓS LOGIN/CADASTRO) -->\n  <div class=\"tickets-section\" id=\"ticketsSection\">\n    <h2>Tickets de Análise</h2>\n    <div id=\"ticketsContent\">\n      <!-- Os dados dos tickets serão inseridos dinamicamente aqui -->\n      <p>Carregando tickets...</p>\n    </div>\n  </div>\n\n  <script>\n    /* EVENTOS DE TROCA DE POP-UP */\n    const loginPopup = document.getElementById('loginPopup');\n    const registerPopup = document.getElementById('registerPopup');\n    const ticketsSection = document.getElementById('ticketsSection');\n    const ticketsContent = document.getElementById('ticketsContent');\n\n    document.getElementById('showRegister').addEventListener('click', () => {\n      loginPopup.classList.add('hidden');\n      registerPopup.classList.remove('hidden');\n    });\n    document.getElementById('showLogin').addEventListener('click', () => {\n      registerPopup.classList.add('hidden');\n      loginPopup.classList.remove('hidden');\n    });\n\n    /* ENVIO DOS DADOS DE LOGIN PARA O WEBHOOK (POST) */\n    document.getElementById('loginButton').addEventListener('click', () => {\n      const email = document.getElementById('loginEmail').value.trim();\n      const password = document.getElementById('loginPassword').value.trim();\n      let isValid = true;\n\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n        showError('loginEmailError', 'Email inválido');\n        isValid = false;\n      } else {\n        clearError('loginEmailError');\n      }\n      if (password.length < 6) {\n        showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n        isValid = false;\n      } else {\n        clearError('loginPasswordError');\n      }\n      if (isValid) {\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({ email, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            // Após login com sucesso, esconde o pop-up e chama o endpoint para obter os tickets\n            loginPopup.classList.add('hidden');\n            getTickets();\n          } else {\n            alert(data.message || \"Erro no login. Verifique suas credenciais.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no login:\", error);\n          alert(\"Erro no login. Tente novamente mais tarde.\");\n        });\n      }\n    });\n\n    /* ENVIO DOS DADOS DE CADASTRO PARA O WEBHOOK (POST) */\n    document.getElementById('registerButton').addEventListener('click', () => {\n      const name = document.getElementById('registerName').value.trim();\n      const email = document.getElementById('registerEmail').value.trim();\n      const contact = document.getElementById('registerContact').value.trim();\n      const password = document.getElementById('registerPassword').value;\n      const confirmPassword = document.getElementById('registerConfirmPassword').value;\n      let isValid = true;\n      \n      if (!name) {\n        showError('registerNameError', 'Nome é obrigatório');\n        isValid = false;\n      } else {\n        clearError('registerNameError');\n      }\n      if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n        showError('registerEmailError', 'Email inválido');\n        isValid = false;\n      } else {\n        clearError('registerEmailError');\n      }\n      if (!contact) {\n        showError('registerContactError', 'Contato é obrigatório');\n        isValid = false;\n      } else {\n        clearError('registerContactError');\n      }\n      if (password.length < 6) {\n        showError('registerPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n        isValid = false;\n      } else {\n        clearError('registerPasswordError');\n      }\n      if (password !== confirmPassword) {\n        showError('registerConfirmPasswordError', 'Senhas não coincidem');\n        isValid = false;\n      } else {\n        clearError('registerConfirmPasswordError');\n      }\n      if (isValid) {\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/criaconta\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({ name, email, contact, password })\n        })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            alert(\"Cadastro realizado com sucesso!\");\n            registerPopup.classList.add('hidden');\n            getTickets();\n          } else {\n            alert(data.message || \"Erro no cadastro. Verifique as informações.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no cadastro:\", error);\n          alert(\"Erro no cadastro. Tente novamente mais tarde.\");\n        });\n      }\n    });\n\n    /* FUNÇÃO PARA OBTER OS TICKETS VIA GET */\n    function getTickets() {\n      const url = \"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/analyze-tickets\";\n      fetch(url, {\n        method: \"GET\"\n      })\n      .then(response => response.json())\n      .then(data => {\n        if (data.success) {\n          updateTicketsSection(data.tickets);\n        } else {\n          alert(data.message || \"Erro ao obter tickets.\");\n          ticketsContent.innerHTML = \"<p>Erro ao carregar tickets.</p>\";\n        }\n        // Exibe a seção de tickets\n        ticketsSection.style.display = 'block';\n      })\n      .catch(error => {\n        console.error(\"Erro ao obter tickets:\", error);\n        alert(\"Erro ao obter tickets. Tente novamente mais tarde.\");\n        ticketsContent.innerHTML = \"<p>Erro ao carregar tickets.</p>\";\n        ticketsSection.style.display = 'block';\n      });\n    }\n\n    /* FUNÇÃO PARA ATUALIZAR A SEÇÃO DE TICKETS COM OS DADOS RETORNADOS */\n    function updateTicketsSection(tickets) {\n      ticketsContent.innerHTML = '';\n      if (tickets.length === 0) {\n        ticketsContent.innerHTML = \"<p>Nenhum ticket encontrado.</p>\";\n        return;\n      }\n      tickets.forEach(ticket => {\n        const ticketElem = document.createElement('div');\n        ticketElem.classList.add('ticket');\n        ticketElem.innerHTML = `\n          <p><strong>ID:</strong> ${ticket.id}</p>\n          <p><strong>Título:</strong> ${ticket.title}</p>\n          <p><strong>Status:</strong> ${ticket.status}</p>\n          <p><strong>Descrição:</strong> ${ticket.description}</p>\n        `;\n        ticketsContent.appendChild(ticketElem);\n      });\n    }\n\n    function showError(id, message) {\n      const errorElem = document.getElementById(id);\n      errorElem.textContent = message;\n      errorElem.style.display = 'block';\n    }\n    function clearError(id) {\n      const errorElem = document.getElementById(id);\n      errorElem.textContent = \"\";\n      errorElem.style.display = 'none';\n    }\n\n    /* SELETOR DE PAÍS PARA CONTATO */\n    const customSelect = document.getElementById('customSelect');\n    const customOptions = document.getElementById('customOptions');\n    const currentFlag = document.getElementById('currentFlag');\n    const phoneInput = document.getElementById('registerContact');\n\n    customSelect.addEventListener('click', (e) => {\n      e.stopPropagation();\n      const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n      customSelect.setAttribute('aria-expanded', !expanded);\n      customOptions.style.display = expanded ? 'none' : 'block';\n    });\n    customOptions.querySelectorAll('.custom-option').forEach(option => {\n      option.addEventListener('click', () => {\n        const flagSrc = option.querySelector('img').src;\n        const countryCode = option.getAttribute('data-value');\n        currentFlag.src = flagSrc;\n        phoneInput.value = countryCode + ' ';\n        customOptions.style.display = 'none';\n        customSelect.setAttribute('aria-expanded', 'false');\n      });\n    });\n    document.addEventListener('click', (e) => {\n      if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n        customOptions.style.display = 'none';\n        customSelect.setAttribute('aria-expanded', 'false');\n      }\n    });\n\n    /* LABEL FLUTUANTE PARA CONTATO */\n    const registerContactElem = document.getElementById('registerContact');\n    const contactLabel = document.querySelector('.contact-container .contact-label');\n    function updateContactLabel() {\n      if (document.activeElement === registerContactElem || registerContactElem.value.trim() !== '') {\n        contactLabel.classList.add('active');\n      } else {\n        contactLabel.classList.remove('active');\n      }\n    }\n    registerContactElem.addEventListener('focus', updateContactLabel);\n    registerContactElem.addEventListener('blur', updateContactLabel);\n    registerContactElem.addEventListener('input', updateContactLabel);\n    window.addEventListener('DOMContentLoaded', updateContactLabel);\n  </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -620,
        -900
      ],
      "id": "caf5e7df-ae3d-4cce-8fd9-44377a482667",
      "name": "versao corrigida",
      "disabled": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"analysis\": {{ JSON.stringify($json.email ) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        -300
      ],
      "id": "d8e1e382-2eb6-40d5-a76f-6ca9e86c79c9",
      "name": "Sucesso3"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Erro ao processar a análise. Verifique os arquivos enviados e tente novamente.\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        -180
      ],
      "id": "75786c15-2c91-4ed5-a38f-ffff3736d36f",
      "name": "Erro3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dda017c-4284-45d0-905a-b826bc9e8daf",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        -180
      ],
      "id": "93385e5c-3fd8-4a40-803c-14b234959cd7",
      "name": "If3"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Análise de Conversas</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    /* ======= RESET E ESTILOS GLOBAIS ======= */\n    *, *::before, *::after {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    html, body {\n      height: 100%;\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n      background-size: cover;\n      position: relative;\n      color: #ffffff;\n    }\n    /* Sobreposição para melhor legibilidade */\n    body::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(30, 30, 30, 0.7);\n      z-index: -1;\n    }\n    /* ======= ESTILOS DOS POP-UPS (LOGIN/CADASTRO) E MODAIS ======= */\n    .popup, .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.8);\n      z-index: 1000;\n      visibility: visible;\n      opacity: 1;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    .popup.hidden, .modal.hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n    .popup-content, .modal-content {\n      background-color: #1e1e1e;\n      padding: 30px 40px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      width: 100%;\n      max-width: 400px;\n      text-align: left;\n      color: #ffffff;\n      position: relative;\n    }\n    .popup-content h2, .modal-content h2 {\n      text-align: center;\n      color: #45DE71;\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    .form-group {\n      margin-bottom: 20px;\n      position: relative;\n    }\n    .form-group label {\n      position: absolute;\n      top: 50%;\n      left: 12px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      color: #ffffff;\n      font-size: 14px;\n      transition: all 0.2s ease;\n      pointer-events: none;\n      z-index: 2;\n    }\n    .form-group input {\n      width: 100%;\n      padding: 14px 12px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n    }\n    .form-group input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .form-group input:focus + label,\n    .form-group input:not(:placeholder-shown) + label {\n      top: -8px;\n      left: 12px;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    /* Seletor personalizado para telefone */\n    .contact-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 40px;\n    }\n    .custom-select {\n      position: absolute;\n      left: 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      z-index: 3;\n    }\n    .custom-select img {\n      width: 24px;\n      height: 18px;\n      border-radius: 3px;\n    }\n    .phone-input {\n      width: 100%;\n      padding: 10px 12px 10px 75px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      z-index: 1;\n    }\n    .phone-input:focus {\n      border-color: #45DE71;\n      background-color: #1a1a1a;\n    }\n    .phone-input::placeholder {\n      color: transparent;\n    }\n    .phone-input:focus::placeholder {\n      color: transparent;\n    }\n    .contact-label {\n      position: absolute;\n      top: 50%;\n      left: 90px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      font-size: 14px;\n      color: #ffffff;\n      pointer-events: none;\n      transition: all 0.2s ease;\n      z-index: 4;\n    }\n    .contact-label.active {\n      top: -8px;\n      left: 90px;\n      transform: none;\n      font-size: 12px;\n      color: #45DE71;\n    }\n    .custom-options {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      background-color: #1e1e1e;\n      border: 1px solid #45DE71;\n      border-radius: 5px;\n      max-height: 150px;\n      overflow-y: auto;\n      display: none;\n      z-index: 4;\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n      margin-top: 5px;\n    }\n    .custom-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: background-color 0.2s, color 0.2s;\n    }\n    .custom-option:hover,\n    .custom-option[aria-selected=\"true\"] {\n      background-color: #45DE71;\n      color: #1e1e1e;\n    }\n    .custom-option img {\n      width: 20px;\n      height: 15px;\n      margin-right: 8px;\n      border-radius: 2px;\n    }\n    /* Botões */\n    button {\n      width: 100%;\n      padding: 12px;\n      background-color: #45DE71;\n      border: none;\n      border-radius: 5px;\n      color: #1e1e1e;\n      font-size: 16px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.2s ease;\n    }\n    button:hover {\n      background-color: #36b659;\n    }\n    .toggle-link {\n      text-align: center;\n      margin-top: 15px;\n    }\n    .toggle-link a {\n      color: #45DE71;\n      text-decoration: none;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    .toggle-link a:hover {\n      text-decoration: underline;\n    }\n    /* ======= ESTILOS DA SEÇÃO DE TICKETS ======= */\n    .tickets-section {\n      display: none;\n      margin: 20px auto 0;\n      width: 100%;\n      max-width: 600px;\n      padding: 20px 30px;\n      background: #1e1e1e;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      color: #ffffff;\n    }\n    .tickets-section h2 {\n      color: #45DE71;\n      margin-bottom: 20px;\n      text-align: center;\n    }\n    .ticket {\n      background-color: #27272a;\n      border: 1px solid #3f3f46;\n      border-radius: 5px;\n      padding: 15px;\n      margin-bottom: 15px;\n    }\n    .ticket p {\n      margin-bottom: 10px;\n      font-size: 14px;\n    }\n    /* Modal de sucesso e modal de erro */\n    .modal-content p {\n      text-align: center;\n      margin-bottom: 20px;\n      font-size: 16px;\n    }\n    /* Responsividade */\n    @media (max-width: 500px) {\n      .popup-content, .modal-content {\n        padding: 20px 30px;\n      }\n      .tickets-section {\n        padding: 15px 20px;\n        max-width: 350px;\n      }\n      .contact-label {\n        left: 55px;\n      }\n      .phone-input {\n        padding-left: 75px;\n      }\n    }\n    /* Correção para autofill */\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover, \n    input:-webkit-autofill:focus, \n    input:-webkit-autofill:active {\n      -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      -webkit-text-fill-color: #ffffff !important;\n      color: #ffffff !important;\n    }\n    input:-moz-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    input:-ms-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    /* Mensagens de erro */\n    .error {\n      color: #ff6b6b;\n      font-size: 13px;\n      margin-top: 3px;\n      display: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- POP-UP DE LOGIN -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h2>Login</h2>\n      <form id=\"loginForm\">\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"loginEmail\">E-mail</label>\n          <div class=\"error\" id=\"loginEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"loginPassword\">Senha</label>\n          <div class=\"error\" id=\"loginPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"loginButton\">Entrar</button>\n        <div class=\"toggle-link\">\n          <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE CADASTRO -->\n  <div class=\"popup hidden\" id=\"registerPopup\">\n    <div class=\"popup-content\">\n      <h2>Cadastro</h2>\n      <form id=\"registerForm\">\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n          <label for=\"registerName\">Nome</label>\n          <div class=\"error\" id=\"registerNameError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"registerEmail\">E-mail</label>\n          <div class=\"error\" id=\"registerEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <!-- Container com seletor de país e input de telefone -->\n          <div class=\"contact-container\">\n            <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n              <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n            </div>\n            <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required placeholder=\" \">\n            <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n            <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n              <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n              </div>\n              <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n              </div>\n              <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n              </div>\n              <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n              </div>\n            </div>\n          </div>\n          <div class=\"error\" id=\"registerContactError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"registerPassword\">Senha</label>\n          <div class=\"error\" id=\"registerPasswordError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n          <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n          <div class=\"error\" id=\"registerConfirmPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n        <div class=\"toggle-link\">\n          <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE MENSAGEM DE SUCESSO -->\n  <div class=\"modal hidden\" id=\"successModal\">\n    <div class=\"modal-content\">\n      <h2>Sucesso</h2>\n      <p>Cadastro realizado com sucesso!</p>\n      <button type=\"button\" id=\"okSuccess\">OK</button>\n    </div>\n  </div>\n\n  <!-- POP-UP DE ERRO DE LOGIN -->\n  <div class=\"modal hidden\" id=\"errorModal\">\n    <div class=\"modal-content\">\n      <h2>Erro</h2>\n      <p>Credenciais inválidas!</p>\n      <button type=\"button\" id=\"okError\">OK</button>\n    </div>\n  </div>\n\n  <!-- SEÇÃO DE TICKETS (TELA APÓS LOGIN/CADASTRO) -->\n  <div class=\"tickets-section\" id=\"ticketsSection\">\n    <h2>Tickets de Análise</h2>\n    <div id=\"ticketsContent\">\n      <!-- Os dados dos tickets serão inseridos dinamicamente aqui -->\n      <p>Carregando tickets...</p>\n    </div>\n  </div>\n\n  <script>\n    window.addEventListener('DOMContentLoaded', () => {\n      // Referência dos elementos\n      const loginPopup = document.getElementById('loginPopup');\n      const registerPopup = document.getElementById('registerPopup');\n      const successModal = document.getElementById('successModal');\n      const errorModal = document.getElementById('errorModal');\n      const ticketsSection = document.getElementById('ticketsSection');\n      const ticketsContent = document.getElementById('ticketsContent');\n\n      // Troca entre pop-ups de login e cadastro\n      document.getElementById('showRegister').addEventListener('click', () => {\n        loginPopup.classList.add('hidden');\n        registerPopup.classList.remove('hidden');\n      });\n      document.getElementById('showLogin').addEventListener('click', () => {\n        registerPopup.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      document.getElementById('okSuccess').addEventListener('click', () => {\n        // Fecha o modal de sucesso e exibe a tela de login\n        successModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      document.getElementById('okError').addEventListener('click', () => {\n        // Fecha o modal de erro e exibe a tela de login\n        errorModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      /* ENVIO DOS DADOS DE LOGIN PARA O WEBHOOK (POST) */\n      document.getElementById('loginButton').addEventListener('click', () => {\n        const email = document.getElementById('loginEmail').value.trim();\n        const password = document.getElementById('loginPassword').value.trim();\n        let isValid = true;\n\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n          showError('loginEmailError', 'Email inválido');\n          isValid = false;\n        } else {\n          clearError('loginEmailError');\n        }\n        if (password.length < 6) {\n          showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n          isValid = false;\n        } else {\n          clearError('loginPasswordError');\n        }\n        if (isValid) {\n          fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log(\"Retorno do login:\", data);\n            if (!data.success) {\n              loginPopup.classList.add('hidden');\n              errorModal.classList.remove('hidden');\n            } else {\n              loginPopup.classList.add('hidden');\n              getTickets();\n            }\n          })\n          .catch(error => {\n            console.error(\"Erro no login:\", error);\n            alert(\"Erro no login. Tente novamente mais tarde.\");\n          });\n        }\n      });\n\n      /* ENVIO DOS DADOS DE CADASTRO PARA O WEBHOOK (POST) */\n      document.getElementById('registerButton').addEventListener('click', () => {\n        // Obtém os valores do formulário de cadastro\n        const name = document.getElementById('registerName').value.trim();\n        const email = document.getElementById('registerEmail').value.trim();\n        const contact = document.getElementById('registerContact').value.trim();\n        const password = document.getElementById('registerPassword').value;\n        const confirmPassword = document.getElementById('registerConfirmPassword').value;\n        let isValid = true;\n        \n        // Validações do cadastro\n        if (!name) {\n          showError('registerNameError', 'Nome é obrigatório');\n          isValid = false;\n        } else {\n          clearError('registerNameError');\n        }\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n          showError('registerEmailError', 'Email inválido');\n          isValid = false;\n        } else {\n          clearError('registerEmailError');\n        }\n        if (!contact) {\n          showError('registerContactError', 'Contato é obrigatório');\n          isValid = false;\n        } else {\n          clearError('registerContactError');\n        }\n        if (password.length < 6) {\n          showError('registerPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n          isValid = false;\n        } else {\n          clearError('registerPasswordError');\n        }\n        if (password !== confirmPassword) {\n          showError('registerConfirmPasswordError', 'Senhas não coincidem');\n          isValid = false;\n        } else {\n          clearError('registerConfirmPasswordError');\n        }\n        \n        // Se as validações forem aprovadas, envia os dados para o webhook\n        if (isValid) {\n          console.log(\"Enviando dados de cadastro:\", { name, email, contact, password });\n          fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/criaconta\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ name, email, contact, password })\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log(\"Retorno do cadastro:\", data);\n            if (data.success) {\n              registerPopup.classList.add('hidden');\n              successModal.classList.remove('hidden');\n            } else {\n              alert(data.message || \"Erro no cadastro. Verifique suas informações.\");\n            }\n          })\n          .catch(error => {\n            console.error(\"Erro no cadastro:\", error);\n            alert(\"Erro no cadastro. Tente novamente mais tarde.\");\n          });\n        }\n      });\n\n      /* FUNÇÃO PARA OBTER OS TICKETS VIA GET */\n      function getTickets() {\n        const url = \"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/analyze-tickets\";\n        fetch(url, {\n          method: \"GET\"\n        })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            updateTicketsSection(data.tickets);\n          } else {\n            alert(data.message || \"Erro ao obter tickets.\");\n            ticketsContent.innerHTML = \"<p>Erro ao carregar tickets.</p>\";\n          }\n          ticketsSection.style.display = 'block';\n        })\n        .catch(error => {\n          console.error(\"Erro ao obter tickets:\", error);\n          alert(\"Erro ao obter tickets. Tente novamente mais tarde.\");\n          ticketsContent.innerHTML = \"<p>Erro ao carregar tickets.</p>\";\n          ticketsSection.style.display = 'block';\n        });\n      }\n\n      /* FUNÇÃO PARA ATUALIZAR A SEÇÃO DE TICKETS COM OS DADOS RETORNADOS */\n      function updateTicketsSection(tickets) {\n        ticketsContent.innerHTML = '';\n        if (tickets.length === 0) {\n          ticketsContent.innerHTML = \"<p>Nenhum ticket encontrado.</p>\";\n          return;\n        }\n        tickets.forEach(ticket => {\n          const ticketElem = document.createElement('div');\n          ticketElem.classList.add('ticket');\n          ticketElem.innerHTML = `\n            <p><strong>ID:</strong> ${ticket.id}</p>\n            <p><strong>Título:</strong> ${ticket.title}</p>\n            <p><strong>Status:</strong> ${ticket.status}</p>\n            <p><strong>Descrição:</strong> ${ticket.description}</p>\n          `;\n          ticketsContent.appendChild(ticketElem);\n        });\n      }\n\n      function showError(id, message) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = message;\n        errorElem.style.display = 'block';\n      }\n      function clearError(id) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = \"\";\n        errorElem.style.display = 'none';\n      }\n\n      /* SELETOR DE PAÍS PARA CONTATO */\n      const customSelect = document.getElementById('customSelect');\n      const customOptions = document.getElementById('customOptions');\n      const currentFlag = document.getElementById('currentFlag');\n      const phoneInput = document.getElementById('registerContact');\n\n      customSelect.addEventListener('click', (e) => {\n        e.stopPropagation();\n        const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n        customSelect.setAttribute('aria-expanded', !expanded);\n        customOptions.style.display = expanded ? 'none' : 'block';\n      });\n      customOptions.querySelectorAll('.custom-option').forEach(option => {\n        option.addEventListener('click', () => {\n          const flagSrc = option.querySelector('img').src;\n          const countryCode = option.getAttribute('data-value');\n          currentFlag.src = flagSrc;\n          phoneInput.value = countryCode + ' ';\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        });\n      });\n      document.addEventListener('click', (e) => {\n        if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        }\n      });\n\n      /* LABEL FLUTUANTE PARA CONTATO */\n      const registerContactElem = document.getElementById('registerContact');\n      const contactLabel = document.querySelector('.contact-container .contact-label');\n      function updateContactLabel() {\n        if (document.activeElement === registerContactElem || registerContactElem.value.trim() !== '') {\n          contactLabel.classList.add('active');\n        } else {\n          contactLabel.classList.remove('active');\n        }\n      }\n      registerContactElem.addEventListener('focus', updateContactLabel);\n      registerContactElem.addEventListener('blur', updateContactLabel);\n      registerContactElem.addEventListener('input', updateContactLabel);\n      window.addEventListener('DOMContentLoaded', updateContactLabel);\n    });\n  </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -400,
        -900
      ],
      "id": "b515ed9e-d445-482a-8597-e4b44f2da4b6",
      "name": "agora é serio é essa",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/infosanalise",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "title",
              "value": "={{ $('List Tickets').item.json.data[1].subject }}"
            },
            {
              "name": "resume",
              "value": "={{ $json.analysis.content }}"
            },
            {
              "name": "comentario",
              "value": "={{ $('List Tickets').item.json.data[1].message }}"
            },
            {
              "name": "name",
              "value": "={{ $('List Tickets').item.json.data[1].customer.name }}"
            },
            {
              "name": "empresa",
              "value": "={{ $('List Tickets').item.json.data[1].customer.organization.name }}"
            },
            {
              "name": "onde melhorar ",
              "value": "={{ $('AI Agent1').item.json.output.principais_pontos_de_acao_necessarios }}"
            },
            {
              "name": "sugestoes ",
              "value": "={{ $('AI Agent1').item.json.output.sugestoes_resposta }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        240
      ],
      "id": "767f8a67-6f6b-4487-a6b3-1af74da4f1e7",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "infosanalise",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        540
      ],
      "id": "2d65a304-0d02-4ed0-aed6-807afcb49eea",
      "name": "Webhook4",
      "webhookId": "5faec143-c9ec-4832-89a5-332fb451b01f"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2df571b8-4736-408b-a34a-cff1365d34f9",
              "name": "body.title",
              "value": "={{ $json.body.title }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -800,
        540
      ],
      "id": "fd021994-b9b7-4488-b430-b4748db26668",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "id": "ab0a09f8-10a1-46b4-8362-a339e6fcde7d",
      "name": "Respond to Webhook3",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        -580,
        540
      ]
    }
  ],
  "connections": {
    "Serve Frontend": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Sucesso",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook1": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Sucesso2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Tickets": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML2": {
      "main": [
        []
      ]
    },
    "Webhook3": {
      "main": [
        [
          {
            "node": "List Tickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Sucesso3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook4": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Respond to Webhook3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {
    "HTML2": [
      {
        "json": {
          "html": "<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\" />\n  <title>TomTicket API</title>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Informações do Ticket</h1>\n    \n    <div class=\"card\">\n      <h2>Detalhes do Ticket</h2>\n      <div class=\"info-row\">\n        <span class=\"label\">ID:</span>\n        <span class=\"value\">5829</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Título:</span>\n        <span class=\"value\">Frete não consta na NF - 5145</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Data:</span>\n        <span class=\"value date-format\">14/01/2025</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Empresa:</span>\n        <span class=\"value\">Metalnox</span>\n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Cliente:</span>\n        <span class=\"value\">Schayena Correa</span>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <h2>Métricas</h2>\n      <div class=\"info-row\">\n        <span class=\"label\">Tempo Aberto:</span>\n        <span class=\"value\">3h</span>\n      </div>\n    </div>\n\n    <div class=\"card\">\n      <h2>Análise da IA</h2>\n      <div class=\"analysis-content\">      \n      </div>\n      <div class=\"info-row\">\n        <span class=\"label\">Conteúdo:</span>\n        <span class=\"value\"><p></p><p>&quot;resumo_do_problema&quot;: &quot;O frete não está sendo incluído na nota fiscal.&quot;</p><p>&quot;classificacao_do_tipo_de_problema&quot;: &quot;Problema de faturamento&quot;</p><p>&quot;nivel_de_urgencia_sugerido&quot;: &quot;Alto&quot;</p><p>&quot;principais_pontos_de_acao_necessarios&quot;: </p><p>&quot;Verificar configuração de frete no sistema.&quot;</p><p>&quot;Confirmar se a nota fiscal foi gerada corretamente.&quot;</p><p>&quot;Consultar registros anteriores para verificar se o problema é recorrente.&quot;</p><p></p><p>&quot;sugestoes_de_resposta&quot;: &quot;Agradecemos por reportar o problema e estamos verificando a situação do frete na NF. Por favor, permita-nos um tempo para solucionar isso.&quot;</p><p></p></span>\n      </div>\n  \n    </div>\n  </div>\n</body>\n<style>\n.container {\n  background-color: #f5f7fa;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n  max-width: 800px;\n  margin: 0 auto;\n}\n\n.card {\n  background-color: #ffffff;\n  padding: 16px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\nh1 {\n  color: #ff6d5a;\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n  padding: 8px;\n  margin-bottom: 20px;\n}\n\nh2 {\n  color: #909399;\n  font-size: 18px;\n  font-weight: bold;\n  padding: 8px;\n  margin-bottom: 12px;\n  border-bottom: 1px solid #eaeaea;\n}\n\n.info-row {\n  display: flex;\n  padding: 8px;\n  border-bottom: 1px solid #f5f5f5;\n}\n\n.info-row:last-child {\n  border-bottom: none;\n}\n\n.label {\n  color: #909399;\n  font-weight: bold;\n  width: 140px;\n  flex-shrink: 0;\n}\n\n.value {\n  color: #606266;\n  flex-grow: 1;\n}\n\n.analysis-content {\n  padding: 10px 0;\n}\n\n.section {\n  margin-bottom: 20px;\n}\n\n.section:last-child {\n  margin-bottom: 0;\n}\n\n.section h3 {\n  color: #606266;\n  font-size: 16px;\n  font-weight: 600;\n  margin-bottom: 8px;\n}\n\n.section p {\n  color: #606266;\n  line-height: 1.5;\n  margin: 0;\n}\n\n.section ul {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.section ul li {\n  color: #606266;\n  padding: 4px 0;\n  line-height: 1.5;\n  position: relative;\n  padding-left: 20px;\n}\n\n.section ul li:before {\n  content: \"•\";\n  color: #ff6d5a;\n  position: absolute;\n  left: 0;\n}\n\n.urgency {\n  display: inline-block;\n  padding: 4px 12px;\n  border-radius: 4px;\n  background-color: #f56c6c;\n  color: white;\n  font-weight: 600;\n}\n\n.timestamp {\n  border-top: 1px solid #eaeaea;\n  margin-top: 20px;\n  padding-top: 12px;\n}\n\n.priority {\n  color: #ffffff;\n  padding: 2px 8px;\n  border-radius: 4px;\n  font-size: 14px;\n}\n\n.priority:before {\n  content: attr(data-value);\n}\n\n.priority[data-value=\"alta\"] {\n  background-color: #f56c6c;\n}\n\n.priority[data-value=\"normal\"] {\n  background-color: #67c23a;\n}\n</style>\n<script>\ndocument.addEventListener('DOMContentLoaded', function() {\n  // Formatar apenas datas (DD/MM/YYYY)\n  const dates = document.querySelectorAll('.date-format');\n  dates.forEach(date => {\n    if (date.textContent) {\n      const timestamp = date.textContent;\n      const day = timestamp.substring(8, 10);\n      const month = timestamp.substring(5, 7);\n      const year = timestamp.substring(0, 4);\n      date.textContent = `${day}/${month}/${year}`;\n    }\n  });\n\n  // Formatar datetime (DD/MM/YYYY HH:mm:ss)\n  const datetimes = document.querySelectorAll('.datetime-format');\n  datetimes.forEach(datetime => {\n    if (datetime.textContent) {\n      const timestamp = datetime.textContent;\n      const day = timestamp.substring(8, 10);\n      const month = timestamp.substring(5, 7);\n      const year = timestamp.substring(0, 4);\n      const time = timestamp.substring(11, 19);\n      datetime.textContent = `${day}/${month}/${year} ${time}`;\n    }\n  });\n\n  // Configurar badges de prioridade\n  const priorities = document.querySelectorAll('.priority');\n  priorities.forEach(priority => {\n    priority.dataset.value = priority.textContent.toLowerCase().trim();\n  });\n\n  // Remover chaves dos valores de conteúdo\n  const values = document.querySelectorAll('.value');\n  values.forEach(value => {\n    if (value.textContent) {\n      // Corrigir conteúdo escapado (como &quot;)\n      let fixedContent = value.textContent.replace(/&quot;/g, '\"');\n      fixedContent = fixedContent.replace(/[{}]/g, '').trim();\n      value.textContent = fixedContent;\n    }\n  });\n});\n\n</script>\n</html>"
        }
      }
    ]
  },
  "versionId": "e421f172-4425-46d1-bec4-fac10f9c3cbd",
  "triggerCount": 5,
  "tags": []
}