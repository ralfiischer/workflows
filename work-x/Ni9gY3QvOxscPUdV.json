{
  "createdAt": "2025-01-09T13:48:23.064Z",
  "updatedAt": "2025-02-05T12:20:16.613Z",
  "id": "Ni9gY3QvOxscPUdV",
  "name": "SaaS",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "path": "index",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "bd408dec-af85-4600-8c3a-ea67c3ea3d77",
      "name": "Serve Frontend",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1020,
        240
      ],
      "webhookPath": "frontend",
      "method": "GET",
      "responseMode": "onReceived",
      "responseData": {
        "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Análise de Conversas</title>\n  <style>\n    body {\n      font-family: Arial, sans-serif;\n      margin: 0;\n      padding: 20px;\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n      height: 100vh;\n    }\n    .container {\n      max-width: 400px;\n      width: 100%;\n      text-align: center;\n    }\n    textarea {\n      width: 100%;\n      height: 150px;\n      margin-bottom: 10px;\n    }\n    button {\n      background-color: #45DE71;\n      border: none;\n      padding: 10px 15px;\n      color: white;\n      cursor: pointer;\n      border-radius: 5px;\n    }\n    button:disabled {\n      background-color: #ccc;\n    }\n    #result {\n      margin-top: 20px;\n      white-space: pre-wrap;\n      text-align: left;\n    }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>Análise de Conversas</h1>\n    <textarea id=\"conversation\" placeholder=\"Cole a conversa aqui...\"></textarea>\n    <button id=\"analyzeButton\">Analisar Conversa</button>\n    <div id=\"result\"></div>\n  </div>\n\n  <script>\n    const analyzeButton = document.getElementById('analyzeButton');\n    const conversationInput = document.getElementById('conversation');\n    const resultDiv = document.getElementById('result');\n\n    analyzeButton.addEventListener('click', async () => {\n      const conversation = conversationInput.value.trim();\n      if (!conversation) {\n        alert('Por favor, insira uma conversa para análise.');\n        return;\n      }\n\n      analyzeButton.disabled = true;\n      resultDiv.textContent = 'Analisando...';\n\n      try {\n        const response = await fetch('/webhook/process', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ conversation }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Erro ao analisar a conversa.');\n        }\n\n        const result = await response.json();\n        resultDiv.textContent = `Resultado da Análise:\\n\\n${result.analysis}`;\n      } catch (error) {\n        resultDiv.textContent = 'Erro: Não foi possível analisar a conversa.';\n      } finally {\n        analyzeButton.disabled = false;\n      }\n    });\n  </script>\n</body>\n</html>"
      },
      "responseHeaders": [
        {
          "name": "Content-Type",
          "value": "text/html"
        }
      ],
      "webhookId": "18c4a0d9-b4fd-48ea-a3ec-02eca69abfbb"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        220,
        240
      ],
      "id": "440d5b00-af6e-41dc-abad-4c34df6ee6cd",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "SaaS",
        "returnAll": true,
        "filterType": "none"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -840,
        20
      ],
      "id": "dd3fd363-7381-4371-8ffe-4fe2152b1e40",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "bba06e20-2ea2-4a31-9153-ef3c69cd0d42",
              "leftValue": "={{ $('Webhook').item.json.body.email }}",
              "rightValue": "={{ $json.email }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            },
            {
              "id": "497e22d6-c8cf-4864-b0a1-b8a8357fad67",
              "leftValue": "={{ $('Webhook').item.json.body.password }}",
              "rightValue": "={{ $json.password }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        20
      ],
      "id": "4fba070f-7d30-473f-bd5f-2f0567635643",
      "name": "If"
    },
    {
      "parameters": {
        "tableId": "SaaS",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "email",
              "fieldValue": "={{ $json.body.email }}"
            },
            {
              "fieldId": "password",
              "fieldValue": "={{ $json.body.password }}"
            },
            {
              "fieldId": "nome",
              "fieldValue": "={{ $json.body.name }}"
            },
            {
              "fieldId": "contato",
              "fieldValue": "={{ $json.body.contact }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -840,
        -180
      ],
      "id": "2a47d0b6-52a6-43da-8461-c067a6dc49c1",
      "name": "Supabase1",
      "credentials": {
        "supabaseApi": {
          "id": "xGKs5yYdHLqCN239",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"success\": false,\n  \"message\": \"Credenciais inválidas\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        80
      ],
      "id": "fa25f358-654c-4119-a044-4ea13055cb38",
      "name": "Erro"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"userId\": {{ $json.id }},\n  \"message\": \"Login realizado com sucesso\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        -60
      ],
      "id": "2b1986ba-205d-4dfb-ad1d-b3a536ce07fa",
      "name": "Sucesso"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "retorno",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        20
      ],
      "id": "74f71121-a1ca-46bb-982a-b20bd29315a5",
      "name": "Webhook",
      "webhookId": "b86b9992-6d2c-4d17-843d-c64a09b389b3"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "criaconta",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1020,
        -180
      ],
      "id": "2cac47c4-83e5-492a-95f5-00b3c959dc03",
      "name": "Webhook2",
      "webhookId": "31b43b1f-364d-46b7-9fbb-c7f39f188555"
    },
    {
      "parameters": {
        "authentication": "headerAuth",
        "url": "=https://api.tomticket.com/v2.0/ticket/list",
        "allowUnauthorizedCerts": true,
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "TomTicket",
              "value": "Bearer d06ef10487be6ad29b2f24e8d279b254cacd1c1e8284cbdc852b95329a28c954"
            }
          ]
        }
      },
      "id": "69af4ceb-06ad-4d1c-ba44-a56a36df4a29",
      "name": "List Tickets",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -840,
        240
      ],
      "alwaysOutputData": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "BjPWOeZdmAaP6H1D",
          "name": "Header Auth account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function calculateTimeOpen(creationDate) {\n  const created = new Date(creationDate);\n  const now = new Date();\n  const diffHours = Math.round((now - created) / (1000 * 60 * 60));\n  return diffHours;\n}\n\nfunction calculatePriority(message, subject) {\n  const urgentKeywords = ['urgente', 'emergência', 'crítico', 'erro', 'falha'];\n  const text = (message + ' ' + subject).toLowerCase();\n  return urgentKeywords.some(keyword => text.includes(keyword)) ? 'alta' : 'normal';\n}\n\nconst tickets = $input.first().json.data;\n\nconst output = tickets.map(ticket => {\n  const baseTicket = {\n    id: ticket.protocol,\n    Titulo: ticket.subject,\n    Conversa: ticket.message,\n    Data: ticket.creation_date,\n  };\n\n  const enrichedData = {\n    cliente_info: {\n      nome: ticket.customer_name,\n      email: ticket.customer_email,\n      empresa: ticket.company_name\n    },\n    metrics: {\n      tempo_aberto_horas: calculateTimeOpen(ticket.creation_date),\n      prioridade_sugerida: calculatePriority(ticket.message, ticket.subject),\n      departamento: ticket.department,\n      categoria: ticket.category,\n      status: ticket.status\n    }\n  };\n\n  return {\n    ...baseTicket,\n    ...enrichedData\n  };\n});\n\nreturn {\n  json: {\n    tickets: output\n  }\n};"
      },
      "id": "37001f76-0922-48e8-a96e-56203cb06877",
      "name": "Prepare Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -660,
        240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "const analysis = $input.first().json.output;\nconst ticketData = $node[\"Prepare Data\"].json.tickets[0];\n\n// Função para formatar datas no formato DD/MM/YYYY\nconst formatDate = dateString => {\n  const date = new Date(dateString);\n  return date.toLocaleDateString('pt-BR', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric'\n  });\n};\n\n// Função para formatar e melhorar a legibilidade do conteúdo\nconst formatContent = content => {\n  if (typeof content !== 'string') {\n    return '<p>Conteúdo não disponível</p>';\n  }\n\n  const lines = content.split(/\\r\\n|\\n|\\r/);\n  const formattedLines = lines.map(line => {\n    let formattedLine = line.trim();\n\n    // Remover vírgulas no final de cada linha\n    if (formattedLine.endsWith(',')) {\n      formattedLine = formattedLine.slice(0, -1).trim();\n    }\n\n    // Verificar se a linha está vazia\n    if (formattedLine === '') {\n      return '<br>';\n    }\n\n    // Retornar a linha formatada com HTML escapado\n    return `<p>${formattedLine\n      .replace(/&/g, '&amp;')    // Escapa '&'\n      .replace(/</g, '&lt;')    // Escapa '<'\n      .replace(/>/g, '&gt;')    // Escapa '>'\n      .replace(/\"/g, '&quot;')  // Escapa aspas duplas\n      .replace(/'/g, '&#39;')   // Escapa aspas simples\n      .replace(/{/g, '')        // Remove '{'\n      .replace(/}/g, '')        // Remove '}'\n      .replace(/\\[/g, '')       // Remove '['\n      .replace(/]/g, '')        // Remove ']'\n    }</p>`;\n  });\n\n  return formattedLines.join('');\n};\n\n// Retorno do JSON formatado\nreturn {\n  json: {\n    success: true,\n    timestamp: new Date().toISOString(),\n    ticket_info: {\n      id: ticketData.id,\n      title: ticketData.Titulo,\n      date: formatDate(ticketData.Data),\n      client: ticketData.cliente_info,\n      metrics: ticketData.metrics\n    },\n    analysis: {\n      content: formatContent(analysis), // Conteúdo formatado\n      metadata: {\n        model: \"gpt-4\",\n        temperature: 0.7,\n        type: \"detailed_ticket_analysis\",\n        analyzed_at: new Date().toISOString()\n      }\n    }\n  }\n};\n"
      },
      "id": "ce172e8f-e9d5-4f39-a57c-df023e8c90ae",
      "name": "Format Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        -140,
        240
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "d75dbb33-85b3-477a-ab59-19b25bde2c53",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        -520,
        420
      ],
      "credentials": {
        "openAiApi": {
          "id": "RhJGnAesg7rbO4uq",
          "name": "primeiro assistent"
        }
      }
    },
    {
      "parameters": {
        "agent": "conversationalAgent",
        "promptType": "define",
        "text": "=Analise o seguinte ticket de suporte e forneça:\n1. Resumo do problema\n\n2. Classificação do tipo de problema\n\n3. Nível de urgência sugerido\n\n4. Principais pontos de ação necessários\n\n5. Sugestões de resposta\n\nTicket:\n{{ $json.tickets[0].Conversa }}\n\nContexto adicional:\n- Cliente: {{ $('List Tickets').item.json.data[0].customer.name }}\n- Empresa: {{ $('List Tickets').item.json.data[0].customer.organization.name }}\n- Tempo aberto: {{ $json.tickets[0].metrics.tempo_aberto_horas }} horas",
        "options": {}
      },
      "id": "6b4793e1-f65b-4c66-b6c5-3f4e545e4fac",
      "name": "AI Agent1",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -480,
        240
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": true,\n  \"analysis\": {{ JSON.stringify($json.email ) }}\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        -300
      ],
      "id": "d8e1e382-2eb6-40d5-a76f-6ca9e86c79c9",
      "name": "Sucesso3"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={\n  \"success\": false,\n  \"message\": \"Erro ao processar a análise. Verifique os arquivos enviados e tente novamente.\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        -460,
        -180
      ],
      "id": "75786c15-2c91-4ed5-a38f-ffff3736d36f",
      "name": "Erro3"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "7dda017c-4284-45d0-905a-b826bc9e8daf",
              "leftValue": "={{ $json.email }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -660,
        -180
      ],
      "id": "93385e5c-3fd8-4a40-803c-14b234959cd7",
      "name": "If3"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Análise de Conversas</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    /* ======= RESET E ESTILOS GLOBAIS ======= */\n    *, *::before, *::after {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    html, body {\n      height: 100%;\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n      background-size: cover;\n      position: relative;\n      color: #ffffff;\n    }\n    /* Sobreposição para melhor legibilidade */\n    body::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(30, 30, 30, 0.7);\n      z-index: -1;\n    }\n    /* ======= ESTILOS DOS POP-UPS (LOGIN/CADASTRO) E MODAIS ======= */\n    .popup, .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.8);\n      z-index: 1000;\n      visibility: visible;\n      opacity: 1;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    .popup.hidden, .modal.hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n    .popup-content, .modal-content {\n      background-color: #1e1e1e;\n      padding: 30px 40px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      width: 100%;\n      max-width: 400px;\n      text-align: left;\n      color: #ffffff;\n      position: relative;\n    }\n    /* Títulos dos pop-ups, modais e análise */\n    .popup-content h2, \n    .modal-content h2,\n    .analysis-section h2 {\n      text-align: center;\n      color: #0098ff; /* mesma cor do botão */\n      font-size: 26px;\n      margin-bottom: 20px;\n      font-weight: 700;\n      letter-spacing: 0.5px;\n      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.4);\n    }\n    /* Apenas para a seção de análise (exclusivo) */\n    .analysis-section h2 {\n      font-size: 28px;\n      font-weight: 800;\n      margin-bottom: 25px;\n      border-bottom: 2px solid #0098ff;\n      padding-bottom: 10px;\n    }\n    .form-group {\n      margin-bottom: 20px;\n      position: relative;\n    }\n    .form-group label {\n      position: absolute;\n      top: 50%;\n      left: 12px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      color: #ffffff;\n      font-size: 14px;\n      transition: all 0.2s ease;\n      pointer-events: none;\n      z-index: 2;\n    }\n    /* Regra específica: títulos dos campos na seção de análise com a mesma cor do botão de login */\n    .analysis-section .form-group label {\n      color: #0098ff;\n    }\n    .form-group input, .form-group textarea {\n      width: 100%;\n      padding: 14px 12px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      resize: none; /* impede redimensionamento manual */\n      white-space: pre-wrap; /* preserva quebras de linha */\n    }\n    .form-group input:focus, .form-group textarea:focus {\n      border-color: #0098ff;\n      background-color: #1a1a1a;\n    }\n    .form-group input:focus + label,\n    .form-group input:not(:placeholder-shown) + label,\n    .form-group textarea:focus + label,\n    .form-group textarea:not(:placeholder-shown) + label {\n      top: -8px;\n      left: 12px;\n      font-size: 12px;\n      color: #0098ff;\n    }\n    /* Seletor personalizado para telefone */\n    .contact-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 40px;\n    }\n    .custom-select {\n      position: absolute;\n      left: 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      z-index: 3;\n    }\n    .custom-select img {\n      width: 24px;\n      height: 18px;\n      border-radius: 3px;\n    }\n    .phone-input {\n      width: 100%;\n      padding: 10px 12px 10px 75px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      z-index: 1;\n    }\n    .phone-input:focus {\n      border-color: #0098ff;\n      background-color: #1a1a1a;\n    }\n    .phone-input::placeholder {\n      color: transparent;\n    }\n    .phone-input:focus::placeholder {\n      color: transparent;\n    }\n    .contact-label {\n      position: absolute;\n      top: 50%;\n      left: 90px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      font-size: 14px;\n      color: #ffffff;\n      pointer-events: none;\n      transition: all 0.2s ease;\n      z-index: 4;\n    }\n    .contact-label.active {\n      top: -8px;\n      left: 90px;\n      transform: none;\n      font-size: 12px;\n      color: #0098ff;\n    }\n    .custom-options {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      background-color: #1e1e1e;\n      border: 1px solid #0098ff;\n      border-radius: 5px;\n      max-height: 150px;\n      overflow-y: auto;\n      display: none;\n      z-index: 4;\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n      margin-top: 5px;\n    }\n    .custom-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: background-color 0.2s, color 0.2s;\n    }\n    .custom-option:hover,\n    .custom-option[aria-selected=\"true\"] {\n      background-color: #0098ff;\n      color: #1e1e1e;\n    }\n    .custom-option img {\n      width: 20px;\n      height: 15px;\n      margin-right: 8px;\n      border-radius: 2px;\n    }\n    /* Botões com cores personalizadas:\n       - Fundo azul (#0098ff)\n       - Texto quase branco (#faf5f2)\n       - No hover, inverte as cores */\n    button {\n      width: 100%;\n      padding: 12px;\n      background-color: #0098ff;\n      border: none;\n      border-radius: 5px;\n      color: #faf5f2;\n      font-size: 16px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.2s ease, color 0.2s ease;\n    }\n    button:hover {\n      background-color: #faf5f2;\n      color: #0098ff;\n    }\n    .toggle-link {\n      text-align: center;\n      margin-top: 15px;\n    }\n    .toggle-link a {\n      color: #0098ff;\n      text-decoration: none;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    .toggle-link a:hover {\n      text-decoration: underline;\n    }\n    /* ======= ESTILOS DA SEÇÃO DE INFORMAÇÕES DA ANÁLISE ======= */\n    .analysis-section {\n      display: none;\n      margin: 20px auto 0;\n      width: 100%;\n      max-width: 600px;\n      padding: 20px 30px;\n      background: rgba(30, 30, 30, 0.8); /* fundo com transparência */\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      color: #ffffff;\n    }\n    .analysis-section h2 {\n      margin-bottom: 20px;\n    }\n    /* Organização da tela de análise:\n       1. Título\n       2. Cliente\n       3. Empresa\n       4. Comentário\n       5. Resumo */\n    .analysis-section .form-group.title-group {}\n    .analysis-section .form-group.cliente-group {}\n    .analysis-section .form-group.empresa-group {}\n    .analysis-section .form-group.comentario-group {}\n    .analysis-section .form-group.resumo-group {}\n    /* Modal de sucesso e modal de erro */\n    .modal-content p {\n      text-align: center;\n      margin-bottom: 20px;\n      font-size: 16px;\n    }\n    /* Responsividade */\n    @media (max-width: 500px) {\n      .popup-content, .modal-content {\n        padding: 20px 30px;\n      }\n      .analysis-section {\n        padding: 15px 20px;\n        max-width: 350px;\n      }\n      .contact-label {\n        left: 55px;\n      }\n      .phone-input {\n        padding-left: 75px;\n      }\n    }\n    /* Correção para autofill */\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover, \n    input:-webkit-autofill:focus, \n    input:-webkit-autofill:active {\n      -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      -webkit-text-fill-color: #ffffff !important;\n      color: #ffffff !important;\n    }\n    input:-moz-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    input:-ms-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    /* Mensagens de erro */\n    .error {\n      color: #ff6b6b;\n      font-size: 13px;\n      margin-top: 3px;\n      display: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- POP-UP DE LOGIN -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h2>Login</h2>\n      <form id=\"loginForm\">\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"loginEmail\">E-mail</label>\n          <div class=\"error\" id=\"loginEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"loginPassword\">Senha</label>\n          <div class=\"error\" id=\"loginPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"loginButton\">Entrar</button>\n        <div class=\"toggle-link\">\n          <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE CADASTRO -->\n  <div class=\"popup hidden\" id=\"registerPopup\">\n    <div class=\"popup-content\">\n      <h2>Cadastro</h2>\n      <form id=\"registerForm\">\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n          <label for=\"registerName\">Nome</label>\n          <div class=\"error\" id=\"registerNameError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"registerEmail\">E-mail</label>\n          <div class=\"error\" id=\"registerEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <!-- Container com seletor de país e input de telefone -->\n          <div class=\"contact-container\">\n            <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n              <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n            </div>\n            <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required placeholder=\" \">\n            <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n            <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n              <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n              </div>\n              <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n              </div>\n              <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n              </div>\n              <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n              </div>\n            </div>\n          </div>\n          <div class=\"error\" id=\"registerContactError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"registerPassword\">Senha</label>\n          <div class=\"error\" id=\"registerPasswordError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n          <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n          <div class=\"error\" id=\"registerConfirmPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n        <div class=\"toggle-link\">\n          <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- MODAL DE SUCESSO -->\n  <div class=\"modal hidden\" id=\"successModal\">\n    <div class=\"modal-content\">\n      <h2>Sucesso</h2>\n      <p>Cadastro concluído com sucesso!</p>\n      <button type=\"button\" id=\"okSuccess\">OK</button>\n    </div>\n  </div>\n\n  <!-- MODAL DE ERRO -->\n  <div class=\"modal hidden\" id=\"errorModal\">\n    <div class=\"modal-content\">\n      <h2>Erro</h2>\n      <p>Credenciais inválidas!</p>\n      <button type=\"button\" id=\"okError\">OK</button>\n    </div>\n  </div>\n\n  <!-- SEÇÃO DE INFORMAÇÕES DA ANÁLISE (organizada) -->\n  <div class=\"analysis-section\" id=\"analysisSection\">\n    <h2>Informações da Análise</h2>\n    <form id=\"analysisForm\">\n      <!-- Ordem dos campos:\n           1. Título\n           2. Cliente\n           3. Empresa\n           4. Comentário\n           5. Resumo -->\n      <div class=\"form-group title-group\">\n        <input type=\"text\" id=\"analysisTitle\" name=\"title\" required placeholder=\" \" value=\"{{ $('List Tickets').item.json.data[0].subject }}\">\n        <label for=\"analysisTitle\">Título</label>\n      </div>\n      <div class=\"form-group cliente-group\">\n        <input type=\"text\" id=\"analysisClient\" name=\"client\" required placeholder=\" \" value=\"{{ $('List Tickets').item.json.data[0].customer.name }}\">\n        <label for=\"analysisClient\">Cliente</label>\n      </div>\n      <div class=\"form-group empresa-group\">\n        <input type=\"text\" id=\"analysisCompany\" name=\"company\" required placeholder=\" \" value=\"{{ $('List Tickets').item.json.data[0].customer.organization.name }}\">\n        <label for=\"analysisCompany\">Empresa</label>\n      </div>\n      <div class=\"form-group comentario-group\">\n        <!-- No campo Comentário, converte <br> em \\n e comprime múltiplas quebras -->\n        <textarea id=\"analysisComment\" name=\"comment\" rows=\"1\" required placeholder=\" \">\n{{ $('List Tickets').item.json.data[0].message.replace(/<br\\s*\\/?>/gi, \"\\n\").replace(/\\n+/g, \"\\n\") }}\n        </textarea>\n        <label for=\"analysisComment\">Comentario</label>\n      </div>\n      <div class=\"form-group resumo-group\">\n        <!-- No campo Resumo, converte <br> em \\n, remove os caracteres indesejados e espaços extras -->\n        <textarea id=\"analysisImprove\" name=\"improve\" rows=\"1\" required placeholder=\" \">\n{{ $('AI Agent1').item.json.output.replace(/<br\\s*\\/?>/gi, \"\\n\").replace(/[{\\[\\]\"]+/g, \"\").trim() }}\n        </textarea>\n        <label for=\"analysisImprove\">Resumo</label>\n      </div>\n    </form>\n  </div>\n\n  <script>\n    // Função para remover caracteres indesejados do campo Resumo\n    function removeUnwantedCharacters(text) {\n      return text.replace(/[{\\[\\]\"]+/g, \"\");\n    }\n    \n    // Função para reduzir múltiplas quebras de linha para uma única\n    function compressNewlines(text) {\n      return text.replace(/\\n+/g, \"\\n\");\n    }\n    \n    // Função para auto ajustar a altura de um <textarea>\n    function autoResizeTextarea(el) {\n      // Converter as tags <br> em quebras de linha e remover espaços extras\n      el.value = el.value.replace(/<br\\s*\\/?>/gi, \"\\n\").trim();\n      \n      // Se for o campo Comentário, comprimir múltiplas quebras de linha\n      if (el.id === \"analysisComment\") {\n        el.value = compressNewlines(el.value);\n      }\n      \n      // Se for o campo Resumo, remover os caracteres indesejados\n      if (el.id === \"analysisImprove\") {\n        el.value = removeUnwantedCharacters(el.value);\n      }\n      \n      el.style.height = 'auto';\n      el.style.height = el.scrollHeight + 'px';\n    }\n\n    window.addEventListener('DOMContentLoaded', () => {\n      const loginPopup = document.getElementById('loginPopup');\n      const registerPopup = document.getElementById('registerPopup');\n      const successModal = document.getElementById('successModal');\n      const errorModal = document.getElementById('errorModal');\n      const analysisSection = document.getElementById('analysisSection');\n\n      function applyAutoResizeToTextareas() {\n        const textareas = analysisSection.querySelectorAll('textarea');\n        textareas.forEach(textarea => autoResizeTextarea(textarea));\n      }\n\n      // Eventos de troca entre pop-ups\n      document.getElementById('showRegister').addEventListener('click', () => {\n        loginPopup.classList.add('hidden');\n        registerPopup.classList.remove('hidden');\n      });\n      document.getElementById('showLogin').addEventListener('click', () => {\n        registerPopup.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n      document.getElementById('okSuccess').addEventListener('click', () => {\n        successModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n      document.getElementById('okError').addEventListener('click', () => {\n        errorModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      /* Evento para o botão de Login */\n      document.getElementById('loginButton').addEventListener('click', () => {\n        const email = document.getElementById('loginEmail').value.trim();\n        const password = document.getElementById('loginPassword').value.trim();\n        let isValid = true;\n        \n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n          showError('loginEmailError', 'Email inválido');\n          isValid = false;\n        } else {\n          clearError('loginEmailError');\n        }\n        if (password.length < 6) {\n          showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n          isValid = false;\n        } else {\n          clearError('loginPasswordError');\n        }\n        if (isValid) {\n          fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log(\"Retorno do login:\", data);\n            if (!data.success) {\n              loginPopup.classList.add('hidden');\n              errorModal.classList.remove('hidden');\n            } else {\n              loginPopup.classList.add('hidden');\n              analysisSection.style.display = 'block';\n              applyAutoResizeToTextareas();\n            }\n          })\n          .catch(error => {\n            console.error(\"Erro no login:\", error);\n            alert(\"Erro no login. Tente novamente mais tarde.\");\n          });\n        }\n      });\n\n      /* Evento para o botão de Cadastro */\n      document.getElementById('registerButton').addEventListener('click', () => {\n        const name = document.getElementById('registerName').value.trim();\n        const email = document.getElementById('registerEmail').value.trim();\n        const contact = document.getElementById('registerContact').value.trim();\n        const password = document.getElementById('registerPassword').value;\n        const confirmPassword = document.getElementById('registerConfirmPassword').value;\n\n        if (password !== confirmPassword) {\n          alert(\"As senhas não conferem.\");\n          return;\n        }\n\n        const cadastroData = { name, email, contact, password };\n\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/criaconta\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(cadastroData)\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Retorno do cadastro:\", data);\n          if (data.success) {\n            registerPopup.classList.add('hidden');\n            successModal.classList.remove('hidden');\n          } else {\n            alert(data.message || \"Erro ao realizar cadastro.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no cadastro:\", error);\n          alert(\"Erro ao realizar cadastro. Tente novamente mais tarde.\");\n        });\n      });\n\n      function showError(id, message) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = message;\n        errorElem.style.display = 'block';\n      }\n      function clearError(id) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = \"\";\n        errorElem.style.display = 'none';\n      }\n\n      /* SELETOR DE PAÍS PARA CONTATO */\n      const customSelect = document.getElementById('customSelect');\n      const customOptions = document.getElementById('customOptions');\n      const currentFlag = document.getElementById('currentFlag');\n      const phoneInput = document.getElementById('registerContact');\n\n      customSelect.addEventListener('click', (e) => {\n        e.stopPropagation();\n        const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n        customSelect.setAttribute('aria-expanded', !expanded);\n        customOptions.style.display = expanded ? 'none' : 'block';\n      });\n      customOptions.querySelectorAll('.custom-option').forEach(option => {\n        option.addEventListener('click', () => {\n          const flagSrc = option.querySelector('img').src;\n          const countryCode = option.getAttribute('data-value');\n          currentFlag.src = flagSrc;\n          phoneInput.value = countryCode + ' ';\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        });\n      });\n      document.addEventListener('click', (e) => {\n        if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        }\n      });\n\n      /* LABEL FLUTUANTE PARA CONTATO */\n      const registerContactElem = document.getElementById('registerContact');\n      const contactLabel = document.querySelector('.contact-container .contact-label');\n      function updateContactLabel() {\n        if (document.activeElement === registerContactElem || registerContactElem.value.trim() !== '') {\n          contactLabel.classList.add('active');\n        } else {\n          contactLabel.classList.remove('active');\n        }\n      }\n      registerContactElem.addEventListener('focus', updateContactLabel);\n      registerContactElem.addEventListener('blur', updateContactLabel);\n      registerContactElem.addEventListener('input', updateContactLabel);\n      window.addEventListener('DOMContentLoaded', updateContactLabel);\n    });\n  </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        40,
        240
      ],
      "id": "bb937e89-f4f2-4981-878c-1e8b64325708",
      "name": "HTML"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n  <meta charset=\"UTF-8\" />\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <title>Análise de Conversas</title>\n  <link href=\"https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n  <style>\n    /* ======= RESET E ESTILOS GLOBAIS ======= */\n    *, *::before, *::after {\n      box-sizing: border-box;\n      margin: 0;\n      padding: 0;\n    }\n    html, body {\n      height: 100%;\n      font-family: 'Space Grotesk', Arial, sans-serif;\n      background: url('https://i.imgur.com/9LKPTGy.jpeg') no-repeat center center fixed;\n      background-size: cover;\n      position: relative;\n      color: #ffffff;\n    }\n    /* Sobreposição para melhor legibilidade */\n    body::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(30, 30, 30, 0.7);\n      z-index: -1;\n    }\n    /* ======= ESTILOS DOS POP-UPS (LOGIN/CADASTRO) E MODAIS ======= */\n    .popup, .modal {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background: rgba(0, 0, 0, 0.8);\n      z-index: 1000;\n      visibility: visible;\n      opacity: 1;\n      transition: opacity 0.3s ease, visibility 0.3s ease;\n    }\n    .popup.hidden, .modal.hidden {\n      visibility: hidden;\n      opacity: 0;\n    }\n    .popup-content, .modal-content {\n      background-color: #1e1e1e;\n      padding: 30px 40px;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      width: 100%;\n      max-width: 400px;\n      text-align: left;\n      color: #ffffff;\n      position: relative;\n    }\n    /* Títulos (h2) dos pop-ups, modais e seção de análise */\n    .popup-content h2, \n    .modal-content h2,\n    .analysis-section h2 {\n      text-align: center;\n      color: #0098ff;\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    .form-group {\n      margin-bottom: 20px;\n      position: relative;\n    }\n    .form-group label {\n      position: absolute;\n      top: 50%;\n      left: 12px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      color: #ffffff;\n      font-size: 14px;\n      transition: all 0.2s ease;\n      pointer-events: none;\n      z-index: 2;\n    }\n    /* Regra específica: títulos dos campos na seção de análise com a mesma cor do botão de login */\n    .analysis-section .form-group label {\n      color: #0098ff;\n    }\n    .form-group input, .form-group textarea {\n      width: 100%;\n      padding: 14px 12px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      resize: none; /* impede redimensionamento manual */\n      white-space: pre-wrap; /* preserva quebras de linha */\n    }\n    .form-group input:focus, .form-group textarea:focus {\n      border-color: #0098ff;\n      background-color: #1a1a1a;\n    }\n    .form-group input:focus + label,\n    .form-group input:not(:placeholder-shown) + label,\n    .form-group textarea:focus + label,\n    .form-group textarea:not(:placeholder-shown) + label {\n      top: -8px;\n      left: 12px;\n      font-size: 12px;\n      color: #0098ff;\n    }\n    /* Seletor personalizado para telefone */\n    .contact-container {\n      position: relative;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 40px;\n    }\n    .custom-select {\n      position: absolute;\n      left: 12px;\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      z-index: 3;\n    }\n    .custom-select img {\n      width: 24px;\n      height: 18px;\n      border-radius: 3px;\n    }\n    .phone-input {\n      width: 100%;\n      padding: 10px 12px 10px 75px;\n      border: 1px solid #444;\n      border-radius: 5px;\n      font-size: 14px;\n      background-color: #1e1e1e;\n      color: #ffffff;\n      transition: border-color 0.2s ease, background-color 0.2s ease;\n      z-index: 1;\n    }\n    .phone-input:focus {\n      border-color: #0098ff;\n      background-color: #1a1a1a;\n    }\n    .phone-input::placeholder {\n      color: transparent;\n    }\n    .phone-input:focus::placeholder {\n      color: transparent;\n    }\n    .contact-label {\n      position: absolute;\n      top: 50%;\n      left: 90px;\n      transform: translateY(-50%);\n      background-color: #1e1e1e;\n      padding: 0 5px;\n      font-size: 14px;\n      color: #ffffff;\n      pointer-events: none;\n      transition: all 0.2s ease;\n      z-index: 4;\n    }\n    .contact-label.active {\n      top: -8px;\n      left: 90px;\n      transform: none;\n      font-size: 12px;\n      color: #0098ff;\n    }\n    .custom-options {\n      position: absolute;\n      top: 100%;\n      left: 0;\n      width: 100%;\n      background-color: #1e1e1e;\n      border: 1px solid #0098ff;\n      border-radius: 5px;\n      max-height: 150px;\n      overflow-y: auto;\n      display: none;\n      z-index: 4;\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n      margin-top: 5px;\n    }\n    .custom-option {\n      display: flex;\n      align-items: center;\n      padding: 8px 12px;\n      cursor: pointer;\n      transition: background-color 0.2s, color 0.2s;\n    }\n    .custom-option:hover,\n    .custom-option[aria-selected=\"true\"] {\n      background-color: #0098ff;\n      color: #1e1e1e;\n    }\n    .custom-option img {\n      width: 20px;\n      height: 15px;\n      margin-right: 8px;\n      border-radius: 2px;\n    }\n    /* Botões com cores personalizadas:\n       - Fundo azul (#0098ff)\n       - Texto quase branco (#faf5f2)\n       - No hover, inverte as cores */\n    button {\n      width: 100%;\n      padding: 12px;\n      background-color: #0098ff;\n      border: none;\n      border-radius: 5px;\n      color: #faf5f2;\n      font-size: 16px;\n      cursor: pointer;\n      font-weight: 600;\n      transition: background-color 0.2s ease, color 0.2s ease;\n    }\n    button:hover {\n      background-color: #faf5f2;\n      color: #0098ff;\n    }\n    .toggle-link {\n      text-align: center;\n      margin-top: 15px;\n    }\n    .toggle-link a {\n      color: #0098ff;\n      text-decoration: none;\n      font-size: 14px;\n      cursor: pointer;\n    }\n    .toggle-link a:hover {\n      text-decoration: underline;\n    }\n    /* ======= ESTILOS DA SEÇÃO DE INFORMAÇÕES DA ANÁLISE ======= */\n    .analysis-section {\n      display: none;\n      margin: 20px auto 0;\n      width: 100%;\n      max-width: 600px;\n      padding: 20px 30px;\n      background: #1e1e1e;\n      border-radius: 10px;\n      box-shadow: 0 4px 15px rgba(0,0,0,0.4);\n      color: #ffffff;\n    }\n    .analysis-section h2 {\n      margin-bottom: 20px;\n    }\n    /* Organização da tela de análise:\n       1. Título\n       2. Cliente\n       3. Empresa\n       4. Comentário\n       5. Resumo */\n    .analysis-section .form-group.title-group {}\n    .analysis-section .form-group.cliente-group {}\n    .analysis-section .form-group.empresa-group {}\n    .analysis-section .form-group.comentario-group {}\n    .analysis-section .form-group.resumo-group {}\n    /* Modal de sucesso e modal de erro */\n    .modal-content p {\n      text-align: center;\n      margin-bottom: 20px;\n      font-size: 16px;\n    }\n    /* Responsividade */\n    @media (max-width: 500px) {\n      .popup-content, .modal-content {\n        padding: 20px 30px;\n      }\n      .analysis-section {\n        padding: 15px 20px;\n        max-width: 350px;\n      }\n      .contact-label {\n        left: 55px;\n      }\n      .phone-input {\n        padding-left: 75px;\n      }\n    }\n    /* Correção para autofill */\n    input:-webkit-autofill,\n    input:-webkit-autofill:hover, \n    input:-webkit-autofill:focus, \n    input:-webkit-autofill:active {\n      -webkit-box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      box-shadow: 0 0 0 30px #1e1e1e inset !important;\n      -webkit-text-fill-color: #ffffff !important;\n      color: #ffffff !important;\n    }\n    input:-moz-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    input:-ms-autofill {\n      background-color: #1e1e1e !important;\n      color: #ffffff !important;\n    }\n    /* Mensagens de erro */\n    .error {\n      color: #ff6b6b;\n      font-size: 13px;\n      margin-top: 3px;\n      display: none;\n    }\n  </style>\n</head>\n<body>\n  <!-- POP-UP DE LOGIN -->\n  <div class=\"popup\" id=\"loginPopup\">\n    <div class=\"popup-content\">\n      <h2>Login</h2>\n      <form id=\"loginForm\">\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"loginEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"loginEmail\">E-mail</label>\n          <div class=\"error\" id=\"loginEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"loginPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"loginPassword\">Senha</label>\n          <div class=\"error\" id=\"loginPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"loginButton\">Entrar</button>\n        <div class=\"toggle-link\">\n          <p>Não tem uma conta? <a id=\"showRegister\">Cadastrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- POP-UP DE CADASTRO -->\n  <div class=\"popup hidden\" id=\"registerPopup\">\n    <div class=\"popup-content\">\n      <h2>Cadastro</h2>\n      <form id=\"registerForm\">\n        <div class=\"form-group\">\n          <input type=\"text\" id=\"registerName\" name=\"name\" required placeholder=\" \">\n          <label for=\"registerName\">Nome</label>\n          <div class=\"error\" id=\"registerNameError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"email\" id=\"registerEmail\" name=\"email\" required placeholder=\" \">\n          <label for=\"registerEmail\">E-mail</label>\n          <div class=\"error\" id=\"registerEmailError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <!-- Container com seletor de país e input de telefone -->\n          <div class=\"contact-container\">\n            <div class=\"custom-select\" id=\"customSelect\" aria-haspopup=\"listbox\" aria-expanded=\"false\" role=\"button\" tabindex=\"0\" aria-label=\"Selecione o país\">\n              <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\" id=\"currentFlag\">\n            </div>\n            <input type=\"tel\" id=\"registerContact\" name=\"contact\" class=\"phone-input\" required placeholder=\" \">\n            <label for=\"registerContact\" class=\"contact-label\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Contato</label>\n            <div class=\"custom-options\" id=\"customOptions\" role=\"listbox\" tabindex=\"-1\">\n              <div class=\"custom-option\" data-value=\"+55\" data-flag=\"br\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/br.png\" alt=\"Brasil\">Brasil (+55)\n              </div>\n              <div class=\"custom-option\" data-value=\"+1\" data-flag=\"us\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/us.png\" alt=\"Estados Unidos\">Estados Unidos (+1)\n              </div>\n              <div class=\"custom-option\" data-value=\"+44\" data-flag=\"gb\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/gb.png\" alt=\"Reino Unido\">Reino Unido (+44)\n              </div>\n              <div class=\"custom-option\" data-value=\"+49\" data-flag=\"de\" role=\"option\" aria-selected=\"false\" tabindex=\"0\">\n                <img src=\"https://flagcdn.com/24x18/de.png\" alt=\"Alemanha\">Alemanha (+49)\n              </div>\n            </div>\n          </div>\n          <div class=\"error\" id=\"registerContactError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerPassword\" name=\"password\" required placeholder=\" \">\n          <label for=\"registerPassword\">Senha</label>\n          <div class=\"error\" id=\"registerPasswordError\"></div>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"password\" id=\"registerConfirmPassword\" name=\"confirmPassword\" required placeholder=\" \">\n          <label for=\"registerConfirmPassword\">Confirmar Senha</label>\n          <div class=\"error\" id=\"registerConfirmPasswordError\"></div>\n        </div>\n        <button type=\"button\" id=\"registerButton\">Cadastrar</button>\n        <div class=\"toggle-link\">\n          <p>Já tem uma conta? <a id=\"showLogin\">Entrar</a></p>\n        </div>\n      </form>\n    </div>\n  </div>\n\n  <!-- MODAL DE SUCESSO -->\n  <div class=\"modal hidden\" id=\"successModal\">\n    <div class=\"modal-content\">\n      <h2>Sucesso</h2>\n      <p>Cadastro concluído com sucesso!</p>\n      <button type=\"button\" id=\"okSuccess\">OK</button>\n    </div>\n  </div>\n\n  <!-- MODAL DE ERRO -->\n  <div class=\"modal hidden\" id=\"errorModal\">\n    <div class=\"modal-content\">\n      <h2>Erro</h2>\n      <p>Credenciais inválidas!</p>\n      <button type=\"button\" id=\"okError\">OK</button>\n    </div>\n  </div>\n\n  <!-- SEÇÃO DE INFORMAÇÕES DA ANÁLISE (organizada) -->\n  <div class=\"analysis-section\" id=\"analysisSection\">\n    <h2>Informações da Análise</h2>\n    <form id=\"analysisForm\">\n      <!-- Ordem dos campos:\n           1. Título\n           2. Cliente\n           3. Empresa\n           4. Comentário\n           5. Resumo -->\n      <div class=\"form-group title-group\">\n        <input type=\"text\" id=\"analysisTitle\" name=\"title\" required placeholder=\" \" value=\"{{ $('List Tickets').item.json.data[0].subject }}\">\n        <label for=\"analysisTitle\">Título</label>\n      </div>\n      <div class=\"form-group cliente-group\">\n        <input type=\"text\" id=\"analysisClient\" name=\"client\" required placeholder=\" \" value=\"{{ $('List Tickets').item.json.data[0].customer.name }}\">\n        <label for=\"analysisClient\">Cliente</label>\n      </div>\n      <div class=\"form-group empresa-group\">\n        <input type=\"text\" id=\"analysisCompany\" name=\"company\" required placeholder=\" \" value=\"{{ $('List Tickets').item.json.data[0].customer.organization.name }}\">\n        <label for=\"analysisCompany\">Empresa</label>\n      </div>\n      <div class=\"form-group comentario-group\">\n        <!-- No campo Comentário, converte <br> em \\n e comprime múltiplas quebras -->\n        <textarea id=\"analysisComment\" name=\"comment\" rows=\"1\" required placeholder=\" \">\n{{ $('List Tickets').item.json.data[0].message.replace(/<br\\s*\\/?>/gi, \"\\n\").replace(/\\n+/g, \"\\n\") }}\n        </textarea>\n        <label for=\"analysisComment\">Comentario</label>\n      </div>\n      <div class=\"form-group resumo-group\">\n        <!-- No campo Resumo, converte <br> em \\n, remove os caracteres indesejados e espaços extras -->\n        <textarea id=\"analysisImprove\" name=\"improve\" rows=\"1\" required placeholder=\" \">\n{{ $('AI Agent1').item.json.output.replace(/<br\\s*\\/?>/gi, \"\\n\").replace(/[{\\[\\]\"]+/g, \"\").trim() }}\n        </textarea>\n        <label for=\"analysisImprove\">Resumo</label>\n      </div>\n    </form>\n  </div>\n\n  <script>\n    // Função para remover caracteres indesejados do campo Resumo\n    function removeUnwantedCharacters(text) {\n      return text.replace(/[{\\[\\]\"]+/g, \"\");\n    }\n    \n    // Função para reduzir múltiplas quebras de linha para uma única\n    function compressNewlines(text) {\n      return text.replace(/\\n+/g, \"\\n\");\n    }\n    \n    // Função para auto ajustar a altura de um <textarea>\n    function autoResizeTextarea(el) {\n      // Converter as tags <br> em quebras de linha e remover espaços extras\n      el.value = el.value.replace(/<br\\s*\\/?>/gi, \"\\n\").trim();\n      \n      // Se for o campo Comentário, comprimir múltiplas quebras de linha\n      if (el.id === \"analysisComment\") {\n        el.value = compressNewlines(el.value);\n      }\n      \n      // Se for o campo Resumo, remover os caracteres indesejados\n      if (el.id === \"analysisImprove\") {\n        el.value = removeUnwantedCharacters(el.value);\n      }\n      \n      el.style.height = 'auto';\n      el.style.height = el.scrollHeight + 'px';\n    }\n\n    window.addEventListener('DOMContentLoaded', () => {\n      const loginPopup = document.getElementById('loginPopup');\n      const registerPopup = document.getElementById('registerPopup');\n      const successModal = document.getElementById('successModal');\n      const errorModal = document.getElementById('errorModal');\n      const analysisSection = document.getElementById('analysisSection');\n\n      function applyAutoResizeToTextareas() {\n        const textareas = analysisSection.querySelectorAll('textarea');\n        textareas.forEach(textarea => autoResizeTextarea(textarea));\n      }\n\n      // Eventos de troca entre pop-ups\n      document.getElementById('showRegister').addEventListener('click', () => {\n        loginPopup.classList.add('hidden');\n        registerPopup.classList.remove('hidden');\n      });\n      document.getElementById('showLogin').addEventListener('click', () => {\n        registerPopup.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n      document.getElementById('okSuccess').addEventListener('click', () => {\n        successModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n      document.getElementById('okError').addEventListener('click', () => {\n        errorModal.classList.add('hidden');\n        loginPopup.classList.remove('hidden');\n      });\n\n      /* Evento para o botão de Login */\n      document.getElementById('loginButton').addEventListener('click', () => {\n        const email = document.getElementById('loginEmail').value.trim();\n        const password = document.getElementById('loginPassword').value.trim();\n        let isValid = true;\n        \n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n          showError('loginEmailError', 'Email inválido');\n          isValid = false;\n        } else {\n          clearError('loginEmailError');\n        }\n        if (password.length < 6) {\n          showError('loginPasswordError', 'Senha deve ter no mínimo 6 caracteres');\n          isValid = false;\n        } else {\n          clearError('loginPasswordError');\n        }\n        if (isValid) {\n          fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/retorno\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({ email, password })\n          })\n          .then(response => response.json())\n          .then(data => {\n            console.log(\"Retorno do login:\", data);\n            if (!data.success) {\n              loginPopup.classList.add('hidden');\n              errorModal.classList.remove('hidden');\n            } else {\n              loginPopup.classList.add('hidden');\n              analysisSection.style.display = 'block';\n              applyAutoResizeToTextareas();\n            }\n          })\n          .catch(error => {\n            console.error(\"Erro no login:\", error);\n            alert(\"Erro no login. Tente novamente mais tarde.\");\n          });\n        }\n      });\n\n      /* Evento para o botão de Cadastro */\n      document.getElementById('registerButton').addEventListener('click', () => {\n        const name = document.getElementById('registerName').value.trim();\n        const email = document.getElementById('registerEmail').value.trim();\n        const contact = document.getElementById('registerContact').value.trim();\n        const password = document.getElementById('registerPassword').value;\n        const confirmPassword = document.getElementById('registerConfirmPassword').value;\n\n        if (password !== confirmPassword) {\n          alert(\"As senhas não conferem.\");\n          return;\n        }\n\n        const cadastroData = { name, email, contact, password };\n\n        fetch(\"https://n8n-n8n-webhook.tkbczu.easypanel.host/webhook/criaconta\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(cadastroData)\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log(\"Retorno do cadastro:\", data);\n          if (data.success) {\n            registerPopup.classList.add('hidden');\n            successModal.classList.remove('hidden');\n          } else {\n            alert(data.message || \"Erro ao realizar cadastro.\");\n          }\n        })\n        .catch(error => {\n          console.error(\"Erro no cadastro:\", error);\n          alert(\"Erro ao realizar cadastro. Tente novamente mais tarde.\");\n        });\n      });\n\n      function showError(id, message) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = message;\n        errorElem.style.display = 'block';\n      }\n      function clearError(id) {\n        const errorElem = document.getElementById(id);\n        errorElem.textContent = \"\";\n        errorElem.style.display = 'none';\n      }\n\n      /* SELETOR DE PAÍS PARA CONTATO */\n      const customSelect = document.getElementById('customSelect');\n      const customOptions = document.getElementById('customOptions');\n      const currentFlag = document.getElementById('currentFlag');\n      const phoneInput = document.getElementById('registerContact');\n\n      customSelect.addEventListener('click', (e) => {\n        e.stopPropagation();\n        const expanded = customSelect.getAttribute('aria-expanded') === 'true';\n        customSelect.setAttribute('aria-expanded', !expanded);\n        customOptions.style.display = expanded ? 'none' : 'block';\n      });\n      customOptions.querySelectorAll('.custom-option').forEach(option => {\n        option.addEventListener('click', () => {\n          const flagSrc = option.querySelector('img').src;\n          const countryCode = option.getAttribute('data-value');\n          currentFlag.src = flagSrc;\n          phoneInput.value = countryCode + ' ';\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        });\n      });\n      document.addEventListener('click', (e) => {\n        if (!customSelect.contains(e.target) && !customOptions.contains(e.target)) {\n          customOptions.style.display = 'none';\n          customSelect.setAttribute('aria-expanded', 'false');\n        }\n      });\n\n      /* LABEL FLUTUANTE PARA CONTATO */\n      const registerContactElem = document.getElementById('registerContact');\n      const contactLabel = document.querySelector('.contact-container .contact-label');\n      function updateContactLabel() {\n        if (document.activeElement === registerContactElem || registerContactElem.value.trim() !== '') {\n          contactLabel.classList.add('active');\n        } else {\n          contactLabel.classList.remove('active');\n        }\n      }\n      registerContactElem.addEventListener('focus', updateContactLabel);\n      registerContactElem.addEventListener('blur', updateContactLabel);\n      registerContactElem.addEventListener('input', updateContactLabel);\n      window.addEventListener('DOMContentLoaded', updateContactLabel);\n    });\n  </script>\n</body>\n</html>\n"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        40,
        60
      ],
      "id": "1576840f-dbb7-46f4-af4c-bedb8cba73b5",
      "name": "HTML2"
    }
  ],
  "connections": {
    "Serve Frontend": {
      "main": [
        [
          {
            "node": "List Tickets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Sucesso",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "If3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook2": {
      "main": [
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "List Tickets": {
      "main": [
        [
          {
            "node": "Prepare Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Data": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If3": {
      "main": [
        [
          {
            "node": "Sucesso3",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Erro3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "a71c005e-c90c-49b1-b9cf-37a8b513d07d",
  "triggerCount": 3,
  "tags": []
}